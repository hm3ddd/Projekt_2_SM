
Lab6Better.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000a6bc  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001e0  0800a88c  0800a88c  0001a88c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800aa6c  0800aa6c  000200e0  2**0
                  CONTENTS
  4 .ARM          00000008  0800aa6c  0800aa6c  0001aa6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800aa74  0800aa74  000200e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800aa74  0800aa74  0001aa74  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800aa78  0800aa78  0001aa78  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000e0  20000000  0800aa7c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000420  200000e0  0800ab5c  000200e0  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  20000500  0800ab5c  00020500  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000200e0  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020110  2**0
                  CONTENTS, READONLY
 13 .debug_info   00019ead  00000000  00000000  00020153  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00003977  00000000  00000000  0003a000  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00001508  00000000  00000000  0003d978  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00001066  00000000  00000000  0003ee80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0002885e  00000000  00000000  0003fee6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0001c5d7  00000000  00000000  00068744  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000f6694  00000000  00000000  00084d1b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00005e7c  00000000  00000000  0017b3b0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000077  00000000  00000000  0018122c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200000e0 	.word	0x200000e0
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800a874 	.word	0x0800a874

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200000e4 	.word	0x200000e4
 800020c:	0800a874 	.word	0x0800a874

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_drsub>:
 80002b0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002b4:	e002      	b.n	80002bc <__adddf3>
 80002b6:	bf00      	nop

080002b8 <__aeabi_dsub>:
 80002b8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002bc <__adddf3>:
 80002bc:	b530      	push	{r4, r5, lr}
 80002be:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002c2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002c6:	ea94 0f05 	teq	r4, r5
 80002ca:	bf08      	it	eq
 80002cc:	ea90 0f02 	teqeq	r0, r2
 80002d0:	bf1f      	itttt	ne
 80002d2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002d6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002da:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002de:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002e2:	f000 80e2 	beq.w	80004aa <__adddf3+0x1ee>
 80002e6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ea:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ee:	bfb8      	it	lt
 80002f0:	426d      	neglt	r5, r5
 80002f2:	dd0c      	ble.n	800030e <__adddf3+0x52>
 80002f4:	442c      	add	r4, r5
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	ea82 0000 	eor.w	r0, r2, r0
 8000302:	ea83 0101 	eor.w	r1, r3, r1
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	2d36      	cmp	r5, #54	; 0x36
 8000310:	bf88      	it	hi
 8000312:	bd30      	pophi	{r4, r5, pc}
 8000314:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000318:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800031c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000320:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000324:	d002      	beq.n	800032c <__adddf3+0x70>
 8000326:	4240      	negs	r0, r0
 8000328:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800032c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000330:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000334:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000338:	d002      	beq.n	8000340 <__adddf3+0x84>
 800033a:	4252      	negs	r2, r2
 800033c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000340:	ea94 0f05 	teq	r4, r5
 8000344:	f000 80a7 	beq.w	8000496 <__adddf3+0x1da>
 8000348:	f1a4 0401 	sub.w	r4, r4, #1
 800034c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000350:	db0d      	blt.n	800036e <__adddf3+0xb2>
 8000352:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000356:	fa22 f205 	lsr.w	r2, r2, r5
 800035a:	1880      	adds	r0, r0, r2
 800035c:	f141 0100 	adc.w	r1, r1, #0
 8000360:	fa03 f20e 	lsl.w	r2, r3, lr
 8000364:	1880      	adds	r0, r0, r2
 8000366:	fa43 f305 	asr.w	r3, r3, r5
 800036a:	4159      	adcs	r1, r3
 800036c:	e00e      	b.n	800038c <__adddf3+0xd0>
 800036e:	f1a5 0520 	sub.w	r5, r5, #32
 8000372:	f10e 0e20 	add.w	lr, lr, #32
 8000376:	2a01      	cmp	r2, #1
 8000378:	fa03 fc0e 	lsl.w	ip, r3, lr
 800037c:	bf28      	it	cs
 800037e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000382:	fa43 f305 	asr.w	r3, r3, r5
 8000386:	18c0      	adds	r0, r0, r3
 8000388:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800038c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000390:	d507      	bpl.n	80003a2 <__adddf3+0xe6>
 8000392:	f04f 0e00 	mov.w	lr, #0
 8000396:	f1dc 0c00 	rsbs	ip, ip, #0
 800039a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800039e:	eb6e 0101 	sbc.w	r1, lr, r1
 80003a2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003a6:	d31b      	bcc.n	80003e0 <__adddf3+0x124>
 80003a8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003ac:	d30c      	bcc.n	80003c8 <__adddf3+0x10c>
 80003ae:	0849      	lsrs	r1, r1, #1
 80003b0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003b4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003b8:	f104 0401 	add.w	r4, r4, #1
 80003bc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003c0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003c4:	f080 809a 	bcs.w	80004fc <__adddf3+0x240>
 80003c8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003cc:	bf08      	it	eq
 80003ce:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003d2:	f150 0000 	adcs.w	r0, r0, #0
 80003d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003da:	ea41 0105 	orr.w	r1, r1, r5
 80003de:	bd30      	pop	{r4, r5, pc}
 80003e0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003e4:	4140      	adcs	r0, r0
 80003e6:	eb41 0101 	adc.w	r1, r1, r1
 80003ea:	3c01      	subs	r4, #1
 80003ec:	bf28      	it	cs
 80003ee:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003f2:	d2e9      	bcs.n	80003c8 <__adddf3+0x10c>
 80003f4:	f091 0f00 	teq	r1, #0
 80003f8:	bf04      	itt	eq
 80003fa:	4601      	moveq	r1, r0
 80003fc:	2000      	moveq	r0, #0
 80003fe:	fab1 f381 	clz	r3, r1
 8000402:	bf08      	it	eq
 8000404:	3320      	addeq	r3, #32
 8000406:	f1a3 030b 	sub.w	r3, r3, #11
 800040a:	f1b3 0220 	subs.w	r2, r3, #32
 800040e:	da0c      	bge.n	800042a <__adddf3+0x16e>
 8000410:	320c      	adds	r2, #12
 8000412:	dd08      	ble.n	8000426 <__adddf3+0x16a>
 8000414:	f102 0c14 	add.w	ip, r2, #20
 8000418:	f1c2 020c 	rsb	r2, r2, #12
 800041c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000420:	fa21 f102 	lsr.w	r1, r1, r2
 8000424:	e00c      	b.n	8000440 <__adddf3+0x184>
 8000426:	f102 0214 	add.w	r2, r2, #20
 800042a:	bfd8      	it	le
 800042c:	f1c2 0c20 	rsble	ip, r2, #32
 8000430:	fa01 f102 	lsl.w	r1, r1, r2
 8000434:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000438:	bfdc      	itt	le
 800043a:	ea41 010c 	orrle.w	r1, r1, ip
 800043e:	4090      	lslle	r0, r2
 8000440:	1ae4      	subs	r4, r4, r3
 8000442:	bfa2      	ittt	ge
 8000444:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000448:	4329      	orrge	r1, r5
 800044a:	bd30      	popge	{r4, r5, pc}
 800044c:	ea6f 0404 	mvn.w	r4, r4
 8000450:	3c1f      	subs	r4, #31
 8000452:	da1c      	bge.n	800048e <__adddf3+0x1d2>
 8000454:	340c      	adds	r4, #12
 8000456:	dc0e      	bgt.n	8000476 <__adddf3+0x1ba>
 8000458:	f104 0414 	add.w	r4, r4, #20
 800045c:	f1c4 0220 	rsb	r2, r4, #32
 8000460:	fa20 f004 	lsr.w	r0, r0, r4
 8000464:	fa01 f302 	lsl.w	r3, r1, r2
 8000468:	ea40 0003 	orr.w	r0, r0, r3
 800046c:	fa21 f304 	lsr.w	r3, r1, r4
 8000470:	ea45 0103 	orr.w	r1, r5, r3
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f1c4 040c 	rsb	r4, r4, #12
 800047a:	f1c4 0220 	rsb	r2, r4, #32
 800047e:	fa20 f002 	lsr.w	r0, r0, r2
 8000482:	fa01 f304 	lsl.w	r3, r1, r4
 8000486:	ea40 0003 	orr.w	r0, r0, r3
 800048a:	4629      	mov	r1, r5
 800048c:	bd30      	pop	{r4, r5, pc}
 800048e:	fa21 f004 	lsr.w	r0, r1, r4
 8000492:	4629      	mov	r1, r5
 8000494:	bd30      	pop	{r4, r5, pc}
 8000496:	f094 0f00 	teq	r4, #0
 800049a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800049e:	bf06      	itte	eq
 80004a0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004a4:	3401      	addeq	r4, #1
 80004a6:	3d01      	subne	r5, #1
 80004a8:	e74e      	b.n	8000348 <__adddf3+0x8c>
 80004aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ae:	bf18      	it	ne
 80004b0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004b4:	d029      	beq.n	800050a <__adddf3+0x24e>
 80004b6:	ea94 0f05 	teq	r4, r5
 80004ba:	bf08      	it	eq
 80004bc:	ea90 0f02 	teqeq	r0, r2
 80004c0:	d005      	beq.n	80004ce <__adddf3+0x212>
 80004c2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004c6:	bf04      	itt	eq
 80004c8:	4619      	moveq	r1, r3
 80004ca:	4610      	moveq	r0, r2
 80004cc:	bd30      	pop	{r4, r5, pc}
 80004ce:	ea91 0f03 	teq	r1, r3
 80004d2:	bf1e      	ittt	ne
 80004d4:	2100      	movne	r1, #0
 80004d6:	2000      	movne	r0, #0
 80004d8:	bd30      	popne	{r4, r5, pc}
 80004da:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004de:	d105      	bne.n	80004ec <__adddf3+0x230>
 80004e0:	0040      	lsls	r0, r0, #1
 80004e2:	4149      	adcs	r1, r1
 80004e4:	bf28      	it	cs
 80004e6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ea:	bd30      	pop	{r4, r5, pc}
 80004ec:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004f0:	bf3c      	itt	cc
 80004f2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004f6:	bd30      	popcc	{r4, r5, pc}
 80004f8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004fc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000500:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000504:	f04f 0000 	mov.w	r0, #0
 8000508:	bd30      	pop	{r4, r5, pc}
 800050a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800050e:	bf1a      	itte	ne
 8000510:	4619      	movne	r1, r3
 8000512:	4610      	movne	r0, r2
 8000514:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000518:	bf1c      	itt	ne
 800051a:	460b      	movne	r3, r1
 800051c:	4602      	movne	r2, r0
 800051e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000522:	bf06      	itte	eq
 8000524:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000528:	ea91 0f03 	teqeq	r1, r3
 800052c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000530:	bd30      	pop	{r4, r5, pc}
 8000532:	bf00      	nop

08000534 <__aeabi_ui2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f04f 0500 	mov.w	r5, #0
 800054c:	f04f 0100 	mov.w	r1, #0
 8000550:	e750      	b.n	80003f4 <__adddf3+0x138>
 8000552:	bf00      	nop

08000554 <__aeabi_i2d>:
 8000554:	f090 0f00 	teq	r0, #0
 8000558:	bf04      	itt	eq
 800055a:	2100      	moveq	r1, #0
 800055c:	4770      	bxeq	lr
 800055e:	b530      	push	{r4, r5, lr}
 8000560:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000564:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000568:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800056c:	bf48      	it	mi
 800056e:	4240      	negmi	r0, r0
 8000570:	f04f 0100 	mov.w	r1, #0
 8000574:	e73e      	b.n	80003f4 <__adddf3+0x138>
 8000576:	bf00      	nop

08000578 <__aeabi_f2d>:
 8000578:	0042      	lsls	r2, r0, #1
 800057a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800057e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000582:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000586:	bf1f      	itttt	ne
 8000588:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800058c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000590:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000594:	4770      	bxne	lr
 8000596:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800059a:	bf08      	it	eq
 800059c:	4770      	bxeq	lr
 800059e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005a2:	bf04      	itt	eq
 80005a4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005a8:	4770      	bxeq	lr
 80005aa:	b530      	push	{r4, r5, lr}
 80005ac:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005b0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005b4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005b8:	e71c      	b.n	80003f4 <__adddf3+0x138>
 80005ba:	bf00      	nop

080005bc <__aeabi_ul2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f04f 0500 	mov.w	r5, #0
 80005ca:	e00a      	b.n	80005e2 <__aeabi_l2d+0x16>

080005cc <__aeabi_l2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005da:	d502      	bpl.n	80005e2 <__aeabi_l2d+0x16>
 80005dc:	4240      	negs	r0, r0
 80005de:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005e2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005e6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ea:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ee:	f43f aed8 	beq.w	80003a2 <__adddf3+0xe6>
 80005f2:	f04f 0203 	mov.w	r2, #3
 80005f6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005fa:	bf18      	it	ne
 80005fc:	3203      	addne	r2, #3
 80005fe:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000602:	bf18      	it	ne
 8000604:	3203      	addne	r2, #3
 8000606:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800060a:	f1c2 0320 	rsb	r3, r2, #32
 800060e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000612:	fa20 f002 	lsr.w	r0, r0, r2
 8000616:	fa01 fe03 	lsl.w	lr, r1, r3
 800061a:	ea40 000e 	orr.w	r0, r0, lr
 800061e:	fa21 f102 	lsr.w	r1, r1, r2
 8000622:	4414      	add	r4, r2
 8000624:	e6bd      	b.n	80003a2 <__adddf3+0xe6>
 8000626:	bf00      	nop

08000628 <__aeabi_dmul>:
 8000628:	b570      	push	{r4, r5, r6, lr}
 800062a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800062e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000632:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000636:	bf1d      	ittte	ne
 8000638:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800063c:	ea94 0f0c 	teqne	r4, ip
 8000640:	ea95 0f0c 	teqne	r5, ip
 8000644:	f000 f8de 	bleq	8000804 <__aeabi_dmul+0x1dc>
 8000648:	442c      	add	r4, r5
 800064a:	ea81 0603 	eor.w	r6, r1, r3
 800064e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000652:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000656:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800065a:	bf18      	it	ne
 800065c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000660:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000664:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000668:	d038      	beq.n	80006dc <__aeabi_dmul+0xb4>
 800066a:	fba0 ce02 	umull	ip, lr, r0, r2
 800066e:	f04f 0500 	mov.w	r5, #0
 8000672:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000676:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800067a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800067e:	f04f 0600 	mov.w	r6, #0
 8000682:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000686:	f09c 0f00 	teq	ip, #0
 800068a:	bf18      	it	ne
 800068c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000690:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000694:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000698:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800069c:	d204      	bcs.n	80006a8 <__aeabi_dmul+0x80>
 800069e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006a2:	416d      	adcs	r5, r5
 80006a4:	eb46 0606 	adc.w	r6, r6, r6
 80006a8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006ac:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006b0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006b4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006b8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006bc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006c0:	bf88      	it	hi
 80006c2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006c6:	d81e      	bhi.n	8000706 <__aeabi_dmul+0xde>
 80006c8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006cc:	bf08      	it	eq
 80006ce:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006d2:	f150 0000 	adcs.w	r0, r0, #0
 80006d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006da:	bd70      	pop	{r4, r5, r6, pc}
 80006dc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006e0:	ea46 0101 	orr.w	r1, r6, r1
 80006e4:	ea40 0002 	orr.w	r0, r0, r2
 80006e8:	ea81 0103 	eor.w	r1, r1, r3
 80006ec:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006f0:	bfc2      	ittt	gt
 80006f2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006f6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006fa:	bd70      	popgt	{r4, r5, r6, pc}
 80006fc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000700:	f04f 0e00 	mov.w	lr, #0
 8000704:	3c01      	subs	r4, #1
 8000706:	f300 80ab 	bgt.w	8000860 <__aeabi_dmul+0x238>
 800070a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800070e:	bfde      	ittt	le
 8000710:	2000      	movle	r0, #0
 8000712:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000716:	bd70      	pople	{r4, r5, r6, pc}
 8000718:	f1c4 0400 	rsb	r4, r4, #0
 800071c:	3c20      	subs	r4, #32
 800071e:	da35      	bge.n	800078c <__aeabi_dmul+0x164>
 8000720:	340c      	adds	r4, #12
 8000722:	dc1b      	bgt.n	800075c <__aeabi_dmul+0x134>
 8000724:	f104 0414 	add.w	r4, r4, #20
 8000728:	f1c4 0520 	rsb	r5, r4, #32
 800072c:	fa00 f305 	lsl.w	r3, r0, r5
 8000730:	fa20 f004 	lsr.w	r0, r0, r4
 8000734:	fa01 f205 	lsl.w	r2, r1, r5
 8000738:	ea40 0002 	orr.w	r0, r0, r2
 800073c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000740:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000744:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000748:	fa21 f604 	lsr.w	r6, r1, r4
 800074c:	eb42 0106 	adc.w	r1, r2, r6
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 040c 	rsb	r4, r4, #12
 8000760:	f1c4 0520 	rsb	r5, r4, #32
 8000764:	fa00 f304 	lsl.w	r3, r0, r4
 8000768:	fa20 f005 	lsr.w	r0, r0, r5
 800076c:	fa01 f204 	lsl.w	r2, r1, r4
 8000770:	ea40 0002 	orr.w	r0, r0, r2
 8000774:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000778:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800077c:	f141 0100 	adc.w	r1, r1, #0
 8000780:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000784:	bf08      	it	eq
 8000786:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800078a:	bd70      	pop	{r4, r5, r6, pc}
 800078c:	f1c4 0520 	rsb	r5, r4, #32
 8000790:	fa00 f205 	lsl.w	r2, r0, r5
 8000794:	ea4e 0e02 	orr.w	lr, lr, r2
 8000798:	fa20 f304 	lsr.w	r3, r0, r4
 800079c:	fa01 f205 	lsl.w	r2, r1, r5
 80007a0:	ea43 0302 	orr.w	r3, r3, r2
 80007a4:	fa21 f004 	lsr.w	r0, r1, r4
 80007a8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007ac:	fa21 f204 	lsr.w	r2, r1, r4
 80007b0:	ea20 0002 	bic.w	r0, r0, r2
 80007b4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007bc:	bf08      	it	eq
 80007be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007c2:	bd70      	pop	{r4, r5, r6, pc}
 80007c4:	f094 0f00 	teq	r4, #0
 80007c8:	d10f      	bne.n	80007ea <__aeabi_dmul+0x1c2>
 80007ca:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ce:	0040      	lsls	r0, r0, #1
 80007d0:	eb41 0101 	adc.w	r1, r1, r1
 80007d4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3c01      	subeq	r4, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1a6>
 80007de:	ea41 0106 	orr.w	r1, r1, r6
 80007e2:	f095 0f00 	teq	r5, #0
 80007e6:	bf18      	it	ne
 80007e8:	4770      	bxne	lr
 80007ea:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ee:	0052      	lsls	r2, r2, #1
 80007f0:	eb43 0303 	adc.w	r3, r3, r3
 80007f4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007f8:	bf08      	it	eq
 80007fa:	3d01      	subeq	r5, #1
 80007fc:	d0f7      	beq.n	80007ee <__aeabi_dmul+0x1c6>
 80007fe:	ea43 0306 	orr.w	r3, r3, r6
 8000802:	4770      	bx	lr
 8000804:	ea94 0f0c 	teq	r4, ip
 8000808:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800080c:	bf18      	it	ne
 800080e:	ea95 0f0c 	teqne	r5, ip
 8000812:	d00c      	beq.n	800082e <__aeabi_dmul+0x206>
 8000814:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000818:	bf18      	it	ne
 800081a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081e:	d1d1      	bne.n	80007c4 <__aeabi_dmul+0x19c>
 8000820:	ea81 0103 	eor.w	r1, r1, r3
 8000824:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000828:	f04f 0000 	mov.w	r0, #0
 800082c:	bd70      	pop	{r4, r5, r6, pc}
 800082e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000832:	bf06      	itte	eq
 8000834:	4610      	moveq	r0, r2
 8000836:	4619      	moveq	r1, r3
 8000838:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800083c:	d019      	beq.n	8000872 <__aeabi_dmul+0x24a>
 800083e:	ea94 0f0c 	teq	r4, ip
 8000842:	d102      	bne.n	800084a <__aeabi_dmul+0x222>
 8000844:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000848:	d113      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800084a:	ea95 0f0c 	teq	r5, ip
 800084e:	d105      	bne.n	800085c <__aeabi_dmul+0x234>
 8000850:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000854:	bf1c      	itt	ne
 8000856:	4610      	movne	r0, r2
 8000858:	4619      	movne	r1, r3
 800085a:	d10a      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800085c:	ea81 0103 	eor.w	r1, r1, r3
 8000860:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000864:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000868:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800086c:	f04f 0000 	mov.w	r0, #0
 8000870:	bd70      	pop	{r4, r5, r6, pc}
 8000872:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000876:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800087a:	bd70      	pop	{r4, r5, r6, pc}

0800087c <__aeabi_ddiv>:
 800087c:	b570      	push	{r4, r5, r6, lr}
 800087e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000882:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000886:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800088a:	bf1d      	ittte	ne
 800088c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000890:	ea94 0f0c 	teqne	r4, ip
 8000894:	ea95 0f0c 	teqne	r5, ip
 8000898:	f000 f8a7 	bleq	80009ea <__aeabi_ddiv+0x16e>
 800089c:	eba4 0405 	sub.w	r4, r4, r5
 80008a0:	ea81 0e03 	eor.w	lr, r1, r3
 80008a4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008a8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008ac:	f000 8088 	beq.w	80009c0 <__aeabi_ddiv+0x144>
 80008b0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008b4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008b8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008bc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008c0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008c4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008c8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008cc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008d0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008d4:	429d      	cmp	r5, r3
 80008d6:	bf08      	it	eq
 80008d8:	4296      	cmpeq	r6, r2
 80008da:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008de:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008e2:	d202      	bcs.n	80008ea <__aeabi_ddiv+0x6e>
 80008e4:	085b      	lsrs	r3, r3, #1
 80008e6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ea:	1ab6      	subs	r6, r6, r2
 80008ec:	eb65 0503 	sbc.w	r5, r5, r3
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008fa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000928:	085b      	lsrs	r3, r3, #1
 800092a:	ea4f 0232 	mov.w	r2, r2, rrx
 800092e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000932:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000936:	bf22      	ittt	cs
 8000938:	1ab6      	subcs	r6, r6, r2
 800093a:	4675      	movcs	r5, lr
 800093c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000940:	085b      	lsrs	r3, r3, #1
 8000942:	ea4f 0232 	mov.w	r2, r2, rrx
 8000946:	ebb6 0e02 	subs.w	lr, r6, r2
 800094a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800094e:	bf22      	ittt	cs
 8000950:	1ab6      	subcs	r6, r6, r2
 8000952:	4675      	movcs	r5, lr
 8000954:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000958:	ea55 0e06 	orrs.w	lr, r5, r6
 800095c:	d018      	beq.n	8000990 <__aeabi_ddiv+0x114>
 800095e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000962:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000966:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800096a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800096e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000972:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000976:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800097a:	d1c0      	bne.n	80008fe <__aeabi_ddiv+0x82>
 800097c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000980:	d10b      	bne.n	800099a <__aeabi_ddiv+0x11e>
 8000982:	ea41 0100 	orr.w	r1, r1, r0
 8000986:	f04f 0000 	mov.w	r0, #0
 800098a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800098e:	e7b6      	b.n	80008fe <__aeabi_ddiv+0x82>
 8000990:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000994:	bf04      	itt	eq
 8000996:	4301      	orreq	r1, r0
 8000998:	2000      	moveq	r0, #0
 800099a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800099e:	bf88      	it	hi
 80009a0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009a4:	f63f aeaf 	bhi.w	8000706 <__aeabi_dmul+0xde>
 80009a8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009ac:	bf04      	itt	eq
 80009ae:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009b2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009b6:	f150 0000 	adcs.w	r0, r0, #0
 80009ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009be:	bd70      	pop	{r4, r5, r6, pc}
 80009c0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009c4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009c8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009cc:	bfc2      	ittt	gt
 80009ce:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009d2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009d6:	bd70      	popgt	{r4, r5, r6, pc}
 80009d8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009dc:	f04f 0e00 	mov.w	lr, #0
 80009e0:	3c01      	subs	r4, #1
 80009e2:	e690      	b.n	8000706 <__aeabi_dmul+0xde>
 80009e4:	ea45 0e06 	orr.w	lr, r5, r6
 80009e8:	e68d      	b.n	8000706 <__aeabi_dmul+0xde>
 80009ea:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ee:	ea94 0f0c 	teq	r4, ip
 80009f2:	bf08      	it	eq
 80009f4:	ea95 0f0c 	teqeq	r5, ip
 80009f8:	f43f af3b 	beq.w	8000872 <__aeabi_dmul+0x24a>
 80009fc:	ea94 0f0c 	teq	r4, ip
 8000a00:	d10a      	bne.n	8000a18 <__aeabi_ddiv+0x19c>
 8000a02:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a06:	f47f af34 	bne.w	8000872 <__aeabi_dmul+0x24a>
 8000a0a:	ea95 0f0c 	teq	r5, ip
 8000a0e:	f47f af25 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a12:	4610      	mov	r0, r2
 8000a14:	4619      	mov	r1, r3
 8000a16:	e72c      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a18:	ea95 0f0c 	teq	r5, ip
 8000a1c:	d106      	bne.n	8000a2c <__aeabi_ddiv+0x1b0>
 8000a1e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a22:	f43f aefd 	beq.w	8000820 <__aeabi_dmul+0x1f8>
 8000a26:	4610      	mov	r0, r2
 8000a28:	4619      	mov	r1, r3
 8000a2a:	e722      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a2c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a30:	bf18      	it	ne
 8000a32:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a36:	f47f aec5 	bne.w	80007c4 <__aeabi_dmul+0x19c>
 8000a3a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a3e:	f47f af0d 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a42:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a46:	f47f aeeb 	bne.w	8000820 <__aeabi_dmul+0x1f8>
 8000a4a:	e712      	b.n	8000872 <__aeabi_dmul+0x24a>

08000a4c <__gedf2>:
 8000a4c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a50:	e006      	b.n	8000a60 <__cmpdf2+0x4>
 8000a52:	bf00      	nop

08000a54 <__ledf2>:
 8000a54:	f04f 0c01 	mov.w	ip, #1
 8000a58:	e002      	b.n	8000a60 <__cmpdf2+0x4>
 8000a5a:	bf00      	nop

08000a5c <__cmpdf2>:
 8000a5c:	f04f 0c01 	mov.w	ip, #1
 8000a60:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a64:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a68:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a6c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a70:	bf18      	it	ne
 8000a72:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a76:	d01b      	beq.n	8000ab0 <__cmpdf2+0x54>
 8000a78:	b001      	add	sp, #4
 8000a7a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a7e:	bf0c      	ite	eq
 8000a80:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a84:	ea91 0f03 	teqne	r1, r3
 8000a88:	bf02      	ittt	eq
 8000a8a:	ea90 0f02 	teqeq	r0, r2
 8000a8e:	2000      	moveq	r0, #0
 8000a90:	4770      	bxeq	lr
 8000a92:	f110 0f00 	cmn.w	r0, #0
 8000a96:	ea91 0f03 	teq	r1, r3
 8000a9a:	bf58      	it	pl
 8000a9c:	4299      	cmppl	r1, r3
 8000a9e:	bf08      	it	eq
 8000aa0:	4290      	cmpeq	r0, r2
 8000aa2:	bf2c      	ite	cs
 8000aa4:	17d8      	asrcs	r0, r3, #31
 8000aa6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aaa:	f040 0001 	orr.w	r0, r0, #1
 8000aae:	4770      	bx	lr
 8000ab0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d102      	bne.n	8000ac0 <__cmpdf2+0x64>
 8000aba:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000abe:	d107      	bne.n	8000ad0 <__cmpdf2+0x74>
 8000ac0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d1d6      	bne.n	8000a78 <__cmpdf2+0x1c>
 8000aca:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ace:	d0d3      	beq.n	8000a78 <__cmpdf2+0x1c>
 8000ad0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ad4:	4770      	bx	lr
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdrcmple>:
 8000ad8:	4684      	mov	ip, r0
 8000ada:	4610      	mov	r0, r2
 8000adc:	4662      	mov	r2, ip
 8000ade:	468c      	mov	ip, r1
 8000ae0:	4619      	mov	r1, r3
 8000ae2:	4663      	mov	r3, ip
 8000ae4:	e000      	b.n	8000ae8 <__aeabi_cdcmpeq>
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdcmpeq>:
 8000ae8:	b501      	push	{r0, lr}
 8000aea:	f7ff ffb7 	bl	8000a5c <__cmpdf2>
 8000aee:	2800      	cmp	r0, #0
 8000af0:	bf48      	it	mi
 8000af2:	f110 0f00 	cmnmi.w	r0, #0
 8000af6:	bd01      	pop	{r0, pc}

08000af8 <__aeabi_dcmpeq>:
 8000af8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000afc:	f7ff fff4 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b00:	bf0c      	ite	eq
 8000b02:	2001      	moveq	r0, #1
 8000b04:	2000      	movne	r0, #0
 8000b06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0a:	bf00      	nop

08000b0c <__aeabi_dcmplt>:
 8000b0c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b10:	f7ff ffea 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b14:	bf34      	ite	cc
 8000b16:	2001      	movcc	r0, #1
 8000b18:	2000      	movcs	r0, #0
 8000b1a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1e:	bf00      	nop

08000b20 <__aeabi_dcmple>:
 8000b20:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b24:	f7ff ffe0 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b28:	bf94      	ite	ls
 8000b2a:	2001      	movls	r0, #1
 8000b2c:	2000      	movhi	r0, #0
 8000b2e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b32:	bf00      	nop

08000b34 <__aeabi_dcmpge>:
 8000b34:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b38:	f7ff ffce 	bl	8000ad8 <__aeabi_cdrcmple>
 8000b3c:	bf94      	ite	ls
 8000b3e:	2001      	movls	r0, #1
 8000b40:	2000      	movhi	r0, #0
 8000b42:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b46:	bf00      	nop

08000b48 <__aeabi_dcmpgt>:
 8000b48:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b4c:	f7ff ffc4 	bl	8000ad8 <__aeabi_cdrcmple>
 8000b50:	bf34      	ite	cc
 8000b52:	2001      	movcc	r0, #1
 8000b54:	2000      	movcs	r0, #0
 8000b56:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b5a:	bf00      	nop

08000b5c <__aeabi_d2iz>:
 8000b5c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b60:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b64:	d215      	bcs.n	8000b92 <__aeabi_d2iz+0x36>
 8000b66:	d511      	bpl.n	8000b8c <__aeabi_d2iz+0x30>
 8000b68:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b6c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b70:	d912      	bls.n	8000b98 <__aeabi_d2iz+0x3c>
 8000b72:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b76:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b7a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b82:	fa23 f002 	lsr.w	r0, r3, r2
 8000b86:	bf18      	it	ne
 8000b88:	4240      	negne	r0, r0
 8000b8a:	4770      	bx	lr
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b96:	d105      	bne.n	8000ba4 <__aeabi_d2iz+0x48>
 8000b98:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b9c:	bf08      	it	eq
 8000b9e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000ba2:	4770      	bx	lr
 8000ba4:	f04f 0000 	mov.w	r0, #0
 8000ba8:	4770      	bx	lr
 8000baa:	bf00      	nop

08000bac <__aeabi_d2f>:
 8000bac:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bb0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bb4:	bf24      	itt	cs
 8000bb6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bba:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bbe:	d90d      	bls.n	8000bdc <__aeabi_d2f+0x30>
 8000bc0:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000bc4:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000bc8:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bcc:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000bd0:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000bd4:	bf08      	it	eq
 8000bd6:	f020 0001 	biceq.w	r0, r0, #1
 8000bda:	4770      	bx	lr
 8000bdc:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000be0:	d121      	bne.n	8000c26 <__aeabi_d2f+0x7a>
 8000be2:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000be6:	bfbc      	itt	lt
 8000be8:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000bec:	4770      	bxlt	lr
 8000bee:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000bf2:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000bf6:	f1c2 0218 	rsb	r2, r2, #24
 8000bfa:	f1c2 0c20 	rsb	ip, r2, #32
 8000bfe:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c02:	fa20 f002 	lsr.w	r0, r0, r2
 8000c06:	bf18      	it	ne
 8000c08:	f040 0001 	orrne.w	r0, r0, #1
 8000c0c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c10:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c14:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c18:	ea40 000c 	orr.w	r0, r0, ip
 8000c1c:	fa23 f302 	lsr.w	r3, r3, r2
 8000c20:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c24:	e7cc      	b.n	8000bc0 <__aeabi_d2f+0x14>
 8000c26:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c2a:	d107      	bne.n	8000c3c <__aeabi_d2f+0x90>
 8000c2c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c30:	bf1e      	ittt	ne
 8000c32:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c36:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c3a:	4770      	bxne	lr
 8000c3c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c40:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c44:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c48:	4770      	bx	lr
 8000c4a:	bf00      	nop

08000c4c <__aeabi_uldivmod>:
 8000c4c:	b953      	cbnz	r3, 8000c64 <__aeabi_uldivmod+0x18>
 8000c4e:	b94a      	cbnz	r2, 8000c64 <__aeabi_uldivmod+0x18>
 8000c50:	2900      	cmp	r1, #0
 8000c52:	bf08      	it	eq
 8000c54:	2800      	cmpeq	r0, #0
 8000c56:	bf1c      	itt	ne
 8000c58:	f04f 31ff 	movne.w	r1, #4294967295
 8000c5c:	f04f 30ff 	movne.w	r0, #4294967295
 8000c60:	f000 b970 	b.w	8000f44 <__aeabi_idiv0>
 8000c64:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c68:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c6c:	f000 f806 	bl	8000c7c <__udivmoddi4>
 8000c70:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c74:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c78:	b004      	add	sp, #16
 8000c7a:	4770      	bx	lr

08000c7c <__udivmoddi4>:
 8000c7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c80:	9e08      	ldr	r6, [sp, #32]
 8000c82:	460d      	mov	r5, r1
 8000c84:	4604      	mov	r4, r0
 8000c86:	460f      	mov	r7, r1
 8000c88:	2b00      	cmp	r3, #0
 8000c8a:	d14a      	bne.n	8000d22 <__udivmoddi4+0xa6>
 8000c8c:	428a      	cmp	r2, r1
 8000c8e:	4694      	mov	ip, r2
 8000c90:	d965      	bls.n	8000d5e <__udivmoddi4+0xe2>
 8000c92:	fab2 f382 	clz	r3, r2
 8000c96:	b143      	cbz	r3, 8000caa <__udivmoddi4+0x2e>
 8000c98:	fa02 fc03 	lsl.w	ip, r2, r3
 8000c9c:	f1c3 0220 	rsb	r2, r3, #32
 8000ca0:	409f      	lsls	r7, r3
 8000ca2:	fa20 f202 	lsr.w	r2, r0, r2
 8000ca6:	4317      	orrs	r7, r2
 8000ca8:	409c      	lsls	r4, r3
 8000caa:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000cae:	fa1f f58c 	uxth.w	r5, ip
 8000cb2:	fbb7 f1fe 	udiv	r1, r7, lr
 8000cb6:	0c22      	lsrs	r2, r4, #16
 8000cb8:	fb0e 7711 	mls	r7, lr, r1, r7
 8000cbc:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000cc0:	fb01 f005 	mul.w	r0, r1, r5
 8000cc4:	4290      	cmp	r0, r2
 8000cc6:	d90a      	bls.n	8000cde <__udivmoddi4+0x62>
 8000cc8:	eb1c 0202 	adds.w	r2, ip, r2
 8000ccc:	f101 37ff 	add.w	r7, r1, #4294967295
 8000cd0:	f080 811c 	bcs.w	8000f0c <__udivmoddi4+0x290>
 8000cd4:	4290      	cmp	r0, r2
 8000cd6:	f240 8119 	bls.w	8000f0c <__udivmoddi4+0x290>
 8000cda:	3902      	subs	r1, #2
 8000cdc:	4462      	add	r2, ip
 8000cde:	1a12      	subs	r2, r2, r0
 8000ce0:	b2a4      	uxth	r4, r4
 8000ce2:	fbb2 f0fe 	udiv	r0, r2, lr
 8000ce6:	fb0e 2210 	mls	r2, lr, r0, r2
 8000cea:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000cee:	fb00 f505 	mul.w	r5, r0, r5
 8000cf2:	42a5      	cmp	r5, r4
 8000cf4:	d90a      	bls.n	8000d0c <__udivmoddi4+0x90>
 8000cf6:	eb1c 0404 	adds.w	r4, ip, r4
 8000cfa:	f100 32ff 	add.w	r2, r0, #4294967295
 8000cfe:	f080 8107 	bcs.w	8000f10 <__udivmoddi4+0x294>
 8000d02:	42a5      	cmp	r5, r4
 8000d04:	f240 8104 	bls.w	8000f10 <__udivmoddi4+0x294>
 8000d08:	4464      	add	r4, ip
 8000d0a:	3802      	subs	r0, #2
 8000d0c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000d10:	1b64      	subs	r4, r4, r5
 8000d12:	2100      	movs	r1, #0
 8000d14:	b11e      	cbz	r6, 8000d1e <__udivmoddi4+0xa2>
 8000d16:	40dc      	lsrs	r4, r3
 8000d18:	2300      	movs	r3, #0
 8000d1a:	e9c6 4300 	strd	r4, r3, [r6]
 8000d1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d22:	428b      	cmp	r3, r1
 8000d24:	d908      	bls.n	8000d38 <__udivmoddi4+0xbc>
 8000d26:	2e00      	cmp	r6, #0
 8000d28:	f000 80ed 	beq.w	8000f06 <__udivmoddi4+0x28a>
 8000d2c:	2100      	movs	r1, #0
 8000d2e:	e9c6 0500 	strd	r0, r5, [r6]
 8000d32:	4608      	mov	r0, r1
 8000d34:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d38:	fab3 f183 	clz	r1, r3
 8000d3c:	2900      	cmp	r1, #0
 8000d3e:	d149      	bne.n	8000dd4 <__udivmoddi4+0x158>
 8000d40:	42ab      	cmp	r3, r5
 8000d42:	d302      	bcc.n	8000d4a <__udivmoddi4+0xce>
 8000d44:	4282      	cmp	r2, r0
 8000d46:	f200 80f8 	bhi.w	8000f3a <__udivmoddi4+0x2be>
 8000d4a:	1a84      	subs	r4, r0, r2
 8000d4c:	eb65 0203 	sbc.w	r2, r5, r3
 8000d50:	2001      	movs	r0, #1
 8000d52:	4617      	mov	r7, r2
 8000d54:	2e00      	cmp	r6, #0
 8000d56:	d0e2      	beq.n	8000d1e <__udivmoddi4+0xa2>
 8000d58:	e9c6 4700 	strd	r4, r7, [r6]
 8000d5c:	e7df      	b.n	8000d1e <__udivmoddi4+0xa2>
 8000d5e:	b902      	cbnz	r2, 8000d62 <__udivmoddi4+0xe6>
 8000d60:	deff      	udf	#255	; 0xff
 8000d62:	fab2 f382 	clz	r3, r2
 8000d66:	2b00      	cmp	r3, #0
 8000d68:	f040 8090 	bne.w	8000e8c <__udivmoddi4+0x210>
 8000d6c:	1a8a      	subs	r2, r1, r2
 8000d6e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000d72:	fa1f fe8c 	uxth.w	lr, ip
 8000d76:	2101      	movs	r1, #1
 8000d78:	fbb2 f5f7 	udiv	r5, r2, r7
 8000d7c:	fb07 2015 	mls	r0, r7, r5, r2
 8000d80:	0c22      	lsrs	r2, r4, #16
 8000d82:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000d86:	fb0e f005 	mul.w	r0, lr, r5
 8000d8a:	4290      	cmp	r0, r2
 8000d8c:	d908      	bls.n	8000da0 <__udivmoddi4+0x124>
 8000d8e:	eb1c 0202 	adds.w	r2, ip, r2
 8000d92:	f105 38ff 	add.w	r8, r5, #4294967295
 8000d96:	d202      	bcs.n	8000d9e <__udivmoddi4+0x122>
 8000d98:	4290      	cmp	r0, r2
 8000d9a:	f200 80cb 	bhi.w	8000f34 <__udivmoddi4+0x2b8>
 8000d9e:	4645      	mov	r5, r8
 8000da0:	1a12      	subs	r2, r2, r0
 8000da2:	b2a4      	uxth	r4, r4
 8000da4:	fbb2 f0f7 	udiv	r0, r2, r7
 8000da8:	fb07 2210 	mls	r2, r7, r0, r2
 8000dac:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000db0:	fb0e fe00 	mul.w	lr, lr, r0
 8000db4:	45a6      	cmp	lr, r4
 8000db6:	d908      	bls.n	8000dca <__udivmoddi4+0x14e>
 8000db8:	eb1c 0404 	adds.w	r4, ip, r4
 8000dbc:	f100 32ff 	add.w	r2, r0, #4294967295
 8000dc0:	d202      	bcs.n	8000dc8 <__udivmoddi4+0x14c>
 8000dc2:	45a6      	cmp	lr, r4
 8000dc4:	f200 80bb 	bhi.w	8000f3e <__udivmoddi4+0x2c2>
 8000dc8:	4610      	mov	r0, r2
 8000dca:	eba4 040e 	sub.w	r4, r4, lr
 8000dce:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000dd2:	e79f      	b.n	8000d14 <__udivmoddi4+0x98>
 8000dd4:	f1c1 0720 	rsb	r7, r1, #32
 8000dd8:	408b      	lsls	r3, r1
 8000dda:	fa22 fc07 	lsr.w	ip, r2, r7
 8000dde:	ea4c 0c03 	orr.w	ip, ip, r3
 8000de2:	fa05 f401 	lsl.w	r4, r5, r1
 8000de6:	fa20 f307 	lsr.w	r3, r0, r7
 8000dea:	40fd      	lsrs	r5, r7
 8000dec:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000df0:	4323      	orrs	r3, r4
 8000df2:	fbb5 f8f9 	udiv	r8, r5, r9
 8000df6:	fa1f fe8c 	uxth.w	lr, ip
 8000dfa:	fb09 5518 	mls	r5, r9, r8, r5
 8000dfe:	0c1c      	lsrs	r4, r3, #16
 8000e00:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000e04:	fb08 f50e 	mul.w	r5, r8, lr
 8000e08:	42a5      	cmp	r5, r4
 8000e0a:	fa02 f201 	lsl.w	r2, r2, r1
 8000e0e:	fa00 f001 	lsl.w	r0, r0, r1
 8000e12:	d90b      	bls.n	8000e2c <__udivmoddi4+0x1b0>
 8000e14:	eb1c 0404 	adds.w	r4, ip, r4
 8000e18:	f108 3aff 	add.w	sl, r8, #4294967295
 8000e1c:	f080 8088 	bcs.w	8000f30 <__udivmoddi4+0x2b4>
 8000e20:	42a5      	cmp	r5, r4
 8000e22:	f240 8085 	bls.w	8000f30 <__udivmoddi4+0x2b4>
 8000e26:	f1a8 0802 	sub.w	r8, r8, #2
 8000e2a:	4464      	add	r4, ip
 8000e2c:	1b64      	subs	r4, r4, r5
 8000e2e:	b29d      	uxth	r5, r3
 8000e30:	fbb4 f3f9 	udiv	r3, r4, r9
 8000e34:	fb09 4413 	mls	r4, r9, r3, r4
 8000e38:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000e3c:	fb03 fe0e 	mul.w	lr, r3, lr
 8000e40:	45a6      	cmp	lr, r4
 8000e42:	d908      	bls.n	8000e56 <__udivmoddi4+0x1da>
 8000e44:	eb1c 0404 	adds.w	r4, ip, r4
 8000e48:	f103 35ff 	add.w	r5, r3, #4294967295
 8000e4c:	d26c      	bcs.n	8000f28 <__udivmoddi4+0x2ac>
 8000e4e:	45a6      	cmp	lr, r4
 8000e50:	d96a      	bls.n	8000f28 <__udivmoddi4+0x2ac>
 8000e52:	3b02      	subs	r3, #2
 8000e54:	4464      	add	r4, ip
 8000e56:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000e5a:	fba3 9502 	umull	r9, r5, r3, r2
 8000e5e:	eba4 040e 	sub.w	r4, r4, lr
 8000e62:	42ac      	cmp	r4, r5
 8000e64:	46c8      	mov	r8, r9
 8000e66:	46ae      	mov	lr, r5
 8000e68:	d356      	bcc.n	8000f18 <__udivmoddi4+0x29c>
 8000e6a:	d053      	beq.n	8000f14 <__udivmoddi4+0x298>
 8000e6c:	b156      	cbz	r6, 8000e84 <__udivmoddi4+0x208>
 8000e6e:	ebb0 0208 	subs.w	r2, r0, r8
 8000e72:	eb64 040e 	sbc.w	r4, r4, lr
 8000e76:	fa04 f707 	lsl.w	r7, r4, r7
 8000e7a:	40ca      	lsrs	r2, r1
 8000e7c:	40cc      	lsrs	r4, r1
 8000e7e:	4317      	orrs	r7, r2
 8000e80:	e9c6 7400 	strd	r7, r4, [r6]
 8000e84:	4618      	mov	r0, r3
 8000e86:	2100      	movs	r1, #0
 8000e88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e8c:	f1c3 0120 	rsb	r1, r3, #32
 8000e90:	fa02 fc03 	lsl.w	ip, r2, r3
 8000e94:	fa20 f201 	lsr.w	r2, r0, r1
 8000e98:	fa25 f101 	lsr.w	r1, r5, r1
 8000e9c:	409d      	lsls	r5, r3
 8000e9e:	432a      	orrs	r2, r5
 8000ea0:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ea4:	fa1f fe8c 	uxth.w	lr, ip
 8000ea8:	fbb1 f0f7 	udiv	r0, r1, r7
 8000eac:	fb07 1510 	mls	r5, r7, r0, r1
 8000eb0:	0c11      	lsrs	r1, r2, #16
 8000eb2:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000eb6:	fb00 f50e 	mul.w	r5, r0, lr
 8000eba:	428d      	cmp	r5, r1
 8000ebc:	fa04 f403 	lsl.w	r4, r4, r3
 8000ec0:	d908      	bls.n	8000ed4 <__udivmoddi4+0x258>
 8000ec2:	eb1c 0101 	adds.w	r1, ip, r1
 8000ec6:	f100 38ff 	add.w	r8, r0, #4294967295
 8000eca:	d22f      	bcs.n	8000f2c <__udivmoddi4+0x2b0>
 8000ecc:	428d      	cmp	r5, r1
 8000ece:	d92d      	bls.n	8000f2c <__udivmoddi4+0x2b0>
 8000ed0:	3802      	subs	r0, #2
 8000ed2:	4461      	add	r1, ip
 8000ed4:	1b49      	subs	r1, r1, r5
 8000ed6:	b292      	uxth	r2, r2
 8000ed8:	fbb1 f5f7 	udiv	r5, r1, r7
 8000edc:	fb07 1115 	mls	r1, r7, r5, r1
 8000ee0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000ee4:	fb05 f10e 	mul.w	r1, r5, lr
 8000ee8:	4291      	cmp	r1, r2
 8000eea:	d908      	bls.n	8000efe <__udivmoddi4+0x282>
 8000eec:	eb1c 0202 	adds.w	r2, ip, r2
 8000ef0:	f105 38ff 	add.w	r8, r5, #4294967295
 8000ef4:	d216      	bcs.n	8000f24 <__udivmoddi4+0x2a8>
 8000ef6:	4291      	cmp	r1, r2
 8000ef8:	d914      	bls.n	8000f24 <__udivmoddi4+0x2a8>
 8000efa:	3d02      	subs	r5, #2
 8000efc:	4462      	add	r2, ip
 8000efe:	1a52      	subs	r2, r2, r1
 8000f00:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000f04:	e738      	b.n	8000d78 <__udivmoddi4+0xfc>
 8000f06:	4631      	mov	r1, r6
 8000f08:	4630      	mov	r0, r6
 8000f0a:	e708      	b.n	8000d1e <__udivmoddi4+0xa2>
 8000f0c:	4639      	mov	r1, r7
 8000f0e:	e6e6      	b.n	8000cde <__udivmoddi4+0x62>
 8000f10:	4610      	mov	r0, r2
 8000f12:	e6fb      	b.n	8000d0c <__udivmoddi4+0x90>
 8000f14:	4548      	cmp	r0, r9
 8000f16:	d2a9      	bcs.n	8000e6c <__udivmoddi4+0x1f0>
 8000f18:	ebb9 0802 	subs.w	r8, r9, r2
 8000f1c:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000f20:	3b01      	subs	r3, #1
 8000f22:	e7a3      	b.n	8000e6c <__udivmoddi4+0x1f0>
 8000f24:	4645      	mov	r5, r8
 8000f26:	e7ea      	b.n	8000efe <__udivmoddi4+0x282>
 8000f28:	462b      	mov	r3, r5
 8000f2a:	e794      	b.n	8000e56 <__udivmoddi4+0x1da>
 8000f2c:	4640      	mov	r0, r8
 8000f2e:	e7d1      	b.n	8000ed4 <__udivmoddi4+0x258>
 8000f30:	46d0      	mov	r8, sl
 8000f32:	e77b      	b.n	8000e2c <__udivmoddi4+0x1b0>
 8000f34:	3d02      	subs	r5, #2
 8000f36:	4462      	add	r2, ip
 8000f38:	e732      	b.n	8000da0 <__udivmoddi4+0x124>
 8000f3a:	4608      	mov	r0, r1
 8000f3c:	e70a      	b.n	8000d54 <__udivmoddi4+0xd8>
 8000f3e:	4464      	add	r4, ip
 8000f40:	3802      	subs	r0, #2
 8000f42:	e742      	b.n	8000dca <__udivmoddi4+0x14e>

08000f44 <__aeabi_idiv0>:
 8000f44:	4770      	bx	lr
 8000f46:	bf00      	nop

08000f48 <bmp2_init>:
/*!
 * @brief This API is the entry point.
 * It reads the chip-id and calibration data from the sensor.
 */
int8_t bmp2_init(struct bmp2_dev *dev)
{
 8000f48:	b580      	push	{r7, lr}
 8000f4a:	b084      	sub	sp, #16
 8000f4c:	af00      	add	r7, sp, #0
 8000f4e:	6078      	str	r0, [r7, #4]
    int8_t rslt;

    rslt = null_ptr_check(dev);
 8000f50:	6878      	ldr	r0, [r7, #4]
 8000f52:	f000 fa47 	bl	80013e4 <null_ptr_check>
 8000f56:	4603      	mov	r3, r0
 8000f58:	73fb      	strb	r3, [r7, #15]

    if (rslt == BMP2_OK)
 8000f5a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000f5e:	2b00      	cmp	r3, #0
 8000f60:	d117      	bne.n	8000f92 <bmp2_init+0x4a>
    {
        rslt = bmp2_get_regs(BMP2_REG_CHIP_ID, &dev->chip_id, 1, dev);
 8000f62:	6879      	ldr	r1, [r7, #4]
 8000f64:	687b      	ldr	r3, [r7, #4]
 8000f66:	2201      	movs	r2, #1
 8000f68:	20d0      	movs	r0, #208	; 0xd0
 8000f6a:	f000 f818 	bl	8000f9e <bmp2_get_regs>
 8000f6e:	4603      	mov	r3, r0
 8000f70:	73fb      	strb	r3, [r7, #15]

        /* Check for chip id validity */
        if (rslt == BMP2_OK)
 8000f72:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000f76:	2b00      	cmp	r3, #0
 8000f78:	d10b      	bne.n	8000f92 <bmp2_init+0x4a>
        {
            if (dev->chip_id == BMP2_CHIP_ID)
 8000f7a:	687b      	ldr	r3, [r7, #4]
 8000f7c:	781b      	ldrb	r3, [r3, #0]
 8000f7e:	2b58      	cmp	r3, #88	; 0x58
 8000f80:	d105      	bne.n	8000f8e <bmp2_init+0x46>
            {
                rslt = get_calib_param(dev);
 8000f82:	6878      	ldr	r0, [r7, #4]
 8000f84:	f000 fa79 	bl	800147a <get_calib_param>
 8000f88:	4603      	mov	r3, r0
 8000f8a:	73fb      	strb	r3, [r7, #15]
 8000f8c:	e001      	b.n	8000f92 <bmp2_init+0x4a>
            }
            else
            {
                rslt = BMP2_E_DEV_NOT_FOUND;
 8000f8e:	23fc      	movs	r3, #252	; 0xfc
 8000f90:	73fb      	strb	r3, [r7, #15]
            }
        }
    }

    return rslt;
 8000f92:	f997 300f 	ldrsb.w	r3, [r7, #15]
}
 8000f96:	4618      	mov	r0, r3
 8000f98:	3710      	adds	r7, #16
 8000f9a:	46bd      	mov	sp, r7
 8000f9c:	bd80      	pop	{r7, pc}

08000f9e <bmp2_get_regs>:
/*!
 * @brief This API reads the data from the given register address of the
 * sensor.
 */
int8_t bmp2_get_regs(uint8_t reg_addr, uint8_t *reg_data, uint32_t len, struct bmp2_dev *dev)
{
 8000f9e:	b590      	push	{r4, r7, lr}
 8000fa0:	b087      	sub	sp, #28
 8000fa2:	af00      	add	r7, sp, #0
 8000fa4:	60b9      	str	r1, [r7, #8]
 8000fa6:	607a      	str	r2, [r7, #4]
 8000fa8:	603b      	str	r3, [r7, #0]
 8000faa:	4603      	mov	r3, r0
 8000fac:	73fb      	strb	r3, [r7, #15]
    int8_t rslt;

    rslt = null_ptr_check(dev);
 8000fae:	6838      	ldr	r0, [r7, #0]
 8000fb0:	f000 fa18 	bl	80013e4 <null_ptr_check>
 8000fb4:	4603      	mov	r3, r0
 8000fb6:	75fb      	strb	r3, [r7, #23]

    if ((rslt == BMP2_OK) && (reg_data != NULL))
 8000fb8:	f997 3017 	ldrsb.w	r3, [r7, #23]
 8000fbc:	2b00      	cmp	r3, #0
 8000fbe:	d11e      	bne.n	8000ffe <bmp2_get_regs+0x60>
 8000fc0:	68bb      	ldr	r3, [r7, #8]
 8000fc2:	2b00      	cmp	r3, #0
 8000fc4:	d01b      	beq.n	8000ffe <bmp2_get_regs+0x60>
    {
        /* Mask the register address' MSB if interface selected is SPI */
        if (dev->intf == BMP2_SPI_INTF)
 8000fc6:	683b      	ldr	r3, [r7, #0]
 8000fc8:	785b      	ldrb	r3, [r3, #1]
 8000fca:	2b00      	cmp	r3, #0
 8000fcc:	d103      	bne.n	8000fd6 <bmp2_get_regs+0x38>
        {
            reg_addr = reg_addr | BMP2_SPI_RD_MASK;
 8000fce:	7bfb      	ldrb	r3, [r7, #15]
 8000fd0:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8000fd4:	73fb      	strb	r3, [r7, #15]
        }

        dev->intf_rslt = dev->read(reg_addr, reg_data, len, dev->intf_ptr);
 8000fd6:	683b      	ldr	r3, [r7, #0]
 8000fd8:	68dc      	ldr	r4, [r3, #12]
 8000fda:	683b      	ldr	r3, [r7, #0]
 8000fdc:	685b      	ldr	r3, [r3, #4]
 8000fde:	7bf8      	ldrb	r0, [r7, #15]
 8000fe0:	687a      	ldr	r2, [r7, #4]
 8000fe2:	68b9      	ldr	r1, [r7, #8]
 8000fe4:	47a0      	blx	r4
 8000fe6:	4603      	mov	r3, r0
 8000fe8:	461a      	mov	r2, r3
 8000fea:	683b      	ldr	r3, [r7, #0]
 8000fec:	721a      	strb	r2, [r3, #8]

        /* Check for communication error and mask with an internal error code */
        if (dev->intf_rslt != BMP2_INTF_RET_SUCCESS)
 8000fee:	683b      	ldr	r3, [r7, #0]
 8000ff0:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8000ff4:	2b00      	cmp	r3, #0
 8000ff6:	d004      	beq.n	8001002 <bmp2_get_regs+0x64>
        {
            rslt = BMP2_E_COM_FAIL;
 8000ff8:	23fe      	movs	r3, #254	; 0xfe
 8000ffa:	75fb      	strb	r3, [r7, #23]
        if (dev->intf_rslt != BMP2_INTF_RET_SUCCESS)
 8000ffc:	e001      	b.n	8001002 <bmp2_get_regs+0x64>
        }
    }
    else
    {
        rslt = BMP2_E_NULL_PTR;
 8000ffe:	23ff      	movs	r3, #255	; 0xff
 8001000:	75fb      	strb	r3, [r7, #23]
    }

    return rslt;
 8001002:	f997 3017 	ldrsb.w	r3, [r7, #23]
}
 8001006:	4618      	mov	r0, r3
 8001008:	371c      	adds	r7, #28
 800100a:	46bd      	mov	sp, r7
 800100c:	bd90      	pop	{r4, r7, pc}

0800100e <bmp2_set_regs>:
/*!
 * @brief This API writes the given data to the register addresses
 * of the sensor.
 */
int8_t bmp2_set_regs(uint8_t *reg_addr, const uint8_t *reg_data, uint32_t len, struct bmp2_dev *dev)
{
 800100e:	b590      	push	{r4, r7, lr}
 8001010:	b08b      	sub	sp, #44	; 0x2c
 8001012:	af00      	add	r7, sp, #0
 8001014:	60f8      	str	r0, [r7, #12]
 8001016:	60b9      	str	r1, [r7, #8]
 8001018:	607a      	str	r2, [r7, #4]
 800101a:	603b      	str	r3, [r7, #0]
    int8_t rslt;
    uint8_t temp_buff[8]; /* Typically not to write more than 4 registers */
    uint32_t temp_len;
    uint8_t reg_addr_cnt;

    if (len > BMP2_MAX_LEN)
 800101c:	687b      	ldr	r3, [r7, #4]
 800101e:	2b04      	cmp	r3, #4
 8001020:	d901      	bls.n	8001026 <bmp2_set_regs+0x18>
    {
        len = BMP2_MAX_LEN;
 8001022:	2304      	movs	r3, #4
 8001024:	607b      	str	r3, [r7, #4]
    }

    rslt = null_ptr_check(dev);
 8001026:	6838      	ldr	r0, [r7, #0]
 8001028:	f000 f9dc 	bl	80013e4 <null_ptr_check>
 800102c:	4603      	mov	r3, r0
 800102e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27

    if ((rslt == BMP2_OK) && (reg_addr != NULL) && (reg_data != NULL))
 8001032:	f997 3027 	ldrsb.w	r3, [r7, #39]	; 0x27
 8001036:	2b00      	cmp	r3, #0
 8001038:	d150      	bne.n	80010dc <bmp2_set_regs+0xce>
 800103a:	68fb      	ldr	r3, [r7, #12]
 800103c:	2b00      	cmp	r3, #0
 800103e:	d04d      	beq.n	80010dc <bmp2_set_regs+0xce>
 8001040:	68bb      	ldr	r3, [r7, #8]
 8001042:	2b00      	cmp	r3, #0
 8001044:	d04a      	beq.n	80010dc <bmp2_set_regs+0xce>
    {
        if (len > 0)
 8001046:	687b      	ldr	r3, [r7, #4]
 8001048:	2b00      	cmp	r3, #0
 800104a:	d043      	beq.n	80010d4 <bmp2_set_regs+0xc6>
        {
            temp_buff[0] = reg_data[0];
 800104c:	68bb      	ldr	r3, [r7, #8]
 800104e:	781b      	ldrb	r3, [r3, #0]
 8001050:	753b      	strb	r3, [r7, #20]

            /* Mask the register address' MSB if interface selected is SPI */
            if (dev->intf == BMP2_SPI_INTF)
 8001052:	683b      	ldr	r3, [r7, #0]
 8001054:	785b      	ldrb	r3, [r3, #1]
 8001056:	2b00      	cmp	r3, #0
 8001058:	d114      	bne.n	8001084 <bmp2_set_regs+0x76>
            {
                /* Converting all the reg address into proper SPI write address
                 * i.e making MSB(R/`W) bit 0
                 */
                for (reg_addr_cnt = 0; reg_addr_cnt < len; reg_addr_cnt++)
 800105a:	2300      	movs	r3, #0
 800105c:	77fb      	strb	r3, [r7, #31]
 800105e:	e00d      	b.n	800107c <bmp2_set_regs+0x6e>
                {
                    reg_addr[reg_addr_cnt] = reg_addr[reg_addr_cnt] & BMP2_SPI_WR_MASK;
 8001060:	7ffb      	ldrb	r3, [r7, #31]
 8001062:	68fa      	ldr	r2, [r7, #12]
 8001064:	4413      	add	r3, r2
 8001066:	781a      	ldrb	r2, [r3, #0]
 8001068:	7ffb      	ldrb	r3, [r7, #31]
 800106a:	68f9      	ldr	r1, [r7, #12]
 800106c:	440b      	add	r3, r1
 800106e:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8001072:	b2d2      	uxtb	r2, r2
 8001074:	701a      	strb	r2, [r3, #0]
                for (reg_addr_cnt = 0; reg_addr_cnt < len; reg_addr_cnt++)
 8001076:	7ffb      	ldrb	r3, [r7, #31]
 8001078:	3301      	adds	r3, #1
 800107a:	77fb      	strb	r3, [r7, #31]
 800107c:	7ffb      	ldrb	r3, [r7, #31]
 800107e:	687a      	ldr	r2, [r7, #4]
 8001080:	429a      	cmp	r2, r3
 8001082:	d8ed      	bhi.n	8001060 <bmp2_set_regs+0x52>
                }
            }

            /* Burst write mode */
            if (len > 1)
 8001084:	687b      	ldr	r3, [r7, #4]
 8001086:	2b01      	cmp	r3, #1
 8001088:	d90b      	bls.n	80010a2 <bmp2_set_regs+0x94>
            {
                /* Interleave register address w.r.t data for burst write */
                interleave_data(reg_addr, temp_buff, reg_data, len);
 800108a:	f107 0114 	add.w	r1, r7, #20
 800108e:	687b      	ldr	r3, [r7, #4]
 8001090:	68ba      	ldr	r2, [r7, #8]
 8001092:	68f8      	ldr	r0, [r7, #12]
 8001094:	f000 f9c6 	bl	8001424 <interleave_data>
                temp_len = ((len * 2) - 1);
 8001098:	687b      	ldr	r3, [r7, #4]
 800109a:	005b      	lsls	r3, r3, #1
 800109c:	3b01      	subs	r3, #1
 800109e:	623b      	str	r3, [r7, #32]
 80010a0:	e001      	b.n	80010a6 <bmp2_set_regs+0x98>
            }
            else
            {
                temp_len = len;
 80010a2:	687b      	ldr	r3, [r7, #4]
 80010a4:	623b      	str	r3, [r7, #32]
            }

            dev->intf_rslt = dev->write(reg_addr[0], temp_buff, temp_len, dev->intf_ptr);
 80010a6:	683b      	ldr	r3, [r7, #0]
 80010a8:	691c      	ldr	r4, [r3, #16]
 80010aa:	68fb      	ldr	r3, [r7, #12]
 80010ac:	7818      	ldrb	r0, [r3, #0]
 80010ae:	683b      	ldr	r3, [r7, #0]
 80010b0:	685b      	ldr	r3, [r3, #4]
 80010b2:	f107 0114 	add.w	r1, r7, #20
 80010b6:	6a3a      	ldr	r2, [r7, #32]
 80010b8:	47a0      	blx	r4
 80010ba:	4603      	mov	r3, r0
 80010bc:	461a      	mov	r2, r3
 80010be:	683b      	ldr	r3, [r7, #0]
 80010c0:	721a      	strb	r2, [r3, #8]

            /* Check for communication error and mask with an internal error code */
            if (dev->intf_rslt != BMP2_INTF_RET_SUCCESS)
 80010c2:	683b      	ldr	r3, [r7, #0]
 80010c4:	f993 3008 	ldrsb.w	r3, [r3, #8]
 80010c8:	2b00      	cmp	r3, #0
 80010ca:	d00b      	beq.n	80010e4 <bmp2_set_regs+0xd6>
            {
                rslt = BMP2_E_COM_FAIL;
 80010cc:	23fe      	movs	r3, #254	; 0xfe
 80010ce:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
        if (len > 0)
 80010d2:	e007      	b.n	80010e4 <bmp2_set_regs+0xd6>
            }
        }
        else
        {
            rslt = BMP2_E_INVALID_LEN;
 80010d4:	23fd      	movs	r3, #253	; 0xfd
 80010d6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
        if (len > 0)
 80010da:	e003      	b.n	80010e4 <bmp2_set_regs+0xd6>
        }
    }
    else
    {
        rslt = BMP2_E_NULL_PTR;
 80010dc:	23ff      	movs	r3, #255	; 0xff
 80010de:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80010e2:	e000      	b.n	80010e6 <bmp2_set_regs+0xd8>
        if (len > 0)
 80010e4:	bf00      	nop
    }

    return rslt;
 80010e6:	f997 3027 	ldrsb.w	r3, [r7, #39]	; 0x27
}
 80010ea:	4618      	mov	r0, r3
 80010ec:	372c      	adds	r7, #44	; 0x2c
 80010ee:	46bd      	mov	sp, r7
 80010f0:	bd90      	pop	{r4, r7, pc}

080010f2 <bmp2_soft_reset>:

/*!
 * @brief This API triggers the soft-reset of the sensor.
 */
int8_t bmp2_soft_reset(struct bmp2_dev *dev)
{
 80010f2:	b580      	push	{r7, lr}
 80010f4:	b084      	sub	sp, #16
 80010f6:	af00      	add	r7, sp, #0
 80010f8:	6078      	str	r0, [r7, #4]
    int8_t rslt;
    uint8_t reg_addr = BMP2_REG_SOFT_RESET;
 80010fa:	23e0      	movs	r3, #224	; 0xe0
 80010fc:	73bb      	strb	r3, [r7, #14]
    uint8_t soft_rst_cmd = BMP2_SOFT_RESET_CMD;
 80010fe:	23b6      	movs	r3, #182	; 0xb6
 8001100:	737b      	strb	r3, [r7, #13]

    rslt = bmp2_set_regs(&reg_addr, &soft_rst_cmd, 1, dev);
 8001102:	f107 010d 	add.w	r1, r7, #13
 8001106:	f107 000e 	add.w	r0, r7, #14
 800110a:	687b      	ldr	r3, [r7, #4]
 800110c:	2201      	movs	r2, #1
 800110e:	f7ff ff7e 	bl	800100e <bmp2_set_regs>
 8001112:	4603      	mov	r3, r0
 8001114:	73fb      	strb	r3, [r7, #15]

    return rslt;
 8001116:	f997 300f 	ldrsb.w	r3, [r7, #15]
}
 800111a:	4618      	mov	r0, r3
 800111c:	3710      	adds	r7, #16
 800111e:	46bd      	mov	sp, r7
 8001120:	bd80      	pop	{r7, pc}

08001122 <bmp2_get_config>:
 * register. It gives the currently set temperature and pressure over-sampling
 * configuration, power mode configuration, sleep duration and
 * IIR filter coefficient.
 */
int8_t bmp2_get_config(struct bmp2_config *conf, struct bmp2_dev *dev)
{
 8001122:	b580      	push	{r7, lr}
 8001124:	b084      	sub	sp, #16
 8001126:	af00      	add	r7, sp, #0
 8001128:	6078      	str	r0, [r7, #4]
 800112a:	6039      	str	r1, [r7, #0]
    int8_t rslt;
    uint8_t temp[2] = { 0, 0 };
 800112c:	2300      	movs	r3, #0
 800112e:	81bb      	strh	r3, [r7, #12]

    if (conf != NULL)
 8001130:	687b      	ldr	r3, [r7, #4]
 8001132:	2b00      	cmp	r3, #0
 8001134:	d02d      	beq.n	8001192 <bmp2_get_config+0x70>
    {
        rslt = bmp2_get_regs(BMP2_REG_CTRL_MEAS, temp, 2, dev);
 8001136:	f107 010c 	add.w	r1, r7, #12
 800113a:	683b      	ldr	r3, [r7, #0]
 800113c:	2202      	movs	r2, #2
 800113e:	20f4      	movs	r0, #244	; 0xf4
 8001140:	f7ff ff2d 	bl	8000f9e <bmp2_get_regs>
 8001144:	4603      	mov	r3, r0
 8001146:	73fb      	strb	r3, [r7, #15]

        if (rslt == BMP2_OK)
 8001148:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800114c:	2b00      	cmp	r3, #0
 800114e:	d122      	bne.n	8001196 <bmp2_get_config+0x74>
        {
            conf->os_temp = BMP2_GET_BITS(temp[0], BMP2_OS_TEMP);
 8001150:	7b3b      	ldrb	r3, [r7, #12]
 8001152:	095b      	lsrs	r3, r3, #5
 8001154:	b2da      	uxtb	r2, r3
 8001156:	687b      	ldr	r3, [r7, #4]
 8001158:	701a      	strb	r2, [r3, #0]
            conf->os_pres = BMP2_GET_BITS(temp[0], BMP2_OS_PRES);
 800115a:	7b3b      	ldrb	r3, [r7, #12]
 800115c:	109b      	asrs	r3, r3, #2
 800115e:	b2db      	uxtb	r3, r3
 8001160:	f003 0307 	and.w	r3, r3, #7
 8001164:	b2da      	uxtb	r2, r3
 8001166:	687b      	ldr	r3, [r7, #4]
 8001168:	705a      	strb	r2, [r3, #1]
            conf->odr = BMP2_GET_BITS(temp[1], BMP2_STANDBY_DURN);
 800116a:	7b7b      	ldrb	r3, [r7, #13]
 800116c:	095b      	lsrs	r3, r3, #5
 800116e:	b2da      	uxtb	r2, r3
 8001170:	687b      	ldr	r3, [r7, #4]
 8001172:	709a      	strb	r2, [r3, #2]
            conf->filter = BMP2_GET_BITS(temp[1], BMP2_FILTER);
 8001174:	7b7b      	ldrb	r3, [r7, #13]
 8001176:	109b      	asrs	r3, r3, #2
 8001178:	b2db      	uxtb	r3, r3
 800117a:	f003 0307 	and.w	r3, r3, #7
 800117e:	b2da      	uxtb	r2, r3
 8001180:	687b      	ldr	r3, [r7, #4]
 8001182:	711a      	strb	r2, [r3, #4]
            conf->spi3w_en = BMP2_GET_BITS_POS_0(temp[1], BMP2_SPI3_ENABLE);
 8001184:	7b7b      	ldrb	r3, [r7, #13]
 8001186:	f003 0301 	and.w	r3, r3, #1
 800118a:	b2da      	uxtb	r2, r3
 800118c:	687b      	ldr	r3, [r7, #4]
 800118e:	715a      	strb	r2, [r3, #5]
 8001190:	e001      	b.n	8001196 <bmp2_get_config+0x74>
        }
    }
    else
    {
        rslt = BMP2_E_NULL_PTR;
 8001192:	23ff      	movs	r3, #255	; 0xff
 8001194:	73fb      	strb	r3, [r7, #15]
    }

    return rslt;
 8001196:	f997 300f 	ldrsb.w	r3, [r7, #15]
}
 800119a:	4618      	mov	r0, r3
 800119c:	3710      	adds	r7, #16
 800119e:	46bd      	mov	sp, r7
 80011a0:	bd80      	pop	{r7, pc}

080011a2 <bmp2_set_config>:
 * @brief This API writes the data to the ctrl_meas register and config register.
 * It sets the over-sampling mode, power mode configuration,
 * sleep duration and IIR filter coefficient.
 */
int8_t bmp2_set_config(const struct bmp2_config *conf, struct bmp2_dev *dev)
{
 80011a2:	b580      	push	{r7, lr}
 80011a4:	b082      	sub	sp, #8
 80011a6:	af00      	add	r7, sp, #0
 80011a8:	6078      	str	r0, [r7, #4]
 80011aa:	6039      	str	r1, [r7, #0]
    return conf_sensor(BMP2_POWERMODE_SLEEP, conf, dev);
 80011ac:	683a      	ldr	r2, [r7, #0]
 80011ae:	6879      	ldr	r1, [r7, #4]
 80011b0:	2000      	movs	r0, #0
 80011b2:	f000 f9fd 	bl	80015b0 <conf_sensor>
 80011b6:	4603      	mov	r3, r0
}
 80011b8:	4618      	mov	r0, r3
 80011ba:	3708      	adds	r7, #8
 80011bc:	46bd      	mov	sp, r7
 80011be:	bd80      	pop	{r7, pc}

080011c0 <bmp2_get_status>:

/*!
 * @brief This API reads the status register
 */
int8_t bmp2_get_status(struct bmp2_status *status, struct bmp2_dev *dev)
{
 80011c0:	b580      	push	{r7, lr}
 80011c2:	b084      	sub	sp, #16
 80011c4:	af00      	add	r7, sp, #0
 80011c6:	6078      	str	r0, [r7, #4]
 80011c8:	6039      	str	r1, [r7, #0]
    int8_t rslt;
    uint8_t temp;

    if (status != NULL)
 80011ca:	687b      	ldr	r3, [r7, #4]
 80011cc:	2b00      	cmp	r3, #0
 80011ce:	d01b      	beq.n	8001208 <bmp2_get_status+0x48>
    {
        rslt = bmp2_get_regs(BMP2_REG_STATUS, &temp, 1, dev);
 80011d0:	f107 010e 	add.w	r1, r7, #14
 80011d4:	683b      	ldr	r3, [r7, #0]
 80011d6:	2201      	movs	r2, #1
 80011d8:	20f3      	movs	r0, #243	; 0xf3
 80011da:	f7ff fee0 	bl	8000f9e <bmp2_get_regs>
 80011de:	4603      	mov	r3, r0
 80011e0:	73fb      	strb	r3, [r7, #15]

        if (rslt == BMP2_OK)
 80011e2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80011e6:	2b00      	cmp	r3, #0
 80011e8:	d110      	bne.n	800120c <bmp2_get_status+0x4c>
        {
            status->measuring = BMP2_GET_BITS(temp, BMP2_STATUS_MEAS);
 80011ea:	7bbb      	ldrb	r3, [r7, #14]
 80011ec:	10db      	asrs	r3, r3, #3
 80011ee:	b2db      	uxtb	r3, r3
 80011f0:	f003 0301 	and.w	r3, r3, #1
 80011f4:	b2da      	uxtb	r2, r3
 80011f6:	687b      	ldr	r3, [r7, #4]
 80011f8:	701a      	strb	r2, [r3, #0]
            status->im_update = BMP2_GET_BITS_POS_0(temp, BMP2_STATUS_IM_UPDATE);
 80011fa:	7bbb      	ldrb	r3, [r7, #14]
 80011fc:	f003 0301 	and.w	r3, r3, #1
 8001200:	b2da      	uxtb	r2, r3
 8001202:	687b      	ldr	r3, [r7, #4]
 8001204:	705a      	strb	r2, [r3, #1]
 8001206:	e001      	b.n	800120c <bmp2_get_status+0x4c>
        }
    }
    else
    {
        rslt = BMP2_E_NULL_PTR;
 8001208:	23ff      	movs	r3, #255	; 0xff
 800120a:	73fb      	strb	r3, [r7, #15]
    }

    return rslt;
 800120c:	f997 300f 	ldrsb.w	r3, [r7, #15]
}
 8001210:	4618      	mov	r0, r3
 8001212:	3710      	adds	r7, #16
 8001214:	46bd      	mov	sp, r7
 8001216:	bd80      	pop	{r7, pc}

08001218 <bmp2_set_power_mode>:

/*!
 * @brief This API writes the power mode.
 */
int8_t bmp2_set_power_mode(uint8_t mode, const struct bmp2_config *conf, struct bmp2_dev *dev)
{
 8001218:	b580      	push	{r7, lr}
 800121a:	b086      	sub	sp, #24
 800121c:	af00      	add	r7, sp, #0
 800121e:	4603      	mov	r3, r0
 8001220:	60b9      	str	r1, [r7, #8]
 8001222:	607a      	str	r2, [r7, #4]
 8001224:	73fb      	strb	r3, [r7, #15]
    int8_t rslt;

    rslt = conf_sensor(mode, conf, dev);
 8001226:	7bfb      	ldrb	r3, [r7, #15]
 8001228:	687a      	ldr	r2, [r7, #4]
 800122a:	68b9      	ldr	r1, [r7, #8]
 800122c:	4618      	mov	r0, r3
 800122e:	f000 f9bf 	bl	80015b0 <conf_sensor>
 8001232:	4603      	mov	r3, r0
 8001234:	75fb      	strb	r3, [r7, #23]

    return rslt;
 8001236:	f997 3017 	ldrsb.w	r3, [r7, #23]
}
 800123a:	4618      	mov	r0, r3
 800123c:	3718      	adds	r7, #24
 800123e:	46bd      	mov	sp, r7
 8001240:	bd80      	pop	{r7, pc}

08001242 <bmp2_get_sensor_data>:
 * @brief This API reads the pressure and temperature data from the
 * sensor, compensates the data and store it in the bmp2_data structure
 * instance passed by the user.
 */
int8_t bmp2_get_sensor_data(struct bmp2_data *comp_data, struct bmp2_dev *dev)
{
 8001242:	b580      	push	{r7, lr}
 8001244:	b086      	sub	sp, #24
 8001246:	af00      	add	r7, sp, #0
 8001248:	6078      	str	r0, [r7, #4]
 800124a:	6039      	str	r1, [r7, #0]
    int8_t rslt;
    uint8_t temp[BMP2_P_T_LEN] = { 0 };
 800124c:	2300      	movs	r3, #0
 800124e:	613b      	str	r3, [r7, #16]
 8001250:	2300      	movs	r3, #0
 8001252:	82bb      	strh	r3, [r7, #20]
    struct bmp2_uncomp_data uncomp_data = { 0 };
 8001254:	f107 0308 	add.w	r3, r7, #8
 8001258:	2200      	movs	r2, #0
 800125a:	601a      	str	r2, [r3, #0]
 800125c:	605a      	str	r2, [r3, #4]

    if (comp_data != NULL)
 800125e:	687b      	ldr	r3, [r7, #4]
 8001260:	2b00      	cmp	r3, #0
 8001262:	d024      	beq.n	80012ae <bmp2_get_sensor_data+0x6c>
    {
        rslt = bmp2_get_regs(BMP2_REG_PRES_MSB, temp, BMP2_P_T_LEN, dev);
 8001264:	f107 0110 	add.w	r1, r7, #16
 8001268:	683b      	ldr	r3, [r7, #0]
 800126a:	2206      	movs	r2, #6
 800126c:	20f7      	movs	r0, #247	; 0xf7
 800126e:	f7ff fe96 	bl	8000f9e <bmp2_get_regs>
 8001272:	4603      	mov	r3, r0
 8001274:	75fb      	strb	r3, [r7, #23]

        if (rslt == BMP2_OK)
 8001276:	f997 3017 	ldrsb.w	r3, [r7, #23]
 800127a:	2b00      	cmp	r3, #0
 800127c:	d119      	bne.n	80012b2 <bmp2_get_sensor_data+0x70>
        {
            /* Parse the read data from the sensor */
            rslt = parse_sensor_data(temp, &uncomp_data);
 800127e:	f107 0208 	add.w	r2, r7, #8
 8001282:	f107 0310 	add.w	r3, r7, #16
 8001286:	4611      	mov	r1, r2
 8001288:	4618      	mov	r0, r3
 800128a:	f000 fab9 	bl	8001800 <parse_sensor_data>
 800128e:	4603      	mov	r3, r0
 8001290:	75fb      	strb	r3, [r7, #23]

            if (rslt == BMP2_OK)
 8001292:	f997 3017 	ldrsb.w	r3, [r7, #23]
 8001296:	2b00      	cmp	r3, #0
 8001298:	d10b      	bne.n	80012b2 <bmp2_get_sensor_data+0x70>
            {
                /* Compensate the pressure and/or temperature
                 * data from the sensor
                 */
                rslt = bmp2_compensate_data(&uncomp_data, comp_data, dev);
 800129a:	f107 0308 	add.w	r3, r7, #8
 800129e:	683a      	ldr	r2, [r7, #0]
 80012a0:	6879      	ldr	r1, [r7, #4]
 80012a2:	4618      	mov	r0, r3
 80012a4:	f000 f80b 	bl	80012be <bmp2_compensate_data>
 80012a8:	4603      	mov	r3, r0
 80012aa:	75fb      	strb	r3, [r7, #23]
 80012ac:	e001      	b.n	80012b2 <bmp2_get_sensor_data+0x70>
            }
        }
    }
    else
    {
        rslt = BMP2_E_NULL_PTR;
 80012ae:	23ff      	movs	r3, #255	; 0xff
 80012b0:	75fb      	strb	r3, [r7, #23]
    }

    return rslt;
 80012b2:	f997 3017 	ldrsb.w	r3, [r7, #23]
}
 80012b6:	4618      	mov	r0, r3
 80012b8:	3718      	adds	r7, #24
 80012ba:	46bd      	mov	sp, r7
 80012bc:	bd80      	pop	{r7, pc}

080012be <bmp2_compensate_data>:
 * temperature data.
 */
int8_t bmp2_compensate_data(const struct bmp2_uncomp_data *uncomp_data,
                            struct bmp2_data *comp_data,
                            struct bmp2_dev *dev)
{
 80012be:	b580      	push	{r7, lr}
 80012c0:	b086      	sub	sp, #24
 80012c2:	af00      	add	r7, sp, #0
 80012c4:	60f8      	str	r0, [r7, #12]
 80012c6:	60b9      	str	r1, [r7, #8]
 80012c8:	607a      	str	r2, [r7, #4]
    int8_t rslt;

    rslt = null_ptr_check(dev);
 80012ca:	6878      	ldr	r0, [r7, #4]
 80012cc:	f000 f88a 	bl	80013e4 <null_ptr_check>
 80012d0:	4603      	mov	r3, r0
 80012d2:	75fb      	strb	r3, [r7, #23]

    if ((rslt == BMP2_OK) && (uncomp_data != NULL) && (comp_data != NULL))
 80012d4:	f997 3017 	ldrsb.w	r3, [r7, #23]
 80012d8:	2b00      	cmp	r3, #0
 80012da:	d129      	bne.n	8001330 <bmp2_compensate_data+0x72>
 80012dc:	68fb      	ldr	r3, [r7, #12]
 80012de:	2b00      	cmp	r3, #0
 80012e0:	d026      	beq.n	8001330 <bmp2_compensate_data+0x72>
 80012e2:	68bb      	ldr	r3, [r7, #8]
 80012e4:	2b00      	cmp	r3, #0
 80012e6:	d023      	beq.n	8001330 <bmp2_compensate_data+0x72>
    {
        /* Initialize to zero */
        comp_data->temperature = 0;
 80012e8:	68b9      	ldr	r1, [r7, #8]
 80012ea:	f04f 0200 	mov.w	r2, #0
 80012ee:	f04f 0300 	mov.w	r3, #0
 80012f2:	e9c1 2302 	strd	r2, r3, [r1, #8]
        comp_data->pressure = 0;
 80012f6:	68b9      	ldr	r1, [r7, #8]
 80012f8:	f04f 0200 	mov.w	r2, #0
 80012fc:	f04f 0300 	mov.w	r3, #0
 8001300:	e9c1 2300 	strd	r2, r3, [r1]

        rslt = compensate_temperature(&comp_data->temperature, uncomp_data, dev);
 8001304:	68bb      	ldr	r3, [r7, #8]
 8001306:	3308      	adds	r3, #8
 8001308:	687a      	ldr	r2, [r7, #4]
 800130a:	68f9      	ldr	r1, [r7, #12]
 800130c:	4618      	mov	r0, r3
 800130e:	f000 fabb 	bl	8001888 <compensate_temperature>
 8001312:	4603      	mov	r3, r0
 8001314:	75fb      	strb	r3, [r7, #23]

        if (rslt == BMP2_OK)
 8001316:	f997 3017 	ldrsb.w	r3, [r7, #23]
 800131a:	2b00      	cmp	r3, #0
 800131c:	d10a      	bne.n	8001334 <bmp2_compensate_data+0x76>
        {
            rslt = compensate_pressure(&comp_data->pressure, uncomp_data, dev);
 800131e:	68bb      	ldr	r3, [r7, #8]
 8001320:	687a      	ldr	r2, [r7, #4]
 8001322:	68f9      	ldr	r1, [r7, #12]
 8001324:	4618      	mov	r0, r3
 8001326:	f000 fba7 	bl	8001a78 <compensate_pressure>
 800132a:	4603      	mov	r3, r0
 800132c:	75fb      	strb	r3, [r7, #23]
        if (rslt == BMP2_OK)
 800132e:	e001      	b.n	8001334 <bmp2_compensate_data+0x76>
        }
    }
    else
    {
        rslt = BMP2_E_NULL_PTR;
 8001330:	23ff      	movs	r3, #255	; 0xff
 8001332:	75fb      	strb	r3, [r7, #23]
    }

    return rslt;
 8001334:	f997 3017 	ldrsb.w	r3, [r7, #23]
}
 8001338:	4618      	mov	r0, r3
 800133a:	3718      	adds	r7, #24
 800133c:	46bd      	mov	sp, r7
 800133e:	bd80      	pop	{r7, pc}

08001340 <bmp2_compute_meas_time>:
/*!
 * @brief This API computes the measurement time in microseconds for the
 * active configuration based on standbytime(conf->odr) and over-sampling mode(conf->os_mode)
 */
int8_t bmp2_compute_meas_time(uint32_t *sampling_time, const struct bmp2_config *conf, const struct bmp2_dev *dev)
{
 8001340:	b5b0      	push	{r4, r5, r7, lr}
 8001342:	b092      	sub	sp, #72	; 0x48
 8001344:	af00      	add	r7, sp, #0
 8001346:	60f8      	str	r0, [r7, #12]
 8001348:	60b9      	str	r1, [r7, #8]
 800134a:	607a      	str	r2, [r7, #4]
    int8_t rslt;

    /* Array contains measurement time in microseconds */
    uint32_t measurement_time[] = { 5500, 7500, 11500, 19500, 37500 };
 800134c:	4b23      	ldr	r3, [pc, #140]	; (80013dc <bmp2_compute_meas_time+0x9c>)
 800134e:	f107 0430 	add.w	r4, r7, #48	; 0x30
 8001352:	461d      	mov	r5, r3
 8001354:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001356:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001358:	682b      	ldr	r3, [r5, #0]
 800135a:	6023      	str	r3, [r4, #0]
    uint32_t standby_time[] = { 500, 62500, 125000, 250000, 500000, 1000000, 2000000, 4000000 };
 800135c:	4b20      	ldr	r3, [pc, #128]	; (80013e0 <bmp2_compute_meas_time+0xa0>)
 800135e:	f107 0410 	add.w	r4, r7, #16
 8001362:	461d      	mov	r5, r3
 8001364:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001366:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001368:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800136c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}

    rslt = null_ptr_check(dev);
 8001370:	6878      	ldr	r0, [r7, #4]
 8001372:	f000 f837 	bl	80013e4 <null_ptr_check>
 8001376:	4603      	mov	r3, r0
 8001378:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47

    if ((rslt == BMP2_OK) && (conf != NULL))
 800137c:	f997 3047 	ldrsb.w	r3, [r7, #71]	; 0x47
 8001380:	2b00      	cmp	r3, #0
 8001382:	d122      	bne.n	80013ca <bmp2_compute_meas_time+0x8a>
 8001384:	68bb      	ldr	r3, [r7, #8]
 8001386:	2b00      	cmp	r3, #0
 8001388:	d01f      	beq.n	80013ca <bmp2_compute_meas_time+0x8a>
    {
        if (dev->power_mode == BMP2_POWERMODE_NORMAL)
 800138a:	687b      	ldr	r3, [r7, #4]
 800138c:	7e1b      	ldrb	r3, [r3, #24]
 800138e:	2b03      	cmp	r3, #3
 8001390:	d111      	bne.n	80013b6 <bmp2_compute_meas_time+0x76>
        {
            /* Time in microseconds */
            (*sampling_time) = measurement_time[conf->os_mode] + standby_time[conf->odr];
 8001392:	68bb      	ldr	r3, [r7, #8]
 8001394:	78db      	ldrb	r3, [r3, #3]
 8001396:	009b      	lsls	r3, r3, #2
 8001398:	3348      	adds	r3, #72	; 0x48
 800139a:	443b      	add	r3, r7
 800139c:	f853 2c18 	ldr.w	r2, [r3, #-24]
 80013a0:	68bb      	ldr	r3, [r7, #8]
 80013a2:	789b      	ldrb	r3, [r3, #2]
 80013a4:	009b      	lsls	r3, r3, #2
 80013a6:	3348      	adds	r3, #72	; 0x48
 80013a8:	443b      	add	r3, r7
 80013aa:	f853 3c38 	ldr.w	r3, [r3, #-56]
 80013ae:	441a      	add	r2, r3
 80013b0:	68fb      	ldr	r3, [r7, #12]
 80013b2:	601a      	str	r2, [r3, #0]
        if (dev->power_mode == BMP2_POWERMODE_NORMAL)
 80013b4:	e00c      	b.n	80013d0 <bmp2_compute_meas_time+0x90>
        }
        else
        {
            /* Time in microseconds */
            (*sampling_time) = measurement_time[conf->os_mode];
 80013b6:	68bb      	ldr	r3, [r7, #8]
 80013b8:	78db      	ldrb	r3, [r3, #3]
 80013ba:	009b      	lsls	r3, r3, #2
 80013bc:	3348      	adds	r3, #72	; 0x48
 80013be:	443b      	add	r3, r7
 80013c0:	f853 2c18 	ldr.w	r2, [r3, #-24]
 80013c4:	68fb      	ldr	r3, [r7, #12]
 80013c6:	601a      	str	r2, [r3, #0]
        if (dev->power_mode == BMP2_POWERMODE_NORMAL)
 80013c8:	e002      	b.n	80013d0 <bmp2_compute_meas_time+0x90>
        }
    }
    else
    {
        rslt = BMP2_E_NULL_PTR;
 80013ca:	23ff      	movs	r3, #255	; 0xff
 80013cc:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
    }

    return rslt;
 80013d0:	f997 3047 	ldrsb.w	r3, [r7, #71]	; 0x47
}
 80013d4:	4618      	mov	r0, r3
 80013d6:	3748      	adds	r7, #72	; 0x48
 80013d8:	46bd      	mov	sp, r7
 80013da:	bdb0      	pop	{r4, r5, r7, pc}
 80013dc:	0800a88c 	.word	0x0800a88c
 80013e0:	0800a8a0 	.word	0x0800a8a0

080013e4 <null_ptr_check>:
/*!
 * @brief This internal API is used to check for null-pointers in the device
 * structure.
 */
static int8_t null_ptr_check(const struct bmp2_dev *dev)
{
 80013e4:	b480      	push	{r7}
 80013e6:	b085      	sub	sp, #20
 80013e8:	af00      	add	r7, sp, #0
 80013ea:	6078      	str	r0, [r7, #4]
    int8_t rslt;

    if ((dev == NULL) || (dev->read == NULL) || (dev->write == NULL) || (dev->delay_us == NULL))
 80013ec:	687b      	ldr	r3, [r7, #4]
 80013ee:	2b00      	cmp	r3, #0
 80013f0:	d00b      	beq.n	800140a <null_ptr_check+0x26>
 80013f2:	687b      	ldr	r3, [r7, #4]
 80013f4:	68db      	ldr	r3, [r3, #12]
 80013f6:	2b00      	cmp	r3, #0
 80013f8:	d007      	beq.n	800140a <null_ptr_check+0x26>
 80013fa:	687b      	ldr	r3, [r7, #4]
 80013fc:	691b      	ldr	r3, [r3, #16]
 80013fe:	2b00      	cmp	r3, #0
 8001400:	d003      	beq.n	800140a <null_ptr_check+0x26>
 8001402:	687b      	ldr	r3, [r7, #4]
 8001404:	695b      	ldr	r3, [r3, #20]
 8001406:	2b00      	cmp	r3, #0
 8001408:	d102      	bne.n	8001410 <null_ptr_check+0x2c>
    {
        /* Null-pointer found */
        rslt = BMP2_E_NULL_PTR;
 800140a:	23ff      	movs	r3, #255	; 0xff
 800140c:	73fb      	strb	r3, [r7, #15]
 800140e:	e001      	b.n	8001414 <null_ptr_check+0x30>
    }
    else
    {
        rslt = BMP2_OK;
 8001410:	2300      	movs	r3, #0
 8001412:	73fb      	strb	r3, [r7, #15]
    }

    return rslt;
 8001414:	f997 300f 	ldrsb.w	r3, [r7, #15]
}
 8001418:	4618      	mov	r0, r3
 800141a:	3714      	adds	r7, #20
 800141c:	46bd      	mov	sp, r7
 800141e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001422:	4770      	bx	lr

08001424 <interleave_data>:
/*!
 * @brief This internal API interleaves the register addresses and respective
 * register data for a burst write
 */
static void interleave_data(const uint8_t *reg_addr, uint8_t *temp_buff, const uint8_t *reg_data, uint32_t len)
{
 8001424:	b480      	push	{r7}
 8001426:	b087      	sub	sp, #28
 8001428:	af00      	add	r7, sp, #0
 800142a:	60f8      	str	r0, [r7, #12]
 800142c:	60b9      	str	r1, [r7, #8]
 800142e:	607a      	str	r2, [r7, #4]
 8001430:	603b      	str	r3, [r7, #0]
    uint32_t index;

    for (index = 1; index < len; index++)
 8001432:	2301      	movs	r3, #1
 8001434:	617b      	str	r3, [r7, #20]
 8001436:	e015      	b.n	8001464 <interleave_data+0x40>
    {
        temp_buff[(index * 2) - 1] = reg_addr[index];
 8001438:	68fa      	ldr	r2, [r7, #12]
 800143a:	697b      	ldr	r3, [r7, #20]
 800143c:	441a      	add	r2, r3
 800143e:	697b      	ldr	r3, [r7, #20]
 8001440:	005b      	lsls	r3, r3, #1
 8001442:	3b01      	subs	r3, #1
 8001444:	68b9      	ldr	r1, [r7, #8]
 8001446:	440b      	add	r3, r1
 8001448:	7812      	ldrb	r2, [r2, #0]
 800144a:	701a      	strb	r2, [r3, #0]
        temp_buff[index * 2] = reg_data[index];
 800144c:	687a      	ldr	r2, [r7, #4]
 800144e:	697b      	ldr	r3, [r7, #20]
 8001450:	441a      	add	r2, r3
 8001452:	697b      	ldr	r3, [r7, #20]
 8001454:	005b      	lsls	r3, r3, #1
 8001456:	68b9      	ldr	r1, [r7, #8]
 8001458:	440b      	add	r3, r1
 800145a:	7812      	ldrb	r2, [r2, #0]
 800145c:	701a      	strb	r2, [r3, #0]
    for (index = 1; index < len; index++)
 800145e:	697b      	ldr	r3, [r7, #20]
 8001460:	3301      	adds	r3, #1
 8001462:	617b      	str	r3, [r7, #20]
 8001464:	697a      	ldr	r2, [r7, #20]
 8001466:	683b      	ldr	r3, [r7, #0]
 8001468:	429a      	cmp	r2, r3
 800146a:	d3e5      	bcc.n	8001438 <interleave_data+0x14>
    }
}
 800146c:	bf00      	nop
 800146e:	bf00      	nop
 8001470:	371c      	adds	r7, #28
 8001472:	46bd      	mov	sp, r7
 8001474:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001478:	4770      	bx	lr

0800147a <get_calib_param>:
/*!
 * @brief This API is used to read the calibration parameters used
 * for calculating the compensated data.
 */
static int8_t get_calib_param(struct bmp2_dev *dev)
{
 800147a:	b580      	push	{r7, lr}
 800147c:	b08a      	sub	sp, #40	; 0x28
 800147e:	af00      	add	r7, sp, #0
 8001480:	6078      	str	r0, [r7, #4]
    int8_t rslt;
    uint8_t temp[BMP2_CALIB_DATA_SIZE] = { 0 };
 8001482:	2300      	movs	r3, #0
 8001484:	60fb      	str	r3, [r7, #12]
 8001486:	f107 0310 	add.w	r3, r7, #16
 800148a:	2200      	movs	r2, #0
 800148c:	601a      	str	r2, [r3, #0]
 800148e:	605a      	str	r2, [r3, #4]
 8001490:	609a      	str	r2, [r3, #8]
 8001492:	60da      	str	r2, [r3, #12]
 8001494:	611a      	str	r2, [r3, #16]
 8001496:	751a      	strb	r2, [r3, #20]

    rslt = bmp2_get_regs(BMP2_REG_DIG_T1_LSB, temp, BMP2_CALIB_DATA_SIZE, dev);
 8001498:	f107 010c 	add.w	r1, r7, #12
 800149c:	687b      	ldr	r3, [r7, #4]
 800149e:	2219      	movs	r2, #25
 80014a0:	2088      	movs	r0, #136	; 0x88
 80014a2:	f7ff fd7c 	bl	8000f9e <bmp2_get_regs>
 80014a6:	4603      	mov	r3, r0
 80014a8:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27

    if (rslt == BMP2_OK)
 80014ac:	f997 3027 	ldrsb.w	r3, [r7, #39]	; 0x27
 80014b0:	2b00      	cmp	r3, #0
 80014b2:	d177      	bne.n	80015a4 <get_calib_param+0x12a>
    {
        dev->calib_param.dig_t1 = (uint16_t) (BMP2_MSBLSB_TO_U16(temp[BMP2_DIG_T1_MSB_POS], temp[BMP2_DIG_T1_LSB_POS]));
 80014b4:	7b7b      	ldrb	r3, [r7, #13]
 80014b6:	021b      	lsls	r3, r3, #8
 80014b8:	b21a      	sxth	r2, r3
 80014ba:	7b3b      	ldrb	r3, [r7, #12]
 80014bc:	b21b      	sxth	r3, r3
 80014be:	4313      	orrs	r3, r2
 80014c0:	b21b      	sxth	r3, r3
 80014c2:	b29a      	uxth	r2, r3
 80014c4:	687b      	ldr	r3, [r7, #4]
 80014c6:	839a      	strh	r2, [r3, #28]
        dev->calib_param.dig_t2 = (int16_t) (BMP2_MSBLSB_TO_U16(temp[BMP2_DIG_T2_MSB_POS], temp[BMP2_DIG_T2_LSB_POS]));
 80014c8:	7bfb      	ldrb	r3, [r7, #15]
 80014ca:	021b      	lsls	r3, r3, #8
 80014cc:	b21a      	sxth	r2, r3
 80014ce:	7bbb      	ldrb	r3, [r7, #14]
 80014d0:	b21b      	sxth	r3, r3
 80014d2:	4313      	orrs	r3, r2
 80014d4:	b21a      	sxth	r2, r3
 80014d6:	687b      	ldr	r3, [r7, #4]
 80014d8:	83da      	strh	r2, [r3, #30]
        dev->calib_param.dig_t3 = (int16_t) (BMP2_MSBLSB_TO_U16(temp[BMP2_DIG_T3_MSB_POS], temp[BMP2_DIG_T3_LSB_POS]));
 80014da:	7c7b      	ldrb	r3, [r7, #17]
 80014dc:	021b      	lsls	r3, r3, #8
 80014de:	b21a      	sxth	r2, r3
 80014e0:	7c3b      	ldrb	r3, [r7, #16]
 80014e2:	b21b      	sxth	r3, r3
 80014e4:	4313      	orrs	r3, r2
 80014e6:	b21a      	sxth	r2, r3
 80014e8:	687b      	ldr	r3, [r7, #4]
 80014ea:	841a      	strh	r2, [r3, #32]
        dev->calib_param.dig_p1 = (uint16_t) (BMP2_MSBLSB_TO_U16(temp[BMP2_DIG_P1_MSB_POS], temp[BMP2_DIG_P1_LSB_POS]));
 80014ec:	7cfb      	ldrb	r3, [r7, #19]
 80014ee:	021b      	lsls	r3, r3, #8
 80014f0:	b21a      	sxth	r2, r3
 80014f2:	7cbb      	ldrb	r3, [r7, #18]
 80014f4:	b21b      	sxth	r3, r3
 80014f6:	4313      	orrs	r3, r2
 80014f8:	b21b      	sxth	r3, r3
 80014fa:	b29a      	uxth	r2, r3
 80014fc:	687b      	ldr	r3, [r7, #4]
 80014fe:	845a      	strh	r2, [r3, #34]	; 0x22
        dev->calib_param.dig_p2 = (int16_t) (BMP2_MSBLSB_TO_U16(temp[BMP2_DIG_P2_MSB_POS], temp[BMP2_DIG_P2_LSB_POS]));
 8001500:	7d7b      	ldrb	r3, [r7, #21]
 8001502:	021b      	lsls	r3, r3, #8
 8001504:	b21a      	sxth	r2, r3
 8001506:	7d3b      	ldrb	r3, [r7, #20]
 8001508:	b21b      	sxth	r3, r3
 800150a:	4313      	orrs	r3, r2
 800150c:	b21a      	sxth	r2, r3
 800150e:	687b      	ldr	r3, [r7, #4]
 8001510:	849a      	strh	r2, [r3, #36]	; 0x24
        dev->calib_param.dig_p3 = (int16_t) (BMP2_MSBLSB_TO_U16(temp[BMP2_DIG_P3_MSB_POS], temp[BMP2_DIG_P3_LSB_POS]));
 8001512:	7dfb      	ldrb	r3, [r7, #23]
 8001514:	021b      	lsls	r3, r3, #8
 8001516:	b21a      	sxth	r2, r3
 8001518:	7dbb      	ldrb	r3, [r7, #22]
 800151a:	b21b      	sxth	r3, r3
 800151c:	4313      	orrs	r3, r2
 800151e:	b21a      	sxth	r2, r3
 8001520:	687b      	ldr	r3, [r7, #4]
 8001522:	84da      	strh	r2, [r3, #38]	; 0x26
        dev->calib_param.dig_p4 = (int16_t) (BMP2_MSBLSB_TO_U16(temp[BMP2_DIG_P4_MSB_POS], temp[BMP2_DIG_P4_LSB_POS]));
 8001524:	7e7b      	ldrb	r3, [r7, #25]
 8001526:	021b      	lsls	r3, r3, #8
 8001528:	b21a      	sxth	r2, r3
 800152a:	7e3b      	ldrb	r3, [r7, #24]
 800152c:	b21b      	sxth	r3, r3
 800152e:	4313      	orrs	r3, r2
 8001530:	b21a      	sxth	r2, r3
 8001532:	687b      	ldr	r3, [r7, #4]
 8001534:	851a      	strh	r2, [r3, #40]	; 0x28
        dev->calib_param.dig_p5 = (int16_t) (BMP2_MSBLSB_TO_U16(temp[BMP2_DIG_P5_MSB_POS], temp[BMP2_DIG_P5_LSB_POS]));
 8001536:	7efb      	ldrb	r3, [r7, #27]
 8001538:	021b      	lsls	r3, r3, #8
 800153a:	b21a      	sxth	r2, r3
 800153c:	7ebb      	ldrb	r3, [r7, #26]
 800153e:	b21b      	sxth	r3, r3
 8001540:	4313      	orrs	r3, r2
 8001542:	b21a      	sxth	r2, r3
 8001544:	687b      	ldr	r3, [r7, #4]
 8001546:	855a      	strh	r2, [r3, #42]	; 0x2a
        dev->calib_param.dig_p6 = (int16_t) (BMP2_MSBLSB_TO_U16(temp[BMP2_DIG_P6_MSB_POS], temp[BMP2_DIG_P6_LSB_POS]));
 8001548:	7f7b      	ldrb	r3, [r7, #29]
 800154a:	021b      	lsls	r3, r3, #8
 800154c:	b21a      	sxth	r2, r3
 800154e:	7f3b      	ldrb	r3, [r7, #28]
 8001550:	b21b      	sxth	r3, r3
 8001552:	4313      	orrs	r3, r2
 8001554:	b21a      	sxth	r2, r3
 8001556:	687b      	ldr	r3, [r7, #4]
 8001558:	859a      	strh	r2, [r3, #44]	; 0x2c
        dev->calib_param.dig_p7 = (int16_t) (BMP2_MSBLSB_TO_U16(temp[BMP2_DIG_P7_MSB_POS], temp[BMP2_DIG_P7_LSB_POS]));
 800155a:	7ffb      	ldrb	r3, [r7, #31]
 800155c:	021b      	lsls	r3, r3, #8
 800155e:	b21a      	sxth	r2, r3
 8001560:	7fbb      	ldrb	r3, [r7, #30]
 8001562:	b21b      	sxth	r3, r3
 8001564:	4313      	orrs	r3, r2
 8001566:	b21a      	sxth	r2, r3
 8001568:	687b      	ldr	r3, [r7, #4]
 800156a:	85da      	strh	r2, [r3, #46]	; 0x2e
        dev->calib_param.dig_p8 = (int16_t) (BMP2_MSBLSB_TO_U16(temp[BMP2_DIG_P8_MSB_POS], temp[BMP2_DIG_P8_LSB_POS]));
 800156c:	f897 3021 	ldrb.w	r3, [r7, #33]	; 0x21
 8001570:	021b      	lsls	r3, r3, #8
 8001572:	b21a      	sxth	r2, r3
 8001574:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001578:	b21b      	sxth	r3, r3
 800157a:	4313      	orrs	r3, r2
 800157c:	b21a      	sxth	r2, r3
 800157e:	687b      	ldr	r3, [r7, #4]
 8001580:	861a      	strh	r2, [r3, #48]	; 0x30
        dev->calib_param.dig_p9 = (int16_t) (BMP2_MSBLSB_TO_U16(temp[BMP2_DIG_P9_MSB_POS], temp[BMP2_DIG_P9_LSB_POS]));
 8001582:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8001586:	021b      	lsls	r3, r3, #8
 8001588:	b21a      	sxth	r2, r3
 800158a:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 800158e:	b21b      	sxth	r3, r3
 8001590:	4313      	orrs	r3, r2
 8001592:	b21a      	sxth	r2, r3
 8001594:	687b      	ldr	r3, [r7, #4]
 8001596:	865a      	strh	r2, [r3, #50]	; 0x32
        dev->calib_param.dig_p10 = (int8_t) ((uint8_t)(temp[BMP2_DIG_P10_POS]));
 8001598:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800159c:	b25a      	sxtb	r2, r3
 800159e:	687b      	ldr	r3, [r7, #4]
 80015a0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }

    return rslt;
 80015a4:	f997 3027 	ldrsb.w	r3, [r7, #39]	; 0x27
}
 80015a8:	4618      	mov	r0, r3
 80015aa:	3728      	adds	r7, #40	; 0x28
 80015ac:	46bd      	mov	sp, r7
 80015ae:	bd80      	pop	{r7, pc}

080015b0 <conf_sensor>:

/*!
 * @brief This internal API to reset the sensor, restore/set conf, restore/set mode
 */
static int8_t conf_sensor(uint8_t mode, const struct bmp2_config *conf, struct bmp2_dev *dev)
{
 80015b0:	b580      	push	{r7, lr}
 80015b2:	b086      	sub	sp, #24
 80015b4:	af00      	add	r7, sp, #0
 80015b6:	4603      	mov	r3, r0
 80015b8:	60b9      	str	r1, [r7, #8]
 80015ba:	607a      	str	r2, [r7, #4]
 80015bc:	73fb      	strb	r3, [r7, #15]
    int8_t rslt;
    uint8_t temp[2] = { 0, 0 };
 80015be:	2300      	movs	r3, #0
 80015c0:	82bb      	strh	r3, [r7, #20]
    uint8_t reg_addr[2] = { BMP2_REG_CTRL_MEAS, BMP2_REG_CONFIG };
 80015c2:	f24f 53f4 	movw	r3, #62964	; 0xf5f4
 80015c6:	823b      	strh	r3, [r7, #16]

    if (conf != NULL)
 80015c8:	68bb      	ldr	r3, [r7, #8]
 80015ca:	2b00      	cmp	r3, #0
 80015cc:	d074      	beq.n	80016b8 <conf_sensor+0x108>
    {
        rslt = bmp2_get_regs(BMP2_REG_CTRL_MEAS, temp, 2, dev);
 80015ce:	f107 0114 	add.w	r1, r7, #20
 80015d2:	687b      	ldr	r3, [r7, #4]
 80015d4:	2202      	movs	r2, #2
 80015d6:	20f4      	movs	r0, #244	; 0xf4
 80015d8:	f7ff fce1 	bl	8000f9e <bmp2_get_regs>
 80015dc:	4603      	mov	r3, r0
 80015de:	75fb      	strb	r3, [r7, #23]

        if (rslt == BMP2_OK)
 80015e0:	f997 3017 	ldrsb.w	r3, [r7, #23]
 80015e4:	2b00      	cmp	r3, #0
 80015e6:	d169      	bne.n	80016bc <conf_sensor+0x10c>
        {
            /* Here the intention is to put the device to sleep
             * within the shortest period of time
             */
            rslt = bmp2_soft_reset(dev);
 80015e8:	6878      	ldr	r0, [r7, #4]
 80015ea:	f7ff fd82 	bl	80010f2 <bmp2_soft_reset>
 80015ee:	4603      	mov	r3, r0
 80015f0:	75fb      	strb	r3, [r7, #23]

            if (rslt == BMP2_OK)
 80015f2:	f997 3017 	ldrsb.w	r3, [r7, #23]
 80015f6:	2b00      	cmp	r3, #0
 80015f8:	d160      	bne.n	80016bc <conf_sensor+0x10c>
            {
                set_os_mode(temp, conf);
 80015fa:	f107 0314 	add.w	r3, r7, #20
 80015fe:	68b9      	ldr	r1, [r7, #8]
 8001600:	4618      	mov	r0, r3
 8001602:	f000 f861 	bl	80016c8 <set_os_mode>
                temp[1] = BMP2_SET_BITS(temp[1], BMP2_STANDBY_DURN, conf->odr);
 8001606:	7d7b      	ldrb	r3, [r7, #21]
 8001608:	b25b      	sxtb	r3, r3
 800160a:	f003 031f 	and.w	r3, r3, #31
 800160e:	b25a      	sxtb	r2, r3
 8001610:	68bb      	ldr	r3, [r7, #8]
 8001612:	789b      	ldrb	r3, [r3, #2]
 8001614:	015b      	lsls	r3, r3, #5
 8001616:	b25b      	sxtb	r3, r3
 8001618:	4313      	orrs	r3, r2
 800161a:	b25b      	sxtb	r3, r3
 800161c:	b2db      	uxtb	r3, r3
 800161e:	757b      	strb	r3, [r7, #21]
                temp[1] = BMP2_SET_BITS(temp[1], BMP2_FILTER, conf->filter);
 8001620:	7d7b      	ldrb	r3, [r7, #21]
 8001622:	b25b      	sxtb	r3, r3
 8001624:	f023 031c 	bic.w	r3, r3, #28
 8001628:	b25a      	sxtb	r2, r3
 800162a:	68bb      	ldr	r3, [r7, #8]
 800162c:	791b      	ldrb	r3, [r3, #4]
 800162e:	009b      	lsls	r3, r3, #2
 8001630:	b25b      	sxtb	r3, r3
 8001632:	f003 031c 	and.w	r3, r3, #28
 8001636:	b25b      	sxtb	r3, r3
 8001638:	4313      	orrs	r3, r2
 800163a:	b25b      	sxtb	r3, r3
 800163c:	b2db      	uxtb	r3, r3
 800163e:	757b      	strb	r3, [r7, #21]
                temp[1] = BMP2_SET_BITS_POS_0(temp[1], BMP2_SPI3_ENABLE, conf->spi3w_en);
 8001640:	7d7b      	ldrb	r3, [r7, #21]
 8001642:	b25b      	sxtb	r3, r3
 8001644:	f023 0301 	bic.w	r3, r3, #1
 8001648:	b25a      	sxtb	r2, r3
 800164a:	68bb      	ldr	r3, [r7, #8]
 800164c:	795b      	ldrb	r3, [r3, #5]
 800164e:	b25b      	sxtb	r3, r3
 8001650:	f003 0301 	and.w	r3, r3, #1
 8001654:	b25b      	sxtb	r3, r3
 8001656:	4313      	orrs	r3, r2
 8001658:	b25b      	sxtb	r3, r3
 800165a:	b2db      	uxtb	r3, r3
 800165c:	757b      	strb	r3, [r7, #21]

                rslt = bmp2_set_regs(reg_addr, temp, 2, dev);
 800165e:	f107 0114 	add.w	r1, r7, #20
 8001662:	f107 0010 	add.w	r0, r7, #16
 8001666:	687b      	ldr	r3, [r7, #4]
 8001668:	2202      	movs	r2, #2
 800166a:	f7ff fcd0 	bl	800100e <bmp2_set_regs>
 800166e:	4603      	mov	r3, r0
 8001670:	75fb      	strb	r3, [r7, #23]

                if ((rslt == BMP2_OK) && (mode != BMP2_POWERMODE_SLEEP))
 8001672:	f997 3017 	ldrsb.w	r3, [r7, #23]
 8001676:	2b00      	cmp	r3, #0
 8001678:	d120      	bne.n	80016bc <conf_sensor+0x10c>
 800167a:	7bfb      	ldrb	r3, [r7, #15]
 800167c:	2b00      	cmp	r3, #0
 800167e:	d01d      	beq.n	80016bc <conf_sensor+0x10c>
                {
                    dev->power_mode = mode;
 8001680:	687b      	ldr	r3, [r7, #4]
 8001682:	7bfa      	ldrb	r2, [r7, #15]
 8001684:	761a      	strb	r2, [r3, #24]

                    /* Write only the power mode register in a separate write */
                    temp[0] = BMP2_SET_BITS_POS_0(temp[0], BMP2_POWERMODE, mode);
 8001686:	7d3b      	ldrb	r3, [r7, #20]
 8001688:	b25b      	sxtb	r3, r3
 800168a:	f023 0303 	bic.w	r3, r3, #3
 800168e:	b25a      	sxtb	r2, r3
 8001690:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001694:	f003 0303 	and.w	r3, r3, #3
 8001698:	b25b      	sxtb	r3, r3
 800169a:	4313      	orrs	r3, r2
 800169c:	b25b      	sxtb	r3, r3
 800169e:	b2db      	uxtb	r3, r3
 80016a0:	753b      	strb	r3, [r7, #20]
                    rslt = bmp2_set_regs(reg_addr, temp, 1, dev);
 80016a2:	f107 0114 	add.w	r1, r7, #20
 80016a6:	f107 0010 	add.w	r0, r7, #16
 80016aa:	687b      	ldr	r3, [r7, #4]
 80016ac:	2201      	movs	r2, #1
 80016ae:	f7ff fcae 	bl	800100e <bmp2_set_regs>
 80016b2:	4603      	mov	r3, r0
 80016b4:	75fb      	strb	r3, [r7, #23]
 80016b6:	e001      	b.n	80016bc <conf_sensor+0x10c>
            }
        }
    }
    else
    {
        rslt = BMP2_E_NULL_PTR;
 80016b8:	23ff      	movs	r3, #255	; 0xff
 80016ba:	75fb      	strb	r3, [r7, #23]
    }

    return rslt;
 80016bc:	f997 3017 	ldrsb.w	r3, [r7, #23]
}
 80016c0:	4618      	mov	r0, r3
 80016c2:	3718      	adds	r7, #24
 80016c4:	46bd      	mov	sp, r7
 80016c6:	bd80      	pop	{r7, pc}

080016c8 <set_os_mode>:
/*!
 *  @brief This internal API is used to set the over-sampling rate of temperature and pressure
 *  based on the over-sampling mode.
 */
static void set_os_mode(uint8_t *reg_data, const struct bmp2_config *conf)
{
 80016c8:	b480      	push	{r7}
 80016ca:	b083      	sub	sp, #12
 80016cc:	af00      	add	r7, sp, #0
 80016ce:	6078      	str	r0, [r7, #4]
 80016d0:	6039      	str	r1, [r7, #0]
    switch (conf->os_mode)
 80016d2:	683b      	ldr	r3, [r7, #0]
 80016d4:	78db      	ldrb	r3, [r3, #3]
 80016d6:	2b04      	cmp	r3, #4
 80016d8:	f200 808b 	bhi.w	80017f2 <set_os_mode+0x12a>
 80016dc:	a201      	add	r2, pc, #4	; (adr r2, 80016e4 <set_os_mode+0x1c>)
 80016de:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80016e2:	bf00      	nop
 80016e4:	080016f9 	.word	0x080016f9
 80016e8:	0800172b 	.word	0x0800172b
 80016ec:	0800175d 	.word	0x0800175d
 80016f0:	0800178f 	.word	0x0800178f
 80016f4:	080017c1 	.word	0x080017c1
    {
        case BMP2_OS_MODE_ULTRA_LOW_POWER:
            reg_data[0] = BMP2_SET_BITS(reg_data[0], BMP2_OS_TEMP, BMP2_OS_1X);
 80016f8:	687b      	ldr	r3, [r7, #4]
 80016fa:	781b      	ldrb	r3, [r3, #0]
 80016fc:	b25b      	sxtb	r3, r3
 80016fe:	f003 031f 	and.w	r3, r3, #31
 8001702:	b25b      	sxtb	r3, r3
 8001704:	f043 0320 	orr.w	r3, r3, #32
 8001708:	b25b      	sxtb	r3, r3
 800170a:	b2da      	uxtb	r2, r3
 800170c:	687b      	ldr	r3, [r7, #4]
 800170e:	701a      	strb	r2, [r3, #0]
            reg_data[0] = BMP2_SET_BITS(reg_data[0], BMP2_OS_PRES, BMP2_OS_1X);
 8001710:	687b      	ldr	r3, [r7, #4]
 8001712:	781b      	ldrb	r3, [r3, #0]
 8001714:	b25b      	sxtb	r3, r3
 8001716:	f023 031c 	bic.w	r3, r3, #28
 800171a:	b25b      	sxtb	r3, r3
 800171c:	f043 0304 	orr.w	r3, r3, #4
 8001720:	b25b      	sxtb	r3, r3
 8001722:	b2da      	uxtb	r2, r3
 8001724:	687b      	ldr	r3, [r7, #4]
 8001726:	701a      	strb	r2, [r3, #0]
            break;
 8001728:	e064      	b.n	80017f4 <set_os_mode+0x12c>
        case BMP2_OS_MODE_LOW_POWER:
            reg_data[0] = BMP2_SET_BITS(reg_data[0], BMP2_OS_TEMP, BMP2_OS_1X);
 800172a:	687b      	ldr	r3, [r7, #4]
 800172c:	781b      	ldrb	r3, [r3, #0]
 800172e:	b25b      	sxtb	r3, r3
 8001730:	f003 031f 	and.w	r3, r3, #31
 8001734:	b25b      	sxtb	r3, r3
 8001736:	f043 0320 	orr.w	r3, r3, #32
 800173a:	b25b      	sxtb	r3, r3
 800173c:	b2da      	uxtb	r2, r3
 800173e:	687b      	ldr	r3, [r7, #4]
 8001740:	701a      	strb	r2, [r3, #0]
            reg_data[0] = BMP2_SET_BITS(reg_data[0], BMP2_OS_PRES, BMP2_OS_2X);
 8001742:	687b      	ldr	r3, [r7, #4]
 8001744:	781b      	ldrb	r3, [r3, #0]
 8001746:	b25b      	sxtb	r3, r3
 8001748:	f023 031c 	bic.w	r3, r3, #28
 800174c:	b25b      	sxtb	r3, r3
 800174e:	f043 0308 	orr.w	r3, r3, #8
 8001752:	b25b      	sxtb	r3, r3
 8001754:	b2da      	uxtb	r2, r3
 8001756:	687b      	ldr	r3, [r7, #4]
 8001758:	701a      	strb	r2, [r3, #0]
            break;
 800175a:	e04b      	b.n	80017f4 <set_os_mode+0x12c>
        case BMP2_OS_MODE_STANDARD_RESOLUTION:
            reg_data[0] = BMP2_SET_BITS(reg_data[0], BMP2_OS_TEMP, BMP2_OS_1X);
 800175c:	687b      	ldr	r3, [r7, #4]
 800175e:	781b      	ldrb	r3, [r3, #0]
 8001760:	b25b      	sxtb	r3, r3
 8001762:	f003 031f 	and.w	r3, r3, #31
 8001766:	b25b      	sxtb	r3, r3
 8001768:	f043 0320 	orr.w	r3, r3, #32
 800176c:	b25b      	sxtb	r3, r3
 800176e:	b2da      	uxtb	r2, r3
 8001770:	687b      	ldr	r3, [r7, #4]
 8001772:	701a      	strb	r2, [r3, #0]
            reg_data[0] = BMP2_SET_BITS(reg_data[0], BMP2_OS_PRES, BMP2_OS_4X);
 8001774:	687b      	ldr	r3, [r7, #4]
 8001776:	781b      	ldrb	r3, [r3, #0]
 8001778:	b25b      	sxtb	r3, r3
 800177a:	f023 031c 	bic.w	r3, r3, #28
 800177e:	b25b      	sxtb	r3, r3
 8001780:	f043 030c 	orr.w	r3, r3, #12
 8001784:	b25b      	sxtb	r3, r3
 8001786:	b2da      	uxtb	r2, r3
 8001788:	687b      	ldr	r3, [r7, #4]
 800178a:	701a      	strb	r2, [r3, #0]
            break;
 800178c:	e032      	b.n	80017f4 <set_os_mode+0x12c>
        case BMP2_OS_MODE_HIGH_RESOLUTION:
            reg_data[0] = BMP2_SET_BITS(reg_data[0], BMP2_OS_TEMP, BMP2_OS_1X);
 800178e:	687b      	ldr	r3, [r7, #4]
 8001790:	781b      	ldrb	r3, [r3, #0]
 8001792:	b25b      	sxtb	r3, r3
 8001794:	f003 031f 	and.w	r3, r3, #31
 8001798:	b25b      	sxtb	r3, r3
 800179a:	f043 0320 	orr.w	r3, r3, #32
 800179e:	b25b      	sxtb	r3, r3
 80017a0:	b2da      	uxtb	r2, r3
 80017a2:	687b      	ldr	r3, [r7, #4]
 80017a4:	701a      	strb	r2, [r3, #0]
            reg_data[0] = BMP2_SET_BITS(reg_data[0], BMP2_OS_PRES, BMP2_OS_8X);
 80017a6:	687b      	ldr	r3, [r7, #4]
 80017a8:	781b      	ldrb	r3, [r3, #0]
 80017aa:	b25b      	sxtb	r3, r3
 80017ac:	f023 031c 	bic.w	r3, r3, #28
 80017b0:	b25b      	sxtb	r3, r3
 80017b2:	f043 0310 	orr.w	r3, r3, #16
 80017b6:	b25b      	sxtb	r3, r3
 80017b8:	b2da      	uxtb	r2, r3
 80017ba:	687b      	ldr	r3, [r7, #4]
 80017bc:	701a      	strb	r2, [r3, #0]
            break;
 80017be:	e019      	b.n	80017f4 <set_os_mode+0x12c>
        case BMP2_OS_MODE_ULTRA_HIGH_RESOLUTION:
            reg_data[0] = BMP2_SET_BITS(reg_data[0], BMP2_OS_TEMP, BMP2_OS_2X);
 80017c0:	687b      	ldr	r3, [r7, #4]
 80017c2:	781b      	ldrb	r3, [r3, #0]
 80017c4:	b25b      	sxtb	r3, r3
 80017c6:	f003 031f 	and.w	r3, r3, #31
 80017ca:	b25b      	sxtb	r3, r3
 80017cc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80017d0:	b25b      	sxtb	r3, r3
 80017d2:	b2da      	uxtb	r2, r3
 80017d4:	687b      	ldr	r3, [r7, #4]
 80017d6:	701a      	strb	r2, [r3, #0]
            reg_data[0] = BMP2_SET_BITS(reg_data[0], BMP2_OS_PRES, BMP2_OS_16X);
 80017d8:	687b      	ldr	r3, [r7, #4]
 80017da:	781b      	ldrb	r3, [r3, #0]
 80017dc:	b25b      	sxtb	r3, r3
 80017de:	f023 031c 	bic.w	r3, r3, #28
 80017e2:	b25b      	sxtb	r3, r3
 80017e4:	f043 0314 	orr.w	r3, r3, #20
 80017e8:	b25b      	sxtb	r3, r3
 80017ea:	b2da      	uxtb	r2, r3
 80017ec:	687b      	ldr	r3, [r7, #4]
 80017ee:	701a      	strb	r2, [r3, #0]
            break;
 80017f0:	e000      	b.n	80017f4 <set_os_mode+0x12c>
        default:
            break;
 80017f2:	bf00      	nop
    }
}
 80017f4:	bf00      	nop
 80017f6:	370c      	adds	r7, #12
 80017f8:	46bd      	mov	sp, r7
 80017fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017fe:	4770      	bx	lr

08001800 <parse_sensor_data>:
/*!
 *  @brief This internal API is used to parse the pressure and temperature
 *  data and store it in the bmp2_uncomp_data structure instance.
 */
static int8_t parse_sensor_data(const uint8_t *reg_data, struct bmp2_uncomp_data *uncomp_data)
{
 8001800:	b580      	push	{r7, lr}
 8001802:	b086      	sub	sp, #24
 8001804:	af00      	add	r7, sp, #0
 8001806:	6078      	str	r0, [r7, #4]
 8001808:	6039      	str	r1, [r7, #0]
    uint32_t data_xlsb;
    uint32_t data_lsb;
    uint32_t data_msb;

    /* Store the parsed register values for pressure data */
    data_msb = (uint32_t)reg_data[0] << 12;
 800180a:	687b      	ldr	r3, [r7, #4]
 800180c:	781b      	ldrb	r3, [r3, #0]
 800180e:	031b      	lsls	r3, r3, #12
 8001810:	617b      	str	r3, [r7, #20]
    data_lsb = (uint32_t)reg_data[1] << 4;
 8001812:	687b      	ldr	r3, [r7, #4]
 8001814:	3301      	adds	r3, #1
 8001816:	781b      	ldrb	r3, [r3, #0]
 8001818:	011b      	lsls	r3, r3, #4
 800181a:	613b      	str	r3, [r7, #16]
    data_xlsb = (uint32_t)reg_data[2] >> 4;
 800181c:	687b      	ldr	r3, [r7, #4]
 800181e:	3302      	adds	r3, #2
 8001820:	781b      	ldrb	r3, [r3, #0]
 8001822:	091b      	lsrs	r3, r3, #4
 8001824:	b2db      	uxtb	r3, r3
 8001826:	60fb      	str	r3, [r7, #12]
    uncomp_data->pressure = data_msb | data_lsb | data_xlsb;
 8001828:	697a      	ldr	r2, [r7, #20]
 800182a:	693b      	ldr	r3, [r7, #16]
 800182c:	431a      	orrs	r2, r3
 800182e:	68fb      	ldr	r3, [r7, #12]
 8001830:	431a      	orrs	r2, r3
 8001832:	683b      	ldr	r3, [r7, #0]
 8001834:	605a      	str	r2, [r3, #4]

    /* Store the parsed register values for temperature data */
    data_msb = (int32_t)reg_data[3] << 12;
 8001836:	687b      	ldr	r3, [r7, #4]
 8001838:	3303      	adds	r3, #3
 800183a:	781b      	ldrb	r3, [r3, #0]
 800183c:	031b      	lsls	r3, r3, #12
 800183e:	617b      	str	r3, [r7, #20]
    data_lsb = (int32_t)reg_data[4] << 4;
 8001840:	687b      	ldr	r3, [r7, #4]
 8001842:	3304      	adds	r3, #4
 8001844:	781b      	ldrb	r3, [r3, #0]
 8001846:	011b      	lsls	r3, r3, #4
 8001848:	613b      	str	r3, [r7, #16]
    data_xlsb = (int32_t)reg_data[5] >> 4;
 800184a:	687b      	ldr	r3, [r7, #4]
 800184c:	3305      	adds	r3, #5
 800184e:	781b      	ldrb	r3, [r3, #0]
 8001850:	091b      	lsrs	r3, r3, #4
 8001852:	b2db      	uxtb	r3, r3
 8001854:	60fb      	str	r3, [r7, #12]
    uncomp_data->temperature = (int32_t)(data_msb | data_lsb | data_xlsb);
 8001856:	697a      	ldr	r2, [r7, #20]
 8001858:	693b      	ldr	r3, [r7, #16]
 800185a:	431a      	orrs	r2, r3
 800185c:	68fb      	ldr	r3, [r7, #12]
 800185e:	4313      	orrs	r3, r2
 8001860:	461a      	mov	r2, r3
 8001862:	683b      	ldr	r3, [r7, #0]
 8001864:	601a      	str	r2, [r3, #0]

    rslt = st_check_boundaries((int32_t)uncomp_data->temperature, (int32_t)uncomp_data->pressure);
 8001866:	683b      	ldr	r3, [r7, #0]
 8001868:	681a      	ldr	r2, [r3, #0]
 800186a:	683b      	ldr	r3, [r7, #0]
 800186c:	685b      	ldr	r3, [r3, #4]
 800186e:	4619      	mov	r1, r3
 8001870:	4610      	mov	r0, r2
 8001872:	f000 fae5 	bl	8001e40 <st_check_boundaries>
 8001876:	4603      	mov	r3, r0
 8001878:	72fb      	strb	r3, [r7, #11]

    return rslt;
 800187a:	f997 300b 	ldrsb.w	r3, [r7, #11]
}
 800187e:	4618      	mov	r0, r3
 8001880:	3718      	adds	r7, #24
 8001882:	46bd      	mov	sp, r7
 8001884:	bd80      	pop	{r7, pc}
	...

08001888 <compensate_temperature>:
 * uncompensated temperature. This API uses double floating precision.
 */
static int8_t compensate_temperature(double *comp_temperature,
                                     const struct bmp2_uncomp_data *uncomp_data,
                                     struct bmp2_dev *dev)
{
 8001888:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 800188c:	b08c      	sub	sp, #48	; 0x30
 800188e:	af00      	add	r7, sp, #0
 8001890:	60f8      	str	r0, [r7, #12]
 8001892:	60b9      	str	r1, [r7, #8]
 8001894:	607a      	str	r2, [r7, #4]
    int8_t rslt = BMP2_OK;
 8001896:	2300      	movs	r3, #0
 8001898:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
    double var1, var2;
    double temperature;

    var1 = (((double) uncomp_data->temperature) / 16384.0 - ((double) dev->calib_param.dig_t1) / 1024.0) *
 800189c:	68bb      	ldr	r3, [r7, #8]
 800189e:	681b      	ldr	r3, [r3, #0]
 80018a0:	4618      	mov	r0, r3
 80018a2:	f7fe fe57 	bl	8000554 <__aeabi_i2d>
 80018a6:	f04f 0200 	mov.w	r2, #0
 80018aa:	4b6c      	ldr	r3, [pc, #432]	; (8001a5c <compensate_temperature+0x1d4>)
 80018ac:	f7fe ffe6 	bl	800087c <__aeabi_ddiv>
 80018b0:	4602      	mov	r2, r0
 80018b2:	460b      	mov	r3, r1
 80018b4:	4614      	mov	r4, r2
 80018b6:	461d      	mov	r5, r3
 80018b8:	687b      	ldr	r3, [r7, #4]
 80018ba:	8b9b      	ldrh	r3, [r3, #28]
 80018bc:	4618      	mov	r0, r3
 80018be:	f7fe fe39 	bl	8000534 <__aeabi_ui2d>
 80018c2:	f04f 0200 	mov.w	r2, #0
 80018c6:	4b66      	ldr	r3, [pc, #408]	; (8001a60 <compensate_temperature+0x1d8>)
 80018c8:	f7fe ffd8 	bl	800087c <__aeabi_ddiv>
 80018cc:	4602      	mov	r2, r0
 80018ce:	460b      	mov	r3, r1
 80018d0:	4620      	mov	r0, r4
 80018d2:	4629      	mov	r1, r5
 80018d4:	f7fe fcf0 	bl	80002b8 <__aeabi_dsub>
 80018d8:	4602      	mov	r2, r0
 80018da:	460b      	mov	r3, r1
 80018dc:	4614      	mov	r4, r2
 80018de:	461d      	mov	r5, r3
           ((double) dev->calib_param.dig_t2);
 80018e0:	687b      	ldr	r3, [r7, #4]
 80018e2:	f9b3 301e 	ldrsh.w	r3, [r3, #30]
 80018e6:	4618      	mov	r0, r3
 80018e8:	f7fe fe34 	bl	8000554 <__aeabi_i2d>
 80018ec:	4602      	mov	r2, r0
 80018ee:	460b      	mov	r3, r1
    var1 = (((double) uncomp_data->temperature) / 16384.0 - ((double) dev->calib_param.dig_t1) / 1024.0) *
 80018f0:	4620      	mov	r0, r4
 80018f2:	4629      	mov	r1, r5
 80018f4:	f7fe fe98 	bl	8000628 <__aeabi_dmul>
 80018f8:	4602      	mov	r2, r0
 80018fa:	460b      	mov	r3, r1
 80018fc:	e9c7 2306 	strd	r2, r3, [r7, #24]
    var2 =
        ((((double) uncomp_data->temperature) / 131072.0 - ((double) dev->calib_param.dig_t1) / 8192.0) *
 8001900:	68bb      	ldr	r3, [r7, #8]
 8001902:	681b      	ldr	r3, [r3, #0]
 8001904:	4618      	mov	r0, r3
 8001906:	f7fe fe25 	bl	8000554 <__aeabi_i2d>
 800190a:	f04f 0200 	mov.w	r2, #0
 800190e:	f04f 4382 	mov.w	r3, #1090519040	; 0x41000000
 8001912:	f7fe ffb3 	bl	800087c <__aeabi_ddiv>
 8001916:	4602      	mov	r2, r0
 8001918:	460b      	mov	r3, r1
 800191a:	4614      	mov	r4, r2
 800191c:	461d      	mov	r5, r3
 800191e:	687b      	ldr	r3, [r7, #4]
 8001920:	8b9b      	ldrh	r3, [r3, #28]
 8001922:	4618      	mov	r0, r3
 8001924:	f7fe fe06 	bl	8000534 <__aeabi_ui2d>
 8001928:	f04f 0200 	mov.w	r2, #0
 800192c:	4b4d      	ldr	r3, [pc, #308]	; (8001a64 <compensate_temperature+0x1dc>)
 800192e:	f7fe ffa5 	bl	800087c <__aeabi_ddiv>
 8001932:	4602      	mov	r2, r0
 8001934:	460b      	mov	r3, r1
 8001936:	4620      	mov	r0, r4
 8001938:	4629      	mov	r1, r5
 800193a:	f7fe fcbd 	bl	80002b8 <__aeabi_dsub>
 800193e:	4602      	mov	r2, r0
 8001940:	460b      	mov	r3, r1
 8001942:	4614      	mov	r4, r2
 8001944:	461d      	mov	r5, r3
         (((double) uncomp_data->temperature) / 131072.0 - ((double) dev->calib_param.dig_t1) / 8192.0)) *
 8001946:	68bb      	ldr	r3, [r7, #8]
 8001948:	681b      	ldr	r3, [r3, #0]
 800194a:	4618      	mov	r0, r3
 800194c:	f7fe fe02 	bl	8000554 <__aeabi_i2d>
 8001950:	f04f 0200 	mov.w	r2, #0
 8001954:	f04f 4382 	mov.w	r3, #1090519040	; 0x41000000
 8001958:	f7fe ff90 	bl	800087c <__aeabi_ddiv>
 800195c:	4602      	mov	r2, r0
 800195e:	460b      	mov	r3, r1
 8001960:	4690      	mov	r8, r2
 8001962:	4699      	mov	r9, r3
 8001964:	687b      	ldr	r3, [r7, #4]
 8001966:	8b9b      	ldrh	r3, [r3, #28]
 8001968:	4618      	mov	r0, r3
 800196a:	f7fe fde3 	bl	8000534 <__aeabi_ui2d>
 800196e:	f04f 0200 	mov.w	r2, #0
 8001972:	4b3c      	ldr	r3, [pc, #240]	; (8001a64 <compensate_temperature+0x1dc>)
 8001974:	f7fe ff82 	bl	800087c <__aeabi_ddiv>
 8001978:	4602      	mov	r2, r0
 800197a:	460b      	mov	r3, r1
 800197c:	4640      	mov	r0, r8
 800197e:	4649      	mov	r1, r9
 8001980:	f7fe fc9a 	bl	80002b8 <__aeabi_dsub>
 8001984:	4602      	mov	r2, r0
 8001986:	460b      	mov	r3, r1
        ((((double) uncomp_data->temperature) / 131072.0 - ((double) dev->calib_param.dig_t1) / 8192.0) *
 8001988:	4620      	mov	r0, r4
 800198a:	4629      	mov	r1, r5
 800198c:	f7fe fe4c 	bl	8000628 <__aeabi_dmul>
 8001990:	4602      	mov	r2, r0
 8001992:	460b      	mov	r3, r1
 8001994:	4614      	mov	r4, r2
 8001996:	461d      	mov	r5, r3
        ((double) dev->calib_param.dig_t3);
 8001998:	687b      	ldr	r3, [r7, #4]
 800199a:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
 800199e:	4618      	mov	r0, r3
 80019a0:	f7fe fdd8 	bl	8000554 <__aeabi_i2d>
 80019a4:	4602      	mov	r2, r0
 80019a6:	460b      	mov	r3, r1
    var2 =
 80019a8:	4620      	mov	r0, r4
 80019aa:	4629      	mov	r1, r5
 80019ac:	f7fe fe3c 	bl	8000628 <__aeabi_dmul>
 80019b0:	4602      	mov	r2, r0
 80019b2:	460b      	mov	r3, r1
 80019b4:	e9c7 2304 	strd	r2, r3, [r7, #16]

    dev->calib_param.t_fine = (int32_t) (var1 + var2);
 80019b8:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80019bc:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 80019c0:	f7fe fc7c 	bl	80002bc <__adddf3>
 80019c4:	4602      	mov	r2, r0
 80019c6:	460b      	mov	r3, r1
 80019c8:	4610      	mov	r0, r2
 80019ca:	4619      	mov	r1, r3
 80019cc:	f7ff f8c6 	bl	8000b5c <__aeabi_d2iz>
 80019d0:	4602      	mov	r2, r0
 80019d2:	687b      	ldr	r3, [r7, #4]
 80019d4:	639a      	str	r2, [r3, #56]	; 0x38
    temperature = (var1 + var2) / 5120.0;
 80019d6:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80019da:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 80019de:	f7fe fc6d 	bl	80002bc <__adddf3>
 80019e2:	4602      	mov	r2, r0
 80019e4:	460b      	mov	r3, r1
 80019e6:	4610      	mov	r0, r2
 80019e8:	4619      	mov	r1, r3
 80019ea:	f04f 0200 	mov.w	r2, #0
 80019ee:	4b1e      	ldr	r3, [pc, #120]	; (8001a68 <compensate_temperature+0x1e0>)
 80019f0:	f7fe ff44 	bl	800087c <__aeabi_ddiv>
 80019f4:	4602      	mov	r2, r0
 80019f6:	460b      	mov	r3, r1
 80019f8:	e9c7 2308 	strd	r2, r3, [r7, #32]

    if (temperature < BMP2_MIN_TEMP_DOUBLE)
 80019fc:	f04f 0200 	mov.w	r2, #0
 8001a00:	4b1a      	ldr	r3, [pc, #104]	; (8001a6c <compensate_temperature+0x1e4>)
 8001a02:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8001a06:	f7ff f881 	bl	8000b0c <__aeabi_dcmplt>
 8001a0a:	4603      	mov	r3, r0
 8001a0c:	2b00      	cmp	r3, #0
 8001a0e:	d007      	beq.n	8001a20 <compensate_temperature+0x198>
    {
        temperature = BMP2_MIN_TEMP_DOUBLE;
 8001a10:	f04f 0200 	mov.w	r2, #0
 8001a14:	4b15      	ldr	r3, [pc, #84]	; (8001a6c <compensate_temperature+0x1e4>)
 8001a16:	e9c7 2308 	strd	r2, r3, [r7, #32]
        rslt = BMP2_W_MIN_TEMP;
 8001a1a:	2301      	movs	r3, #1
 8001a1c:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
    }

    if (temperature > BMP2_MAX_TEMP_DOUBLE)
 8001a20:	f04f 0200 	mov.w	r2, #0
 8001a24:	4b12      	ldr	r3, [pc, #72]	; (8001a70 <compensate_temperature+0x1e8>)
 8001a26:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8001a2a:	f7ff f88d 	bl	8000b48 <__aeabi_dcmpgt>
 8001a2e:	4603      	mov	r3, r0
 8001a30:	2b00      	cmp	r3, #0
 8001a32:	d007      	beq.n	8001a44 <compensate_temperature+0x1bc>
    {
        temperature = BMP2_MAX_TEMP_DOUBLE;
 8001a34:	f04f 0200 	mov.w	r2, #0
 8001a38:	4b0d      	ldr	r3, [pc, #52]	; (8001a70 <compensate_temperature+0x1e8>)
 8001a3a:	e9c7 2308 	strd	r2, r3, [r7, #32]
        rslt = BMP2_W_MAX_TEMP;
 8001a3e:	2302      	movs	r3, #2
 8001a40:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
    }

    (*comp_temperature) = temperature;
 8001a44:	68f9      	ldr	r1, [r7, #12]
 8001a46:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8001a4a:	e9c1 2300 	strd	r2, r3, [r1]

    return rslt;
 8001a4e:	f997 302f 	ldrsb.w	r3, [r7, #47]	; 0x2f
}
 8001a52:	4618      	mov	r0, r3
 8001a54:	3730      	adds	r7, #48	; 0x30
 8001a56:	46bd      	mov	sp, r7
 8001a58:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8001a5c:	40d00000 	.word	0x40d00000
 8001a60:	40900000 	.word	0x40900000
 8001a64:	40c00000 	.word	0x40c00000
 8001a68:	40b40000 	.word	0x40b40000
 8001a6c:	c0440000 	.word	0xc0440000
 8001a70:	40554000 	.word	0x40554000
 8001a74:	00000000 	.word	0x00000000

08001a78 <compensate_pressure>:
 * uncompensated pressure. This API uses double floating precision.
 */
static int8_t compensate_pressure(double *comp_pressure,
                                  const struct bmp2_uncomp_data *uncomp_data,
                                  const struct bmp2_dev *dev)
{
 8001a78:	b5b0      	push	{r4, r5, r7, lr}
 8001a7a:	b08c      	sub	sp, #48	; 0x30
 8001a7c:	af00      	add	r7, sp, #0
 8001a7e:	60f8      	str	r0, [r7, #12]
 8001a80:	60b9      	str	r1, [r7, #8]
 8001a82:	607a      	str	r2, [r7, #4]
    int8_t rslt = BMP2_OK;
 8001a84:	2300      	movs	r3, #0
 8001a86:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
    double var1, var2;
    double pressure = 0.0;
 8001a8a:	f04f 0200 	mov.w	r2, #0
 8001a8e:	f04f 0300 	mov.w	r3, #0
 8001a92:	e9c7 2308 	strd	r2, r3, [r7, #32]

    var1 = ((double) dev->calib_param.t_fine / 2.0) - 64000.0;
 8001a96:	687b      	ldr	r3, [r7, #4]
 8001a98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001a9a:	4618      	mov	r0, r3
 8001a9c:	f7fe fd5a 	bl	8000554 <__aeabi_i2d>
 8001aa0:	f04f 0200 	mov.w	r2, #0
 8001aa4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001aa8:	f7fe fee8 	bl	800087c <__aeabi_ddiv>
 8001aac:	4602      	mov	r2, r0
 8001aae:	460b      	mov	r3, r1
 8001ab0:	4610      	mov	r0, r2
 8001ab2:	4619      	mov	r1, r3
 8001ab4:	f04f 0200 	mov.w	r2, #0
 8001ab8:	4bcb      	ldr	r3, [pc, #812]	; (8001de8 <compensate_pressure+0x370>)
 8001aba:	f7fe fbfd 	bl	80002b8 <__aeabi_dsub>
 8001abe:	4602      	mov	r2, r0
 8001ac0:	460b      	mov	r3, r1
 8001ac2:	e9c7 2306 	strd	r2, r3, [r7, #24]
    var2 = var1 * var1 * ((double) dev->calib_param.dig_p6) / 32768.0;
 8001ac6:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8001aca:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8001ace:	f7fe fdab 	bl	8000628 <__aeabi_dmul>
 8001ad2:	4602      	mov	r2, r0
 8001ad4:	460b      	mov	r3, r1
 8001ad6:	4614      	mov	r4, r2
 8001ad8:	461d      	mov	r5, r3
 8001ada:	687b      	ldr	r3, [r7, #4]
 8001adc:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8001ae0:	4618      	mov	r0, r3
 8001ae2:	f7fe fd37 	bl	8000554 <__aeabi_i2d>
 8001ae6:	4602      	mov	r2, r0
 8001ae8:	460b      	mov	r3, r1
 8001aea:	4620      	mov	r0, r4
 8001aec:	4629      	mov	r1, r5
 8001aee:	f7fe fd9b 	bl	8000628 <__aeabi_dmul>
 8001af2:	4602      	mov	r2, r0
 8001af4:	460b      	mov	r3, r1
 8001af6:	4610      	mov	r0, r2
 8001af8:	4619      	mov	r1, r3
 8001afa:	f04f 0200 	mov.w	r2, #0
 8001afe:	4bbb      	ldr	r3, [pc, #748]	; (8001dec <compensate_pressure+0x374>)
 8001b00:	f7fe febc 	bl	800087c <__aeabi_ddiv>
 8001b04:	4602      	mov	r2, r0
 8001b06:	460b      	mov	r3, r1
 8001b08:	e9c7 2304 	strd	r2, r3, [r7, #16]
    var2 = var2 + var1 * ((double) dev->calib_param.dig_p5) * 2.0;
 8001b0c:	687b      	ldr	r3, [r7, #4]
 8001b0e:	f9b3 302a 	ldrsh.w	r3, [r3, #42]	; 0x2a
 8001b12:	4618      	mov	r0, r3
 8001b14:	f7fe fd1e 	bl	8000554 <__aeabi_i2d>
 8001b18:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8001b1c:	f7fe fd84 	bl	8000628 <__aeabi_dmul>
 8001b20:	4602      	mov	r2, r0
 8001b22:	460b      	mov	r3, r1
 8001b24:	4610      	mov	r0, r2
 8001b26:	4619      	mov	r1, r3
 8001b28:	4602      	mov	r2, r0
 8001b2a:	460b      	mov	r3, r1
 8001b2c:	f7fe fbc6 	bl	80002bc <__adddf3>
 8001b30:	4602      	mov	r2, r0
 8001b32:	460b      	mov	r3, r1
 8001b34:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001b38:	f7fe fbc0 	bl	80002bc <__adddf3>
 8001b3c:	4602      	mov	r2, r0
 8001b3e:	460b      	mov	r3, r1
 8001b40:	e9c7 2304 	strd	r2, r3, [r7, #16]
    var2 = (var2 / 4.0) + (((double) dev->calib_param.dig_p4) * 65536.0);
 8001b44:	f04f 0200 	mov.w	r2, #0
 8001b48:	4ba9      	ldr	r3, [pc, #676]	; (8001df0 <compensate_pressure+0x378>)
 8001b4a:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001b4e:	f7fe fe95 	bl	800087c <__aeabi_ddiv>
 8001b52:	4602      	mov	r2, r0
 8001b54:	460b      	mov	r3, r1
 8001b56:	4614      	mov	r4, r2
 8001b58:	461d      	mov	r5, r3
 8001b5a:	687b      	ldr	r3, [r7, #4]
 8001b5c:	f9b3 3028 	ldrsh.w	r3, [r3, #40]	; 0x28
 8001b60:	4618      	mov	r0, r3
 8001b62:	f7fe fcf7 	bl	8000554 <__aeabi_i2d>
 8001b66:	f04f 0200 	mov.w	r2, #0
 8001b6a:	4ba2      	ldr	r3, [pc, #648]	; (8001df4 <compensate_pressure+0x37c>)
 8001b6c:	f7fe fd5c 	bl	8000628 <__aeabi_dmul>
 8001b70:	4602      	mov	r2, r0
 8001b72:	460b      	mov	r3, r1
 8001b74:	4620      	mov	r0, r4
 8001b76:	4629      	mov	r1, r5
 8001b78:	f7fe fba0 	bl	80002bc <__adddf3>
 8001b7c:	4602      	mov	r2, r0
 8001b7e:	460b      	mov	r3, r1
 8001b80:	e9c7 2304 	strd	r2, r3, [r7, #16]
    var1 = (((double)dev->calib_param.dig_p3) * var1 * var1 / 524288.0 + ((double)dev->calib_param.dig_p2) * var1) /
 8001b84:	687b      	ldr	r3, [r7, #4]
 8001b86:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8001b8a:	4618      	mov	r0, r3
 8001b8c:	f7fe fce2 	bl	8000554 <__aeabi_i2d>
 8001b90:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8001b94:	f7fe fd48 	bl	8000628 <__aeabi_dmul>
 8001b98:	4602      	mov	r2, r0
 8001b9a:	460b      	mov	r3, r1
 8001b9c:	4610      	mov	r0, r2
 8001b9e:	4619      	mov	r1, r3
 8001ba0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8001ba4:	f7fe fd40 	bl	8000628 <__aeabi_dmul>
 8001ba8:	4602      	mov	r2, r0
 8001baa:	460b      	mov	r3, r1
 8001bac:	4610      	mov	r0, r2
 8001bae:	4619      	mov	r1, r3
 8001bb0:	f04f 0200 	mov.w	r2, #0
 8001bb4:	4b90      	ldr	r3, [pc, #576]	; (8001df8 <compensate_pressure+0x380>)
 8001bb6:	f7fe fe61 	bl	800087c <__aeabi_ddiv>
 8001bba:	4602      	mov	r2, r0
 8001bbc:	460b      	mov	r3, r1
 8001bbe:	4614      	mov	r4, r2
 8001bc0:	461d      	mov	r5, r3
 8001bc2:	687b      	ldr	r3, [r7, #4]
 8001bc4:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8001bc8:	4618      	mov	r0, r3
 8001bca:	f7fe fcc3 	bl	8000554 <__aeabi_i2d>
 8001bce:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8001bd2:	f7fe fd29 	bl	8000628 <__aeabi_dmul>
 8001bd6:	4602      	mov	r2, r0
 8001bd8:	460b      	mov	r3, r1
 8001bda:	4620      	mov	r0, r4
 8001bdc:	4629      	mov	r1, r5
 8001bde:	f7fe fb6d 	bl	80002bc <__adddf3>
 8001be2:	4602      	mov	r2, r0
 8001be4:	460b      	mov	r3, r1
 8001be6:	4610      	mov	r0, r2
 8001be8:	4619      	mov	r1, r3
 8001bea:	f04f 0200 	mov.w	r2, #0
 8001bee:	4b82      	ldr	r3, [pc, #520]	; (8001df8 <compensate_pressure+0x380>)
 8001bf0:	f7fe fe44 	bl	800087c <__aeabi_ddiv>
 8001bf4:	4602      	mov	r2, r0
 8001bf6:	460b      	mov	r3, r1
 8001bf8:	e9c7 2306 	strd	r2, r3, [r7, #24]
           524288.0;
    var1 = (1.0 + var1 / 32768.0) * ((double) dev->calib_param.dig_p1);
 8001bfc:	f04f 0200 	mov.w	r2, #0
 8001c00:	4b7a      	ldr	r3, [pc, #488]	; (8001dec <compensate_pressure+0x374>)
 8001c02:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8001c06:	f7fe fe39 	bl	800087c <__aeabi_ddiv>
 8001c0a:	4602      	mov	r2, r0
 8001c0c:	460b      	mov	r3, r1
 8001c0e:	4610      	mov	r0, r2
 8001c10:	4619      	mov	r1, r3
 8001c12:	f04f 0200 	mov.w	r2, #0
 8001c16:	4b79      	ldr	r3, [pc, #484]	; (8001dfc <compensate_pressure+0x384>)
 8001c18:	f7fe fb50 	bl	80002bc <__adddf3>
 8001c1c:	4602      	mov	r2, r0
 8001c1e:	460b      	mov	r3, r1
 8001c20:	4614      	mov	r4, r2
 8001c22:	461d      	mov	r5, r3
 8001c24:	687b      	ldr	r3, [r7, #4]
 8001c26:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8001c28:	4618      	mov	r0, r3
 8001c2a:	f7fe fc83 	bl	8000534 <__aeabi_ui2d>
 8001c2e:	4602      	mov	r2, r0
 8001c30:	460b      	mov	r3, r1
 8001c32:	4620      	mov	r0, r4
 8001c34:	4629      	mov	r1, r5
 8001c36:	f7fe fcf7 	bl	8000628 <__aeabi_dmul>
 8001c3a:	4602      	mov	r2, r0
 8001c3c:	460b      	mov	r3, r1
 8001c3e:	e9c7 2306 	strd	r2, r3, [r7, #24]

    if (var1 < 0 || var1 > 0)
 8001c42:	f04f 0200 	mov.w	r2, #0
 8001c46:	f04f 0300 	mov.w	r3, #0
 8001c4a:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8001c4e:	f7fe ff5d 	bl	8000b0c <__aeabi_dcmplt>
 8001c52:	4603      	mov	r3, r0
 8001c54:	2b00      	cmp	r3, #0
 8001c56:	d10b      	bne.n	8001c70 <compensate_pressure+0x1f8>
 8001c58:	f04f 0200 	mov.w	r2, #0
 8001c5c:	f04f 0300 	mov.w	r3, #0
 8001c60:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8001c64:	f7fe ff70 	bl	8000b48 <__aeabi_dcmpgt>
 8001c68:	4603      	mov	r3, r0
 8001c6a:	2b00      	cmp	r3, #0
 8001c6c:	f000 80de 	beq.w	8001e2c <compensate_pressure+0x3b4>
    {
        pressure = 1048576.0 - (double)uncomp_data->pressure;
 8001c70:	68bb      	ldr	r3, [r7, #8]
 8001c72:	685b      	ldr	r3, [r3, #4]
 8001c74:	4618      	mov	r0, r3
 8001c76:	f7fe fc5d 	bl	8000534 <__aeabi_ui2d>
 8001c7a:	4602      	mov	r2, r0
 8001c7c:	460b      	mov	r3, r1
 8001c7e:	f04f 0000 	mov.w	r0, #0
 8001c82:	495f      	ldr	r1, [pc, #380]	; (8001e00 <compensate_pressure+0x388>)
 8001c84:	f7fe fb18 	bl	80002b8 <__aeabi_dsub>
 8001c88:	4602      	mov	r2, r0
 8001c8a:	460b      	mov	r3, r1
 8001c8c:	e9c7 2308 	strd	r2, r3, [r7, #32]
        pressure = (pressure - (var2 / 4096.0)) * 6250.0 / var1;
 8001c90:	f04f 0200 	mov.w	r2, #0
 8001c94:	4b5b      	ldr	r3, [pc, #364]	; (8001e04 <compensate_pressure+0x38c>)
 8001c96:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001c9a:	f7fe fdef 	bl	800087c <__aeabi_ddiv>
 8001c9e:	4602      	mov	r2, r0
 8001ca0:	460b      	mov	r3, r1
 8001ca2:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8001ca6:	f7fe fb07 	bl	80002b8 <__aeabi_dsub>
 8001caa:	4602      	mov	r2, r0
 8001cac:	460b      	mov	r3, r1
 8001cae:	4610      	mov	r0, r2
 8001cb0:	4619      	mov	r1, r3
 8001cb2:	a347      	add	r3, pc, #284	; (adr r3, 8001dd0 <compensate_pressure+0x358>)
 8001cb4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001cb8:	f7fe fcb6 	bl	8000628 <__aeabi_dmul>
 8001cbc:	4602      	mov	r2, r0
 8001cbe:	460b      	mov	r3, r1
 8001cc0:	4610      	mov	r0, r2
 8001cc2:	4619      	mov	r1, r3
 8001cc4:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8001cc8:	f7fe fdd8 	bl	800087c <__aeabi_ddiv>
 8001ccc:	4602      	mov	r2, r0
 8001cce:	460b      	mov	r3, r1
 8001cd0:	e9c7 2308 	strd	r2, r3, [r7, #32]
        var1 = ((double)dev->calib_param.dig_p9) * pressure * pressure / 2147483648.0;
 8001cd4:	687b      	ldr	r3, [r7, #4]
 8001cd6:	f9b3 3032 	ldrsh.w	r3, [r3, #50]	; 0x32
 8001cda:	4618      	mov	r0, r3
 8001cdc:	f7fe fc3a 	bl	8000554 <__aeabi_i2d>
 8001ce0:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8001ce4:	f7fe fca0 	bl	8000628 <__aeabi_dmul>
 8001ce8:	4602      	mov	r2, r0
 8001cea:	460b      	mov	r3, r1
 8001cec:	4610      	mov	r0, r2
 8001cee:	4619      	mov	r1, r3
 8001cf0:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8001cf4:	f7fe fc98 	bl	8000628 <__aeabi_dmul>
 8001cf8:	4602      	mov	r2, r0
 8001cfa:	460b      	mov	r3, r1
 8001cfc:	4610      	mov	r0, r2
 8001cfe:	4619      	mov	r1, r3
 8001d00:	f04f 0200 	mov.w	r2, #0
 8001d04:	4b40      	ldr	r3, [pc, #256]	; (8001e08 <compensate_pressure+0x390>)
 8001d06:	f7fe fdb9 	bl	800087c <__aeabi_ddiv>
 8001d0a:	4602      	mov	r2, r0
 8001d0c:	460b      	mov	r3, r1
 8001d0e:	e9c7 2306 	strd	r2, r3, [r7, #24]
        var2 = pressure * ((double)dev->calib_param.dig_p8) / 32768.0;
 8001d12:	687b      	ldr	r3, [r7, #4]
 8001d14:	f9b3 3030 	ldrsh.w	r3, [r3, #48]	; 0x30
 8001d18:	4618      	mov	r0, r3
 8001d1a:	f7fe fc1b 	bl	8000554 <__aeabi_i2d>
 8001d1e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8001d22:	f7fe fc81 	bl	8000628 <__aeabi_dmul>
 8001d26:	4602      	mov	r2, r0
 8001d28:	460b      	mov	r3, r1
 8001d2a:	4610      	mov	r0, r2
 8001d2c:	4619      	mov	r1, r3
 8001d2e:	f04f 0200 	mov.w	r2, #0
 8001d32:	4b2e      	ldr	r3, [pc, #184]	; (8001dec <compensate_pressure+0x374>)
 8001d34:	f7fe fda2 	bl	800087c <__aeabi_ddiv>
 8001d38:	4602      	mov	r2, r0
 8001d3a:	460b      	mov	r3, r1
 8001d3c:	e9c7 2304 	strd	r2, r3, [r7, #16]

        pressure = pressure + (var1 + var2 + ((double)dev->calib_param.dig_p7)) / 16.0;
 8001d40:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8001d44:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8001d48:	f7fe fab8 	bl	80002bc <__adddf3>
 8001d4c:	4602      	mov	r2, r0
 8001d4e:	460b      	mov	r3, r1
 8001d50:	4614      	mov	r4, r2
 8001d52:	461d      	mov	r5, r3
 8001d54:	687b      	ldr	r3, [r7, #4]
 8001d56:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8001d5a:	4618      	mov	r0, r3
 8001d5c:	f7fe fbfa 	bl	8000554 <__aeabi_i2d>
 8001d60:	4602      	mov	r2, r0
 8001d62:	460b      	mov	r3, r1
 8001d64:	4620      	mov	r0, r4
 8001d66:	4629      	mov	r1, r5
 8001d68:	f7fe faa8 	bl	80002bc <__adddf3>
 8001d6c:	4602      	mov	r2, r0
 8001d6e:	460b      	mov	r3, r1
 8001d70:	4610      	mov	r0, r2
 8001d72:	4619      	mov	r1, r3
 8001d74:	f04f 0200 	mov.w	r2, #0
 8001d78:	4b24      	ldr	r3, [pc, #144]	; (8001e0c <compensate_pressure+0x394>)
 8001d7a:	f7fe fd7f 	bl	800087c <__aeabi_ddiv>
 8001d7e:	4602      	mov	r2, r0
 8001d80:	460b      	mov	r3, r1
 8001d82:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8001d86:	f7fe fa99 	bl	80002bc <__adddf3>
 8001d8a:	4602      	mov	r2, r0
 8001d8c:	460b      	mov	r3, r1
 8001d8e:	e9c7 2308 	strd	r2, r3, [r7, #32]

        if (pressure < BMP2_MIN_PRES_DOUBLE)
 8001d92:	a311      	add	r3, pc, #68	; (adr r3, 8001dd8 <compensate_pressure+0x360>)
 8001d94:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d98:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8001d9c:	f7fe feb6 	bl	8000b0c <__aeabi_dcmplt>
 8001da0:	4603      	mov	r3, r0
 8001da2:	2b00      	cmp	r3, #0
 8001da4:	d007      	beq.n	8001db6 <compensate_pressure+0x33e>
        {
            pressure = BMP2_MIN_PRES_DOUBLE;
 8001da6:	a30c      	add	r3, pc, #48	; (adr r3, 8001dd8 <compensate_pressure+0x360>)
 8001da8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001dac:	e9c7 2308 	strd	r2, r3, [r7, #32]
            rslt = BMP2_W_MIN_PRES;
 8001db0:	2303      	movs	r3, #3
 8001db2:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
        }

        if (pressure > BMP2_MAX_PRES_DOUBLE)
 8001db6:	a30a      	add	r3, pc, #40	; (adr r3, 8001de0 <compensate_pressure+0x368>)
 8001db8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001dbc:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8001dc0:	f7fe fec2 	bl	8000b48 <__aeabi_dcmpgt>
 8001dc4:	4603      	mov	r3, r0
 8001dc6:	2b00      	cmp	r3, #0
 8001dc8:	e022      	b.n	8001e10 <compensate_pressure+0x398>
 8001dca:	bf00      	nop
 8001dcc:	f3af 8000 	nop.w
 8001dd0:	00000000 	.word	0x00000000
 8001dd4:	40b86a00 	.word	0x40b86a00
 8001dd8:	00000000 	.word	0x00000000
 8001ddc:	40dd4c00 	.word	0x40dd4c00
 8001de0:	00000000 	.word	0x00000000
 8001de4:	40fadb00 	.word	0x40fadb00
 8001de8:	40ef4000 	.word	0x40ef4000
 8001dec:	40e00000 	.word	0x40e00000
 8001df0:	40100000 	.word	0x40100000
 8001df4:	40f00000 	.word	0x40f00000
 8001df8:	41200000 	.word	0x41200000
 8001dfc:	3ff00000 	.word	0x3ff00000
 8001e00:	41300000 	.word	0x41300000
 8001e04:	40b00000 	.word	0x40b00000
 8001e08:	41e00000 	.word	0x41e00000
 8001e0c:	40300000 	.word	0x40300000
 8001e10:	d007      	beq.n	8001e22 <compensate_pressure+0x3aa>
        {
            pressure = BMP2_MAX_PRES_DOUBLE;
 8001e12:	a309      	add	r3, pc, #36	; (adr r3, 8001e38 <compensate_pressure+0x3c0>)
 8001e14:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e18:	e9c7 2308 	strd	r2, r3, [r7, #32]
            rslt = BMP2_W_MAX_PRES;
 8001e1c:	2304      	movs	r3, #4
 8001e1e:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
        }

        (*comp_pressure) = pressure;
 8001e22:	68f9      	ldr	r1, [r7, #12]
 8001e24:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8001e28:	e9c1 2300 	strd	r2, r3, [r1]
    }

    return rslt;
 8001e2c:	f997 302f 	ldrsb.w	r3, [r7, #47]	; 0x2f
}
 8001e30:	4618      	mov	r0, r3
 8001e32:	3730      	adds	r7, #48	; 0x30
 8001e34:	46bd      	mov	sp, r7
 8001e36:	bdb0      	pop	{r4, r5, r7, pc}
 8001e38:	00000000 	.word	0x00000000
 8001e3c:	40fadb00 	.word	0x40fadb00

08001e40 <st_check_boundaries>:
/*!
 * @This internal API checks whether the uncompensated temperature and
 * uncompensated pressure are within the range
 */
static int8_t st_check_boundaries(int32_t utemperature, int32_t upressure)
{
 8001e40:	b480      	push	{r7}
 8001e42:	b085      	sub	sp, #20
 8001e44:	af00      	add	r7, sp, #0
 8001e46:	6078      	str	r0, [r7, #4]
 8001e48:	6039      	str	r1, [r7, #0]
    int8_t rslt = 0;
 8001e4a:	2300      	movs	r3, #0
 8001e4c:	73fb      	strb	r3, [r7, #15]

    /* Check Uncompensated pressure in not valid range AND uncompensated temperature in valid range */
    if ((upressure < BMP2_ST_ADC_P_MIN || upressure > BMP2_ST_ADC_P_MAX) &&
 8001e4e:	683b      	ldr	r3, [r7, #0]
 8001e50:	2b00      	cmp	r3, #0
 8001e52:	db03      	blt.n	8001e5c <st_check_boundaries+0x1c>
 8001e54:	683b      	ldr	r3, [r7, #0]
 8001e56:	4a1c      	ldr	r2, [pc, #112]	; (8001ec8 <st_check_boundaries+0x88>)
 8001e58:	4293      	cmp	r3, r2
 8001e5a:	dd09      	ble.n	8001e70 <st_check_boundaries+0x30>
 8001e5c:	687b      	ldr	r3, [r7, #4]
 8001e5e:	2b00      	cmp	r3, #0
 8001e60:	db06      	blt.n	8001e70 <st_check_boundaries+0x30>
        (utemperature >= BMP2_ST_ADC_T_MIN && utemperature <= BMP2_ST_ADC_T_MAX))
 8001e62:	687b      	ldr	r3, [r7, #4]
 8001e64:	4a18      	ldr	r2, [pc, #96]	; (8001ec8 <st_check_boundaries+0x88>)
 8001e66:	4293      	cmp	r3, r2
 8001e68:	dc02      	bgt.n	8001e70 <st_check_boundaries+0x30>
    {
        rslt = BMP2_E_UNCOMP_PRESS_RANGE;
 8001e6a:	23fa      	movs	r3, #250	; 0xfa
 8001e6c:	73fb      	strb	r3, [r7, #15]
 8001e6e:	e023      	b.n	8001eb8 <st_check_boundaries+0x78>
    }
    /* Check Uncompensated temperature in not valid range AND uncompensated pressure in valid range */
    else if ((utemperature < BMP2_ST_ADC_T_MIN || utemperature > BMP2_ST_ADC_T_MAX) &&
 8001e70:	687b      	ldr	r3, [r7, #4]
 8001e72:	2b00      	cmp	r3, #0
 8001e74:	db03      	blt.n	8001e7e <st_check_boundaries+0x3e>
 8001e76:	687b      	ldr	r3, [r7, #4]
 8001e78:	4a13      	ldr	r2, [pc, #76]	; (8001ec8 <st_check_boundaries+0x88>)
 8001e7a:	4293      	cmp	r3, r2
 8001e7c:	dd09      	ble.n	8001e92 <st_check_boundaries+0x52>
 8001e7e:	683b      	ldr	r3, [r7, #0]
 8001e80:	2b00      	cmp	r3, #0
 8001e82:	db06      	blt.n	8001e92 <st_check_boundaries+0x52>
             (upressure >= BMP2_ST_ADC_P_MIN && upressure <= BMP2_ST_ADC_P_MAX))
 8001e84:	683b      	ldr	r3, [r7, #0]
 8001e86:	4a10      	ldr	r2, [pc, #64]	; (8001ec8 <st_check_boundaries+0x88>)
 8001e88:	4293      	cmp	r3, r2
 8001e8a:	dc02      	bgt.n	8001e92 <st_check_boundaries+0x52>
    {
        rslt = BMP2_E_UNCOMP_TEMP_RANGE;
 8001e8c:	23fb      	movs	r3, #251	; 0xfb
 8001e8e:	73fb      	strb	r3, [r7, #15]
 8001e90:	e012      	b.n	8001eb8 <st_check_boundaries+0x78>
    }
    /* Check Uncompensated pressure in not valid range AND uncompensated temperature in not valid range */
    else if ((upressure < BMP2_ST_ADC_P_MIN || upressure > BMP2_ST_ADC_P_MAX) &&
 8001e92:	683b      	ldr	r3, [r7, #0]
 8001e94:	2b00      	cmp	r3, #0
 8001e96:	db03      	blt.n	8001ea0 <st_check_boundaries+0x60>
 8001e98:	683b      	ldr	r3, [r7, #0]
 8001e9a:	4a0b      	ldr	r2, [pc, #44]	; (8001ec8 <st_check_boundaries+0x88>)
 8001e9c:	4293      	cmp	r3, r2
 8001e9e:	dd09      	ble.n	8001eb4 <st_check_boundaries+0x74>
 8001ea0:	687b      	ldr	r3, [r7, #4]
 8001ea2:	2b00      	cmp	r3, #0
 8001ea4:	db03      	blt.n	8001eae <st_check_boundaries+0x6e>
             (utemperature < BMP2_ST_ADC_T_MIN || utemperature > BMP2_ST_ADC_T_MAX))
 8001ea6:	687b      	ldr	r3, [r7, #4]
 8001ea8:	4a07      	ldr	r2, [pc, #28]	; (8001ec8 <st_check_boundaries+0x88>)
 8001eaa:	4293      	cmp	r3, r2
 8001eac:	dd02      	ble.n	8001eb4 <st_check_boundaries+0x74>
    {
        rslt = BMP2_E_UNCOMP_TEMP_AND_PRESS_RANGE;
 8001eae:	23f9      	movs	r3, #249	; 0xf9
 8001eb0:	73fb      	strb	r3, [r7, #15]
 8001eb2:	e001      	b.n	8001eb8 <st_check_boundaries+0x78>
    }
    else
    {
        rslt = BMP2_OK;
 8001eb4:	2300      	movs	r3, #0
 8001eb6:	73fb      	strb	r3, [r7, #15]
    }

    return rslt;
 8001eb8:	f997 300f 	ldrsb.w	r3, [r7, #15]
}
 8001ebc:	4618      	mov	r0, r3
 8001ebe:	3714      	adds	r7, #20
 8001ec0:	46bd      	mov	sp, r7
 8001ec2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ec6:	4770      	bx	lr
 8001ec8:	000ffff0 	.word	0x000ffff0

08001ecc <BMP2_Init>:
 *  @retval BMP2_INTF_RET_SUCCESS -> Success.
 *  @retval != BMP2_INTF_RET_SUCCESS -> Failure.
 *
 */
int8_t BMP2_Init(struct bmp2_dev* dev)
{
 8001ecc:	b580      	push	{r7, lr}
 8001ece:	b086      	sub	sp, #24
 8001ed0:	af00      	add	r7, sp, #0
 8001ed2:	6078      	str	r0, [r7, #4]
  int8_t rslt;
  uint32_t meas_time;
  struct bmp2_config conf;

  rslt = bmp2_init(dev);
 8001ed4:	6878      	ldr	r0, [r7, #4]
 8001ed6:	f7ff f837 	bl	8000f48 <bmp2_init>
 8001eda:	4603      	mov	r3, r0
 8001edc:	75fb      	strb	r3, [r7, #23]

  /* Always read the current settings before writing, especially when all the configuration is not modified */
  rslt = bmp2_get_config(&conf, dev);
 8001ede:	f107 0308 	add.w	r3, r7, #8
 8001ee2:	6879      	ldr	r1, [r7, #4]
 8001ee4:	4618      	mov	r0, r3
 8001ee6:	f7ff f91c 	bl	8001122 <bmp2_get_config>
 8001eea:	4603      	mov	r3, r0
 8001eec:	75fb      	strb	r3, [r7, #23]

  /* Configuring the over-sampling mode, filter coefficient and output data rate */
  /* Overwrite the desired settings */
  conf.filter = BMP2_FILTER_COEFF_8;
 8001eee:	2303      	movs	r3, #3
 8001ef0:	733b      	strb	r3, [r7, #12]
  /* Over-sampling mode is set as ultra low resolution i.e., os_pres = 1x and os_temp = 1x */
  conf.os_mode = BMP2_OS_MODE_ULTRA_LOW_POWER;
 8001ef2:	2300      	movs	r3, #0
 8001ef4:	72fb      	strb	r3, [r7, #11]
  /* Setting the output data rate */
  conf.odr = BMP2_ODR_250_MS;
 8001ef6:	2303      	movs	r3, #3
 8001ef8:	72bb      	strb	r3, [r7, #10]

  rslt = bmp2_set_config(&conf, dev);
 8001efa:	f107 0308 	add.w	r3, r7, #8
 8001efe:	6879      	ldr	r1, [r7, #4]
 8001f00:	4618      	mov	r0, r3
 8001f02:	f7ff f94e 	bl	80011a2 <bmp2_set_config>
 8001f06:	4603      	mov	r3, r0
 8001f08:	75fb      	strb	r3, [r7, #23]

  /* Set normal power mode */
  rslt = bmp2_set_power_mode(BMP2_POWERMODE_NORMAL, &conf, dev);
 8001f0a:	f107 0308 	add.w	r3, r7, #8
 8001f0e:	687a      	ldr	r2, [r7, #4]
 8001f10:	4619      	mov	r1, r3
 8001f12:	2003      	movs	r0, #3
 8001f14:	f7ff f980 	bl	8001218 <bmp2_set_power_mode>
 8001f18:	4603      	mov	r3, r0
 8001f1a:	75fb      	strb	r3, [r7, #23]

  /* Calculate measurement time in microseconds */
  rslt = bmp2_compute_meas_time(&meas_time, &conf, dev);
 8001f1c:	f107 0108 	add.w	r1, r7, #8
 8001f20:	f107 0310 	add.w	r3, r7, #16
 8001f24:	687a      	ldr	r2, [r7, #4]
 8001f26:	4618      	mov	r0, r3
 8001f28:	f7ff fa0a 	bl	8001340 <bmp2_compute_meas_time>
 8001f2c:	4603      	mov	r3, r0
 8001f2e:	75fb      	strb	r3, [r7, #23]

  return rslt;
 8001f30:	f997 3017 	ldrsb.w	r3, [r7, #23]
}
 8001f34:	4618      	mov	r0, r3
 8001f36:	3718      	adds	r7, #24
 8001f38:	46bd      	mov	sp, r7
 8001f3a:	bd80      	pop	{r7, pc}

08001f3c <bmp2_spi_read>:
 *  @retval BMP2_INTF_RET_SUCCESS -> Success.
 *  @retval != BMP2_INTF_RET_SUCCESS -> Failure.
 *
 */
BMP2_INTF_RET_TYPE bmp2_spi_read(uint8_t reg_addr, uint8_t *reg_data, uint32_t length, void *intf_ptr)
{
 8001f3c:	b580      	push	{r7, lr}
 8001f3e:	b086      	sub	sp, #24
 8001f40:	af00      	add	r7, sp, #0
 8001f42:	60b9      	str	r1, [r7, #8]
 8001f44:	607a      	str	r2, [r7, #4]
 8001f46:	603b      	str	r3, [r7, #0]
 8001f48:	4603      	mov	r3, r0
 8001f4a:	73fb      	strb	r3, [r7, #15]
  /* Implement the SPI read routine according to the target machine. */
  HAL_StatusTypeDef status = HAL_OK;
 8001f4c:	2300      	movs	r3, #0
 8001f4e:	75bb      	strb	r3, [r7, #22]
  int8_t iError = BMP2_INTF_RET_SUCCESS;
 8001f50:	2300      	movs	r3, #0
 8001f52:	75fb      	strb	r3, [r7, #23]
  BMP2_HandleTypeDef* hbmp2 = (BMP2_HandleTypeDef*)intf_ptr;
 8001f54:	683b      	ldr	r3, [r7, #0]
 8001f56:	613b      	str	r3, [r7, #16]

  /* Software slave selection procedure */
  HAL_GPIO_WritePin(hbmp2->CS_Port, hbmp2->CS_Pin, GPIO_PIN_RESET);
 8001f58:	693b      	ldr	r3, [r7, #16]
 8001f5a:	6858      	ldr	r0, [r3, #4]
 8001f5c:	693b      	ldr	r3, [r7, #16]
 8001f5e:	891b      	ldrh	r3, [r3, #8]
 8001f60:	2200      	movs	r2, #0
 8001f62:	4619      	mov	r1, r3
 8001f64:	f001 fe4c 	bl	8003c00 <HAL_GPIO_WritePin>

  /* Data exchange */
  status  = HAL_SPI_Transmit(hbmp2->SPI , &reg_addr, BMP2_REG_ADDR_LEN, BMP2_TIMEOUT);
 8001f68:	693b      	ldr	r3, [r7, #16]
 8001f6a:	6818      	ldr	r0, [r3, #0]
 8001f6c:	f107 010f 	add.w	r1, r7, #15
 8001f70:	2305      	movs	r3, #5
 8001f72:	2201      	movs	r2, #1
 8001f74:	f004 f9b1 	bl	80062da <HAL_SPI_Transmit>
 8001f78:	4603      	mov	r3, r0
 8001f7a:	75bb      	strb	r3, [r7, #22]
  status += HAL_SPI_Receive( hbmp2->SPI,  reg_data, length,            BMP2_TIMEOUT);
 8001f7c:	693b      	ldr	r3, [r7, #16]
 8001f7e:	6818      	ldr	r0, [r3, #0]
 8001f80:	687b      	ldr	r3, [r7, #4]
 8001f82:	b29a      	uxth	r2, r3
 8001f84:	2305      	movs	r3, #5
 8001f86:	68b9      	ldr	r1, [r7, #8]
 8001f88:	f004 fb15 	bl	80065b6 <HAL_SPI_Receive>
 8001f8c:	4603      	mov	r3, r0
 8001f8e:	461a      	mov	r2, r3
 8001f90:	7dbb      	ldrb	r3, [r7, #22]
 8001f92:	4413      	add	r3, r2
 8001f94:	75bb      	strb	r3, [r7, #22]

  /* Disable selected slaves */
  HAL_GPIO_WritePin(hbmp2->CS_Port, hbmp2->CS_Pin, GPIO_PIN_SET);
 8001f96:	693b      	ldr	r3, [r7, #16]
 8001f98:	6858      	ldr	r0, [r3, #4]
 8001f9a:	693b      	ldr	r3, [r7, #16]
 8001f9c:	891b      	ldrh	r3, [r3, #8]
 8001f9e:	2201      	movs	r2, #1
 8001fa0:	4619      	mov	r1, r3
 8001fa2:	f001 fe2d 	bl	8003c00 <HAL_GPIO_WritePin>

  // The BMP2xx API calls for 0 return value as a success, and -1 returned as failure
  if (status != HAL_OK)
 8001fa6:	7dbb      	ldrb	r3, [r7, #22]
 8001fa8:	2b00      	cmp	r3, #0
 8001faa:	d001      	beq.n	8001fb0 <bmp2_spi_read+0x74>
    iError = -1;
 8001fac:	23ff      	movs	r3, #255	; 0xff
 8001fae:	75fb      	strb	r3, [r7, #23]

  return iError;
 8001fb0:	f997 3017 	ldrsb.w	r3, [r7, #23]
}
 8001fb4:	4618      	mov	r0, r3
 8001fb6:	3718      	adds	r7, #24
 8001fb8:	46bd      	mov	sp, r7
 8001fba:	bd80      	pop	{r7, pc}

08001fbc <bmp2_spi_write>:
 *  @retval BMP2_INTF_RET_SUCCESS -> Success.
 *  @retval != BMP2_INTF_RET_SUCCESS -> Failure.
 *
 */
BMP2_INTF_RET_TYPE bmp2_spi_write(uint8_t reg_addr, const uint8_t *reg_data, uint32_t length, void *intf_ptr)
{
 8001fbc:	b580      	push	{r7, lr}
 8001fbe:	b086      	sub	sp, #24
 8001fc0:	af00      	add	r7, sp, #0
 8001fc2:	60b9      	str	r1, [r7, #8]
 8001fc4:	607a      	str	r2, [r7, #4]
 8001fc6:	603b      	str	r3, [r7, #0]
 8001fc8:	4603      	mov	r3, r0
 8001fca:	73fb      	strb	r3, [r7, #15]
  /* Implement the SPI write routine according to the target machine. */
  HAL_StatusTypeDef status = HAL_OK;
 8001fcc:	2300      	movs	r3, #0
 8001fce:	75bb      	strb	r3, [r7, #22]
  int8_t iError = BMP2_INTF_RET_SUCCESS;
 8001fd0:	2300      	movs	r3, #0
 8001fd2:	75fb      	strb	r3, [r7, #23]
  BMP2_HandleTypeDef* hbmp2 = (BMP2_HandleTypeDef*)intf_ptr;
 8001fd4:	683b      	ldr	r3, [r7, #0]
 8001fd6:	613b      	str	r3, [r7, #16]

  /* Software slave selection procedure */
  HAL_GPIO_WritePin(hbmp2->CS_Port, hbmp2->CS_Pin, GPIO_PIN_RESET);
 8001fd8:	693b      	ldr	r3, [r7, #16]
 8001fda:	6858      	ldr	r0, [r3, #4]
 8001fdc:	693b      	ldr	r3, [r7, #16]
 8001fde:	891b      	ldrh	r3, [r3, #8]
 8001fe0:	2200      	movs	r2, #0
 8001fe2:	4619      	mov	r1, r3
 8001fe4:	f001 fe0c 	bl	8003c00 <HAL_GPIO_WritePin>

  /* Data exchange */
  status  = HAL_SPI_Transmit(hbmp2->SPI, &reg_addr, BMP2_REG_ADDR_LEN, BMP2_TIMEOUT);
 8001fe8:	693b      	ldr	r3, [r7, #16]
 8001fea:	6818      	ldr	r0, [r3, #0]
 8001fec:	f107 010f 	add.w	r1, r7, #15
 8001ff0:	2305      	movs	r3, #5
 8001ff2:	2201      	movs	r2, #1
 8001ff4:	f004 f971 	bl	80062da <HAL_SPI_Transmit>
 8001ff8:	4603      	mov	r3, r0
 8001ffa:	75bb      	strb	r3, [r7, #22]
  status += HAL_SPI_Transmit(hbmp2->SPI, (uint8_t*)reg_data, length,   BMP2_TIMEOUT);
 8001ffc:	693b      	ldr	r3, [r7, #16]
 8001ffe:	6818      	ldr	r0, [r3, #0]
 8002000:	687b      	ldr	r3, [r7, #4]
 8002002:	b29a      	uxth	r2, r3
 8002004:	2305      	movs	r3, #5
 8002006:	68b9      	ldr	r1, [r7, #8]
 8002008:	f004 f967 	bl	80062da <HAL_SPI_Transmit>
 800200c:	4603      	mov	r3, r0
 800200e:	461a      	mov	r2, r3
 8002010:	7dbb      	ldrb	r3, [r7, #22]
 8002012:	4413      	add	r3, r2
 8002014:	75bb      	strb	r3, [r7, #22]

  /* Disable selected slaves */
  HAL_GPIO_WritePin(hbmp2->CS_Port, hbmp2->CS_Pin, GPIO_PIN_SET);
 8002016:	693b      	ldr	r3, [r7, #16]
 8002018:	6858      	ldr	r0, [r3, #4]
 800201a:	693b      	ldr	r3, [r7, #16]
 800201c:	891b      	ldrh	r3, [r3, #8]
 800201e:	2201      	movs	r2, #1
 8002020:	4619      	mov	r1, r3
 8002022:	f001 fded 	bl	8003c00 <HAL_GPIO_WritePin>

  // The BMP2xx API calls for 0 return value as a success, and -1 returned as failure
  if (status != HAL_OK)
 8002026:	7dbb      	ldrb	r3, [r7, #22]
 8002028:	2b00      	cmp	r3, #0
 800202a:	d001      	beq.n	8002030 <bmp2_spi_write+0x74>
    iError = -1;
 800202c:	23ff      	movs	r3, #255	; 0xff
 800202e:	75fb      	strb	r3, [r7, #23]

  return iError;
 8002030:	f997 3017 	ldrsb.w	r3, [r7, #23]
}
 8002034:	4618      	mov	r0, r3
 8002036:	3718      	adds	r7, #24
 8002038:	46bd      	mov	sp, r7
 800203a:	bd80      	pop	{r7, pc}

0800203c <bmp2_delay_us>:
 *  @param[in] intf_ptr   : Interface pointer
 *
 *  @return void.
 */
void bmp2_delay_us(uint32_t period_us, void *intf_ptr)
{
 800203c:	b580      	push	{r7, lr}
 800203e:	b082      	sub	sp, #8
 8002040:	af00      	add	r7, sp, #0
 8002042:	6078      	str	r0, [r7, #4]
 8002044:	6039      	str	r1, [r7, #0]
  UNUSED(intf_ptr);
  HAL_Delay(period_us / 1000uL);
 8002046:	687b      	ldr	r3, [r7, #4]
 8002048:	4a05      	ldr	r2, [pc, #20]	; (8002060 <bmp2_delay_us+0x24>)
 800204a:	fba2 2303 	umull	r2, r3, r2, r3
 800204e:	099b      	lsrs	r3, r3, #6
 8002050:	4618      	mov	r0, r3
 8002052:	f001 fa53 	bl	80034fc <HAL_Delay>
}
 8002056:	bf00      	nop
 8002058:	3708      	adds	r7, #8
 800205a:	46bd      	mov	sp, r7
 800205c:	bd80      	pop	{r7, pc}
 800205e:	bf00      	nop
 8002060:	10624dd3 	.word	0x10624dd3

08002064 <BMP2_ReadTemperature_degC>:
 *  @param[in]  dev   : BMP2xx device structure
 *
 *  @return Temperature measurement [degC]
 */
double BMP2_ReadTemperature_degC(struct bmp2_dev *dev)
{
 8002064:	b590      	push	{r4, r7, lr}
 8002066:	b08d      	sub	sp, #52	; 0x34
 8002068:	af00      	add	r7, sp, #0
 800206a:	6078      	str	r0, [r7, #4]
  int8_t rslt = BMP2_E_NULL_PTR;
 800206c:	23ff      	movs	r3, #255	; 0xff
 800206e:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
  struct bmp2_status status;
  struct bmp2_data comp_data;
  double temp = NAN;
 8002072:	f04f 0200 	mov.w	r2, #0
 8002076:	4b22      	ldr	r3, [pc, #136]	; (8002100 <BMP2_ReadTemperature_degC+0x9c>)
 8002078:	e9c7 2308 	strd	r2, r3, [r7, #32]
  int8_t try = BMP2_GET_MAX_RETRY(dev);
 800207c:	687b      	ldr	r3, [r7, #4]
 800207e:	685b      	ldr	r3, [r3, #4]
 8002080:	899b      	ldrh	r3, [r3, #12]
 8002082:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f

  do {
    /* Read sensor status */
    rslt = bmp2_get_status(&status, dev);
 8002086:	f107 031c 	add.w	r3, r7, #28
 800208a:	6879      	ldr	r1, [r7, #4]
 800208c:	4618      	mov	r0, r3
 800208e:	f7ff f897 	bl	80011c0 <bmp2_get_status>
 8002092:	4603      	mov	r3, r0
 8002094:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
    /* Read compensated data */
    rslt = bmp2_get_sensor_data(&comp_data, dev);
 8002098:	f107 0308 	add.w	r3, r7, #8
 800209c:	6879      	ldr	r1, [r7, #4]
 800209e:	4618      	mov	r0, r3
 80020a0:	f7ff f8cf 	bl	8001242 <bmp2_get_sensor_data>
 80020a4:	4603      	mov	r3, r0
 80020a6:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
    temp = comp_data.temperature;
 80020aa:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80020ae:	e9c7 2308 	strd	r2, r3, [r7, #32]
    try--;
 80020b2:	f997 302f 	ldrsb.w	r3, [r7, #47]	; 0x2f
 80020b6:	b2db      	uxtb	r3, r3
 80020b8:	3b01      	subs	r3, #1
 80020ba:	b2db      	uxtb	r3, r3
 80020bc:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
  } while (status.measuring != BMP2_MEAS_DONE && try > 0);
 80020c0:	7f3b      	ldrb	r3, [r7, #28]
 80020c2:	2b00      	cmp	r3, #0
 80020c4:	d003      	beq.n	80020ce <BMP2_ReadTemperature_degC+0x6a>
 80020c6:	f997 302f 	ldrsb.w	r3, [r7, #47]	; 0x2f
 80020ca:	2b00      	cmp	r3, #0
 80020cc:	dcdb      	bgt.n	8002086 <BMP2_ReadTemperature_degC+0x22>

  /* Save reading result in sensor handler */
  BMP2_GET_TEMP(dev) = temp;
 80020ce:	687b      	ldr	r3, [r7, #4]
 80020d0:	685c      	ldr	r4, [r3, #4]
 80020d2:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 80020d6:	f7fe fd69 	bl	8000bac <__aeabi_d2f>
 80020da:	4603      	mov	r3, r0
 80020dc:	6123      	str	r3, [r4, #16]
  BMP2_GET_STATUS(dev) = rslt;
 80020de:	687b      	ldr	r3, [r7, #4]
 80020e0:	685b      	ldr	r3, [r3, #4]
 80020e2:	f897 202e 	ldrb.w	r2, [r7, #46]	; 0x2e
 80020e6:	729a      	strb	r2, [r3, #10]

  return temp;
 80020e8:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 80020ec:	ec43 2b17 	vmov	d7, r2, r3
}
 80020f0:	eeb0 0a47 	vmov.f32	s0, s14
 80020f4:	eef0 0a67 	vmov.f32	s1, s15
 80020f8:	3734      	adds	r7, #52	; 0x34
 80020fa:	46bd      	mov	sp, r7
 80020fc:	bd90      	pop	{r4, r7, pc}
 80020fe:	bf00      	nop
 8002100:	7ff80000 	.word	0x7ff80000

08002104 <MX_GPIO_Init>:
     PA12   ------> USB_OTG_FS_DP
     PG11   ------> ETH_TX_EN
     PG13   ------> ETH_TXD0
*/
void MX_GPIO_Init(void)
{
 8002104:	b580      	push	{r7, lr}
 8002106:	b08c      	sub	sp, #48	; 0x30
 8002108:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800210a:	f107 031c 	add.w	r3, r7, #28
 800210e:	2200      	movs	r2, #0
 8002110:	601a      	str	r2, [r3, #0]
 8002112:	605a      	str	r2, [r3, #4]
 8002114:	609a      	str	r2, [r3, #8]
 8002116:	60da      	str	r2, [r3, #12]
 8002118:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800211a:	4b8a      	ldr	r3, [pc, #552]	; (8002344 <MX_GPIO_Init+0x240>)
 800211c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800211e:	4a89      	ldr	r2, [pc, #548]	; (8002344 <MX_GPIO_Init+0x240>)
 8002120:	f043 0310 	orr.w	r3, r3, #16
 8002124:	6313      	str	r3, [r2, #48]	; 0x30
 8002126:	4b87      	ldr	r3, [pc, #540]	; (8002344 <MX_GPIO_Init+0x240>)
 8002128:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800212a:	f003 0310 	and.w	r3, r3, #16
 800212e:	61bb      	str	r3, [r7, #24]
 8002130:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002132:	4b84      	ldr	r3, [pc, #528]	; (8002344 <MX_GPIO_Init+0x240>)
 8002134:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002136:	4a83      	ldr	r2, [pc, #524]	; (8002344 <MX_GPIO_Init+0x240>)
 8002138:	f043 0304 	orr.w	r3, r3, #4
 800213c:	6313      	str	r3, [r2, #48]	; 0x30
 800213e:	4b81      	ldr	r3, [pc, #516]	; (8002344 <MX_GPIO_Init+0x240>)
 8002140:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002142:	f003 0304 	and.w	r3, r3, #4
 8002146:	617b      	str	r3, [r7, #20]
 8002148:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800214a:	4b7e      	ldr	r3, [pc, #504]	; (8002344 <MX_GPIO_Init+0x240>)
 800214c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800214e:	4a7d      	ldr	r2, [pc, #500]	; (8002344 <MX_GPIO_Init+0x240>)
 8002150:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002154:	6313      	str	r3, [r2, #48]	; 0x30
 8002156:	4b7b      	ldr	r3, [pc, #492]	; (8002344 <MX_GPIO_Init+0x240>)
 8002158:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800215a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800215e:	613b      	str	r3, [r7, #16]
 8002160:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002162:	4b78      	ldr	r3, [pc, #480]	; (8002344 <MX_GPIO_Init+0x240>)
 8002164:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002166:	4a77      	ldr	r2, [pc, #476]	; (8002344 <MX_GPIO_Init+0x240>)
 8002168:	f043 0301 	orr.w	r3, r3, #1
 800216c:	6313      	str	r3, [r2, #48]	; 0x30
 800216e:	4b75      	ldr	r3, [pc, #468]	; (8002344 <MX_GPIO_Init+0x240>)
 8002170:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002172:	f003 0301 	and.w	r3, r3, #1
 8002176:	60fb      	str	r3, [r7, #12]
 8002178:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800217a:	4b72      	ldr	r3, [pc, #456]	; (8002344 <MX_GPIO_Init+0x240>)
 800217c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800217e:	4a71      	ldr	r2, [pc, #452]	; (8002344 <MX_GPIO_Init+0x240>)
 8002180:	f043 0302 	orr.w	r3, r3, #2
 8002184:	6313      	str	r3, [r2, #48]	; 0x30
 8002186:	4b6f      	ldr	r3, [pc, #444]	; (8002344 <MX_GPIO_Init+0x240>)
 8002188:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800218a:	f003 0302 	and.w	r3, r3, #2
 800218e:	60bb      	str	r3, [r7, #8]
 8002190:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8002192:	4b6c      	ldr	r3, [pc, #432]	; (8002344 <MX_GPIO_Init+0x240>)
 8002194:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002196:	4a6b      	ldr	r2, [pc, #428]	; (8002344 <MX_GPIO_Init+0x240>)
 8002198:	f043 0308 	orr.w	r3, r3, #8
 800219c:	6313      	str	r3, [r2, #48]	; 0x30
 800219e:	4b69      	ldr	r3, [pc, #420]	; (8002344 <MX_GPIO_Init+0x240>)
 80021a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80021a2:	f003 0308 	and.w	r3, r3, #8
 80021a6:	607b      	str	r3, [r7, #4]
 80021a8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80021aa:	4b66      	ldr	r3, [pc, #408]	; (8002344 <MX_GPIO_Init+0x240>)
 80021ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80021ae:	4a65      	ldr	r2, [pc, #404]	; (8002344 <MX_GPIO_Init+0x240>)
 80021b0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80021b4:	6313      	str	r3, [r2, #48]	; 0x30
 80021b6:	4b63      	ldr	r3, [pc, #396]	; (8002344 <MX_GPIO_Init+0x240>)
 80021b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80021ba:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80021be:	603b      	str	r3, [r7, #0]
 80021c0:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SPI4_CS_GPIO_Port, SPI4_CS_Pin, GPIO_PIN_RESET);
 80021c2:	2200      	movs	r2, #0
 80021c4:	2110      	movs	r1, #16
 80021c6:	4860      	ldr	r0, [pc, #384]	; (8002348 <MX_GPIO_Init+0x244>)
 80021c8:	f001 fd1a 	bl	8003c00 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LD1_Pin|LD3_Pin|LD2_Pin, GPIO_PIN_RESET);
 80021cc:	2200      	movs	r2, #0
 80021ce:	f244 0181 	movw	r1, #16513	; 0x4081
 80021d2:	485e      	ldr	r0, [pc, #376]	; (800234c <MX_GPIO_Init+0x248>)
 80021d4:	f001 fd14 	bl	8003c00 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(USB_PowerSwitchOn_GPIO_Port, USB_PowerSwitchOn_Pin, GPIO_PIN_RESET);
 80021d8:	2200      	movs	r2, #0
 80021da:	2140      	movs	r1, #64	; 0x40
 80021dc:	485c      	ldr	r0, [pc, #368]	; (8002350 <MX_GPIO_Init+0x24c>)
 80021de:	f001 fd0f 	bl	8003c00 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = SPI4_CS_Pin;
 80021e2:	2310      	movs	r3, #16
 80021e4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80021e6:	2301      	movs	r3, #1
 80021e8:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021ea:	2300      	movs	r3, #0
 80021ec:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80021ee:	2300      	movs	r3, #0
 80021f0:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(SPI4_CS_GPIO_Port, &GPIO_InitStruct);
 80021f2:	f107 031c 	add.w	r3, r7, #28
 80021f6:	4619      	mov	r1, r3
 80021f8:	4853      	ldr	r0, [pc, #332]	; (8002348 <MX_GPIO_Init+0x244>)
 80021fa:	f001 fb55 	bl	80038a8 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = USER_Btn_Pin;
 80021fe:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002202:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8002204:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8002208:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800220a:	2300      	movs	r3, #0
 800220c:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(USER_Btn_GPIO_Port, &GPIO_InitStruct);
 800220e:	f107 031c 	add.w	r3, r7, #28
 8002212:	4619      	mov	r1, r3
 8002214:	484f      	ldr	r0, [pc, #316]	; (8002354 <MX_GPIO_Init+0x250>)
 8002216:	f001 fb47 	bl	80038a8 <HAL_GPIO_Init>

  /*Configure GPIO pins : PCPin PCPin PCPin */
  GPIO_InitStruct.Pin = RMII_MDC_Pin|RMII_RXD0_Pin|RMII_RXD1_Pin;
 800221a:	2332      	movs	r3, #50	; 0x32
 800221c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800221e:	2302      	movs	r3, #2
 8002220:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002222:	2300      	movs	r3, #0
 8002224:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002226:	2303      	movs	r3, #3
 8002228:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 800222a:	230b      	movs	r3, #11
 800222c:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800222e:	f107 031c 	add.w	r3, r7, #28
 8002232:	4619      	mov	r1, r3
 8002234:	4847      	ldr	r0, [pc, #284]	; (8002354 <MX_GPIO_Init+0x250>)
 8002236:	f001 fb37 	bl	80038a8 <HAL_GPIO_Init>

  /*Configure GPIO pins : PAPin PAPin PAPin */
  GPIO_InitStruct.Pin = RMII_REF_CLK_Pin|RMII_MDIO_Pin|RMII_CRS_DV_Pin;
 800223a:	2386      	movs	r3, #134	; 0x86
 800223c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800223e:	2302      	movs	r3, #2
 8002240:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002242:	2300      	movs	r3, #0
 8002244:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002246:	2303      	movs	r3, #3
 8002248:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 800224a:	230b      	movs	r3, #11
 800224c:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800224e:	f107 031c 	add.w	r3, r7, #28
 8002252:	4619      	mov	r1, r3
 8002254:	4840      	ldr	r0, [pc, #256]	; (8002358 <MX_GPIO_Init+0x254>)
 8002256:	f001 fb27 	bl	80038a8 <HAL_GPIO_Init>

  /*Configure GPIO pins : PBPin PBPin PBPin */
  GPIO_InitStruct.Pin = LD1_Pin|LD3_Pin|LD2_Pin;
 800225a:	f244 0381 	movw	r3, #16513	; 0x4081
 800225e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002260:	2301      	movs	r3, #1
 8002262:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002264:	2300      	movs	r3, #0
 8002266:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002268:	2300      	movs	r3, #0
 800226a:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800226c:	f107 031c 	add.w	r3, r7, #28
 8002270:	4619      	mov	r1, r3
 8002272:	4836      	ldr	r0, [pc, #216]	; (800234c <MX_GPIO_Init+0x248>)
 8002274:	f001 fb18 	bl	80038a8 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = RMII_TXD1_Pin;
 8002278:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800227c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800227e:	2302      	movs	r3, #2
 8002280:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002282:	2300      	movs	r3, #0
 8002284:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002286:	2303      	movs	r3, #3
 8002288:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 800228a:	230b      	movs	r3, #11
 800228c:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(RMII_TXD1_GPIO_Port, &GPIO_InitStruct);
 800228e:	f107 031c 	add.w	r3, r7, #28
 8002292:	4619      	mov	r1, r3
 8002294:	482d      	ldr	r0, [pc, #180]	; (800234c <MX_GPIO_Init+0x248>)
 8002296:	f001 fb07 	bl	80038a8 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin;
 800229a:	2340      	movs	r3, #64	; 0x40
 800229c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800229e:	2301      	movs	r3, #1
 80022a0:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022a2:	2300      	movs	r3, #0
 80022a4:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80022a6:	2300      	movs	r3, #0
 80022a8:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(USB_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 80022aa:	f107 031c 	add.w	r3, r7, #28
 80022ae:	4619      	mov	r1, r3
 80022b0:	4827      	ldr	r0, [pc, #156]	; (8002350 <MX_GPIO_Init+0x24c>)
 80022b2:	f001 faf9 	bl	80038a8 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = USB_OverCurrent_Pin;
 80022b6:	2380      	movs	r3, #128	; 0x80
 80022b8:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80022ba:	2300      	movs	r3, #0
 80022bc:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022be:	2300      	movs	r3, #0
 80022c0:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(USB_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 80022c2:	f107 031c 	add.w	r3, r7, #28
 80022c6:	4619      	mov	r1, r3
 80022c8:	4821      	ldr	r0, [pc, #132]	; (8002350 <MX_GPIO_Init+0x24c>)
 80022ca:	f001 faed 	bl	80038a8 <HAL_GPIO_Init>

  /*Configure GPIO pins : PAPin PAPin PAPin PAPin */
  GPIO_InitStruct.Pin = USB_SOF_Pin|USB_ID_Pin|USB_DM_Pin|USB_DP_Pin;
 80022ce:	f44f 53e8 	mov.w	r3, #7424	; 0x1d00
 80022d2:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022d4:	2302      	movs	r3, #2
 80022d6:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022d8:	2300      	movs	r3, #0
 80022da:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022dc:	2303      	movs	r3, #3
 80022de:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 80022e0:	230a      	movs	r3, #10
 80022e2:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022e4:	f107 031c 	add.w	r3, r7, #28
 80022e8:	4619      	mov	r1, r3
 80022ea:	481b      	ldr	r0, [pc, #108]	; (8002358 <MX_GPIO_Init+0x254>)
 80022ec:	f001 fadc 	bl	80038a8 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = USB_VBUS_Pin;
 80022f0:	f44f 7300 	mov.w	r3, #512	; 0x200
 80022f4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80022f6:	2300      	movs	r3, #0
 80022f8:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022fa:	2300      	movs	r3, #0
 80022fc:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(USB_VBUS_GPIO_Port, &GPIO_InitStruct);
 80022fe:	f107 031c 	add.w	r3, r7, #28
 8002302:	4619      	mov	r1, r3
 8002304:	4814      	ldr	r0, [pc, #80]	; (8002358 <MX_GPIO_Init+0x254>)
 8002306:	f001 facf 	bl	80038a8 <HAL_GPIO_Init>

  /*Configure GPIO pins : PGPin PGPin */
  GPIO_InitStruct.Pin = RMII_TX_EN_Pin|RMII_TXD0_Pin;
 800230a:	f44f 5320 	mov.w	r3, #10240	; 0x2800
 800230e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002310:	2302      	movs	r3, #2
 8002312:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002314:	2300      	movs	r3, #0
 8002316:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002318:	2303      	movs	r3, #3
 800231a:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 800231c:	230b      	movs	r3, #11
 800231e:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002320:	f107 031c 	add.w	r3, r7, #28
 8002324:	4619      	mov	r1, r3
 8002326:	480a      	ldr	r0, [pc, #40]	; (8002350 <MX_GPIO_Init+0x24c>)
 8002328:	f001 fabe 	bl	80038a8 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 800232c:	2200      	movs	r2, #0
 800232e:	2100      	movs	r1, #0
 8002330:	2028      	movs	r0, #40	; 0x28
 8002332:	f001 f9e2 	bl	80036fa <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8002336:	2028      	movs	r0, #40	; 0x28
 8002338:	f001 f9fb 	bl	8003732 <HAL_NVIC_EnableIRQ>

}
 800233c:	bf00      	nop
 800233e:	3730      	adds	r7, #48	; 0x30
 8002340:	46bd      	mov	sp, r7
 8002342:	bd80      	pop	{r7, pc}
 8002344:	40023800 	.word	0x40023800
 8002348:	40021000 	.word	0x40021000
 800234c:	40020400 	.word	0x40020400
 8002350:	40021800 	.word	0x40021800
 8002354:	40020800 	.word	0x40020800
 8002358:	40020000 	.word	0x40020000

0800235c <MX_I2C1_Init>:

I2C_HandleTypeDef hi2c1;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 800235c:	b580      	push	{r7, lr}
 800235e:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8002360:	4b1b      	ldr	r3, [pc, #108]	; (80023d0 <MX_I2C1_Init+0x74>)
 8002362:	4a1c      	ldr	r2, [pc, #112]	; (80023d4 <MX_I2C1_Init+0x78>)
 8002364:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x20404768;
 8002366:	4b1a      	ldr	r3, [pc, #104]	; (80023d0 <MX_I2C1_Init+0x74>)
 8002368:	4a1b      	ldr	r2, [pc, #108]	; (80023d8 <MX_I2C1_Init+0x7c>)
 800236a:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 800236c:	4b18      	ldr	r3, [pc, #96]	; (80023d0 <MX_I2C1_Init+0x74>)
 800236e:	2200      	movs	r2, #0
 8002370:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8002372:	4b17      	ldr	r3, [pc, #92]	; (80023d0 <MX_I2C1_Init+0x74>)
 8002374:	2201      	movs	r2, #1
 8002376:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8002378:	4b15      	ldr	r3, [pc, #84]	; (80023d0 <MX_I2C1_Init+0x74>)
 800237a:	2200      	movs	r2, #0
 800237c:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 800237e:	4b14      	ldr	r3, [pc, #80]	; (80023d0 <MX_I2C1_Init+0x74>)
 8002380:	2200      	movs	r2, #0
 8002382:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8002384:	4b12      	ldr	r3, [pc, #72]	; (80023d0 <MX_I2C1_Init+0x74>)
 8002386:	2200      	movs	r2, #0
 8002388:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800238a:	4b11      	ldr	r3, [pc, #68]	; (80023d0 <MX_I2C1_Init+0x74>)
 800238c:	2200      	movs	r2, #0
 800238e:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8002390:	4b0f      	ldr	r3, [pc, #60]	; (80023d0 <MX_I2C1_Init+0x74>)
 8002392:	2200      	movs	r2, #0
 8002394:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8002396:	480e      	ldr	r0, [pc, #56]	; (80023d0 <MX_I2C1_Init+0x74>)
 8002398:	f001 fc70 	bl	8003c7c <HAL_I2C_Init>
 800239c:	4603      	mov	r3, r0
 800239e:	2b00      	cmp	r3, #0
 80023a0:	d001      	beq.n	80023a6 <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 80023a2:	f000 fb75 	bl	8002a90 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 80023a6:	2100      	movs	r1, #0
 80023a8:	4809      	ldr	r0, [pc, #36]	; (80023d0 <MX_I2C1_Init+0x74>)
 80023aa:	f002 fd39 	bl	8004e20 <HAL_I2CEx_ConfigAnalogFilter>
 80023ae:	4603      	mov	r3, r0
 80023b0:	2b00      	cmp	r3, #0
 80023b2:	d001      	beq.n	80023b8 <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 80023b4:	f000 fb6c 	bl	8002a90 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 80023b8:	2100      	movs	r1, #0
 80023ba:	4805      	ldr	r0, [pc, #20]	; (80023d0 <MX_I2C1_Init+0x74>)
 80023bc:	f002 fd7b 	bl	8004eb6 <HAL_I2CEx_ConfigDigitalFilter>
 80023c0:	4603      	mov	r3, r0
 80023c2:	2b00      	cmp	r3, #0
 80023c4:	d001      	beq.n	80023ca <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 80023c6:	f000 fb63 	bl	8002a90 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 80023ca:	bf00      	nop
 80023cc:	bd80      	pop	{r7, pc}
 80023ce:	bf00      	nop
 80023d0:	200000fc 	.word	0x200000fc
 80023d4:	40005400 	.word	0x40005400
 80023d8:	20404768 	.word	0x20404768

080023dc <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 80023dc:	b580      	push	{r7, lr}
 80023de:	b0aa      	sub	sp, #168	; 0xa8
 80023e0:	af00      	add	r7, sp, #0
 80023e2:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80023e4:	f107 0394 	add.w	r3, r7, #148	; 0x94
 80023e8:	2200      	movs	r2, #0
 80023ea:	601a      	str	r2, [r3, #0]
 80023ec:	605a      	str	r2, [r3, #4]
 80023ee:	609a      	str	r2, [r3, #8]
 80023f0:	60da      	str	r2, [r3, #12]
 80023f2:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80023f4:	f107 0310 	add.w	r3, r7, #16
 80023f8:	2284      	movs	r2, #132	; 0x84
 80023fa:	2100      	movs	r1, #0
 80023fc:	4618      	mov	r0, r3
 80023fe:	f007 fdb5 	bl	8009f6c <memset>
  if(i2cHandle->Instance==I2C1)
 8002402:	687b      	ldr	r3, [r7, #4]
 8002404:	681b      	ldr	r3, [r3, #0]
 8002406:	4a2a      	ldr	r2, [pc, #168]	; (80024b0 <HAL_I2C_MspInit+0xd4>)
 8002408:	4293      	cmp	r3, r2
 800240a:	d14c      	bne.n	80024a6 <HAL_I2C_MspInit+0xca>

  /* USER CODE END I2C1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 800240c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8002410:	613b      	str	r3, [r7, #16]
    PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 8002412:	2300      	movs	r3, #0
 8002414:	677b      	str	r3, [r7, #116]	; 0x74
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002416:	f107 0310 	add.w	r3, r7, #16
 800241a:	4618      	mov	r0, r3
 800241c:	f003 fac2 	bl	80059a4 <HAL_RCCEx_PeriphCLKConfig>
 8002420:	4603      	mov	r3, r0
 8002422:	2b00      	cmp	r3, #0
 8002424:	d001      	beq.n	800242a <HAL_I2C_MspInit+0x4e>
    {
      Error_Handler();
 8002426:	f000 fb33 	bl	8002a90 <Error_Handler>
    }

    __HAL_RCC_GPIOB_CLK_ENABLE();
 800242a:	4b22      	ldr	r3, [pc, #136]	; (80024b4 <HAL_I2C_MspInit+0xd8>)
 800242c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800242e:	4a21      	ldr	r2, [pc, #132]	; (80024b4 <HAL_I2C_MspInit+0xd8>)
 8002430:	f043 0302 	orr.w	r3, r3, #2
 8002434:	6313      	str	r3, [r2, #48]	; 0x30
 8002436:	4b1f      	ldr	r3, [pc, #124]	; (80024b4 <HAL_I2C_MspInit+0xd8>)
 8002438:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800243a:	f003 0302 	and.w	r3, r3, #2
 800243e:	60fb      	str	r3, [r7, #12]
 8002440:	68fb      	ldr	r3, [r7, #12]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8002442:	f44f 7340 	mov.w	r3, #768	; 0x300
 8002446:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800244a:	2312      	movs	r3, #18
 800244c:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002450:	2300      	movs	r3, #0
 8002452:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002456:	2303      	movs	r3, #3
 8002458:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 800245c:	2304      	movs	r3, #4
 800245e:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002462:	f107 0394 	add.w	r3, r7, #148	; 0x94
 8002466:	4619      	mov	r1, r3
 8002468:	4813      	ldr	r0, [pc, #76]	; (80024b8 <HAL_I2C_MspInit+0xdc>)
 800246a:	f001 fa1d 	bl	80038a8 <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 800246e:	4b11      	ldr	r3, [pc, #68]	; (80024b4 <HAL_I2C_MspInit+0xd8>)
 8002470:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002472:	4a10      	ldr	r2, [pc, #64]	; (80024b4 <HAL_I2C_MspInit+0xd8>)
 8002474:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002478:	6413      	str	r3, [r2, #64]	; 0x40
 800247a:	4b0e      	ldr	r3, [pc, #56]	; (80024b4 <HAL_I2C_MspInit+0xd8>)
 800247c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800247e:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002482:	60bb      	str	r3, [r7, #8]
 8002484:	68bb      	ldr	r3, [r7, #8]

    /* I2C1 interrupt Init */
    HAL_NVIC_SetPriority(I2C1_EV_IRQn, 0, 0);
 8002486:	2200      	movs	r2, #0
 8002488:	2100      	movs	r1, #0
 800248a:	201f      	movs	r0, #31
 800248c:	f001 f935 	bl	80036fa <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C1_EV_IRQn);
 8002490:	201f      	movs	r0, #31
 8002492:	f001 f94e 	bl	8003732 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(I2C1_ER_IRQn, 0, 0);
 8002496:	2200      	movs	r2, #0
 8002498:	2100      	movs	r1, #0
 800249a:	2020      	movs	r0, #32
 800249c:	f001 f92d 	bl	80036fa <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C1_ER_IRQn);
 80024a0:	2020      	movs	r0, #32
 80024a2:	f001 f946 	bl	8003732 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
}
 80024a6:	bf00      	nop
 80024a8:	37a8      	adds	r7, #168	; 0xa8
 80024aa:	46bd      	mov	sp, r7
 80024ac:	bd80      	pop	{r7, pc}
 80024ae:	bf00      	nop
 80024b0:	40005400 	.word	0x40005400
 80024b4:	40023800 	.word	0x40023800
 80024b8:	40020400 	.word	0x40020400

080024bc <lcd_init>:
#include "i2c.h"



void lcd_init(struct lcd_disp * lcd)
{
 80024bc:	b580      	push	{r7, lr}
 80024be:	b084      	sub	sp, #16
 80024c0:	af00      	add	r7, sp, #0
 80024c2:	6078      	str	r0, [r7, #4]
	uint8_t xpin = 0;
 80024c4:	2300      	movs	r3, #0
 80024c6:	73fb      	strb	r3, [r7, #15]
	/* set backlight */
	if(lcd->bl)
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	f893 3023 	ldrb.w	r3, [r3, #35]	; 0x23
 80024ce:	2b00      	cmp	r3, #0
 80024d0:	d001      	beq.n	80024d6 <lcd_init+0x1a>
	{
		xpin = BL_PIN;
 80024d2:	2308      	movs	r3, #8
 80024d4:	73fb      	strb	r3, [r7, #15]
	}

	/* init sequence */
	HAL_Delay(40);
 80024d6:	2028      	movs	r0, #40	; 0x28
 80024d8:	f001 f810 	bl	80034fc <HAL_Delay>
	lcd_write(lcd->addr, INIT_8_BIT_MODE, xpin);
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	781b      	ldrb	r3, [r3, #0]
 80024e0:	7bfa      	ldrb	r2, [r7, #15]
 80024e2:	2130      	movs	r1, #48	; 0x30
 80024e4:	4618      	mov	r0, r3
 80024e6:	f000 f829 	bl	800253c <lcd_write>
	HAL_Delay(5);
 80024ea:	2005      	movs	r0, #5
 80024ec:	f001 f806 	bl	80034fc <HAL_Delay>
	lcd_write(lcd->addr, INIT_8_BIT_MODE, xpin);
 80024f0:	687b      	ldr	r3, [r7, #4]
 80024f2:	781b      	ldrb	r3, [r3, #0]
 80024f4:	7bfa      	ldrb	r2, [r7, #15]
 80024f6:	2130      	movs	r1, #48	; 0x30
 80024f8:	4618      	mov	r0, r3
 80024fa:	f000 f81f 	bl	800253c <lcd_write>
	HAL_Delay(1);
 80024fe:	2001      	movs	r0, #1
 8002500:	f000 fffc 	bl	80034fc <HAL_Delay>
	lcd_write(lcd->addr, INIT_8_BIT_MODE, xpin);
 8002504:	687b      	ldr	r3, [r7, #4]
 8002506:	781b      	ldrb	r3, [r3, #0]
 8002508:	7bfa      	ldrb	r2, [r7, #15]
 800250a:	2130      	movs	r1, #48	; 0x30
 800250c:	4618      	mov	r0, r3
 800250e:	f000 f815 	bl	800253c <lcd_write>

	/* set 4-bit mode */
	lcd_write(lcd->addr, INIT_4_BIT_MODE, xpin);
 8002512:	687b      	ldr	r3, [r7, #4]
 8002514:	781b      	ldrb	r3, [r3, #0]
 8002516:	7bfa      	ldrb	r2, [r7, #15]
 8002518:	2102      	movs	r1, #2
 800251a:	4618      	mov	r0, r3
 800251c:	f000 f80e 	bl	800253c <lcd_write>

	/* set cursor mode */
	lcd_write(lcd->addr, UNDERLINE_OFF_BLINK_OFF, xpin);
 8002520:	687b      	ldr	r3, [r7, #4]
 8002522:	781b      	ldrb	r3, [r3, #0]
 8002524:	7bfa      	ldrb	r2, [r7, #15]
 8002526:	210c      	movs	r1, #12
 8002528:	4618      	mov	r0, r3
 800252a:	f000 f807 	bl	800253c <lcd_write>

	/* clear */
	lcd_clear(lcd);
 800252e:	6878      	ldr	r0, [r7, #4]
 8002530:	f000 f84a 	bl	80025c8 <lcd_clear>

}
 8002534:	bf00      	nop
 8002536:	3710      	adds	r7, #16
 8002538:	46bd      	mov	sp, r7
 800253a:	bd80      	pop	{r7, pc}

0800253c <lcd_write>:

void lcd_write(uint8_t addr, uint8_t data, uint8_t xpin)
{
 800253c:	b580      	push	{r7, lr}
 800253e:	b086      	sub	sp, #24
 8002540:	af02      	add	r7, sp, #8
 8002542:	4603      	mov	r3, r0
 8002544:	71fb      	strb	r3, [r7, #7]
 8002546:	460b      	mov	r3, r1
 8002548:	71bb      	strb	r3, [r7, #6]
 800254a:	4613      	mov	r3, r2
 800254c:	717b      	strb	r3, [r7, #5]
	uint8_t tx_data[4];

	/* split data */
	tx_data[0] = (data & 0xF0) | EN_PIN | xpin;
 800254e:	79bb      	ldrb	r3, [r7, #6]
 8002550:	f023 030f 	bic.w	r3, r3, #15
 8002554:	b2da      	uxtb	r2, r3
 8002556:	797b      	ldrb	r3, [r7, #5]
 8002558:	4313      	orrs	r3, r2
 800255a:	b2db      	uxtb	r3, r3
 800255c:	f043 0304 	orr.w	r3, r3, #4
 8002560:	b2db      	uxtb	r3, r3
 8002562:	733b      	strb	r3, [r7, #12]
	tx_data[1] = (data & 0xF0) | xpin;
 8002564:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8002568:	f023 030f 	bic.w	r3, r3, #15
 800256c:	b25a      	sxtb	r2, r3
 800256e:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8002572:	4313      	orrs	r3, r2
 8002574:	b25b      	sxtb	r3, r3
 8002576:	b2db      	uxtb	r3, r3
 8002578:	737b      	strb	r3, [r7, #13]
	tx_data[2] = (data << 4) | EN_PIN | xpin;
 800257a:	79bb      	ldrb	r3, [r7, #6]
 800257c:	011b      	lsls	r3, r3, #4
 800257e:	b2da      	uxtb	r2, r3
 8002580:	797b      	ldrb	r3, [r7, #5]
 8002582:	4313      	orrs	r3, r2
 8002584:	b2db      	uxtb	r3, r3
 8002586:	f043 0304 	orr.w	r3, r3, #4
 800258a:	b2db      	uxtb	r3, r3
 800258c:	73bb      	strb	r3, [r7, #14]
	tx_data[3] = (data << 4) | xpin;
 800258e:	79bb      	ldrb	r3, [r7, #6]
 8002590:	011b      	lsls	r3, r3, #4
 8002592:	b25a      	sxtb	r2, r3
 8002594:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8002598:	4313      	orrs	r3, r2
 800259a:	b25b      	sxtb	r3, r3
 800259c:	b2db      	uxtb	r3, r3
 800259e:	73fb      	strb	r3, [r7, #15]

	/* send data via i2c */
	HAL_I2C_Master_Transmit(&HI2C_DEF, addr, tx_data, 4, 100);
 80025a0:	79fb      	ldrb	r3, [r7, #7]
 80025a2:	b299      	uxth	r1, r3
 80025a4:	f107 020c 	add.w	r2, r7, #12
 80025a8:	2364      	movs	r3, #100	; 0x64
 80025aa:	9300      	str	r3, [sp, #0]
 80025ac:	2304      	movs	r3, #4
 80025ae:	4805      	ldr	r0, [pc, #20]	; (80025c4 <lcd_write+0x88>)
 80025b0:	f001 fbf4 	bl	8003d9c <HAL_I2C_Master_Transmit>

	HAL_Delay(5);
 80025b4:	2005      	movs	r0, #5
 80025b6:	f000 ffa1 	bl	80034fc <HAL_Delay>
}
 80025ba:	bf00      	nop
 80025bc:	3710      	adds	r7, #16
 80025be:	46bd      	mov	sp, r7
 80025c0:	bd80      	pop	{r7, pc}
 80025c2:	bf00      	nop
 80025c4:	200000fc 	.word	0x200000fc

080025c8 <lcd_clear>:
		i++;
	}
}

void lcd_clear(struct lcd_disp * lcd)
{
 80025c8:	b580      	push	{r7, lr}
 80025ca:	b084      	sub	sp, #16
 80025cc:	af00      	add	r7, sp, #0
 80025ce:	6078      	str	r0, [r7, #4]
	uint8_t xpin = 0;
 80025d0:	2300      	movs	r3, #0
 80025d2:	73fb      	strb	r3, [r7, #15]

	/* set backlight */
	if(lcd->bl)
 80025d4:	687b      	ldr	r3, [r7, #4]
 80025d6:	f893 3023 	ldrb.w	r3, [r3, #35]	; 0x23
 80025da:	2b00      	cmp	r3, #0
 80025dc:	d001      	beq.n	80025e2 <lcd_clear+0x1a>
	{
		xpin = BL_PIN;
 80025de:	2308      	movs	r3, #8
 80025e0:	73fb      	strb	r3, [r7, #15]
	}

	/* clear display */
	lcd_write(lcd->addr, CLEAR_LCD, xpin);
 80025e2:	687b      	ldr	r3, [r7, #4]
 80025e4:	781b      	ldrb	r3, [r3, #0]
 80025e6:	7bfa      	ldrb	r2, [r7, #15]
 80025e8:	2101      	movs	r1, #1
 80025ea:	4618      	mov	r0, r3
 80025ec:	f7ff ffa6 	bl	800253c <lcd_write>
}
 80025f0:	bf00      	nop
 80025f2:	3710      	adds	r7, #16
 80025f4:	46bd      	mov	sp, r7
 80025f6:	bd80      	pop	{r7, pc}

080025f8 <HAL_TIM_PeriodElapsedCallback>:
/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
pid_t2 pid1={.param.Kp=1.2,.param.Ki=0.0002, .param.Kd=0,.param.dt=1.0, .previous_error=0,
		.previous_integral=0, .max_output=800.0, .min_output=-800.0};
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 80025f8:	b580      	push	{r7, lr}
 80025fa:	b096      	sub	sp, #88	; 0x58
 80025fc:	af00      	add	r7, sp, #0
 80025fe:	6078      	str	r0, [r7, #4]
  if(htim == &htim2)
 8002600:	687b      	ldr	r3, [r7, #4]
 8002602:	4a6f      	ldr	r2, [pc, #444]	; (80027c0 <HAL_TIM_PeriodElapsedCallback+0x1c8>)
 8002604:	4293      	cmp	r3, r2
 8002606:	d14b      	bne.n	80026a0 <HAL_TIM_PeriodElapsedCallback+0xa8>
  {
    static unsigned int cnt = 0;		//zmienna licznika
    temp = BMP2_ReadTemperature_degC(&bmp2dev_1);	//wczytywanie wartości z czujnika temperatury
 8002608:	486e      	ldr	r0, [pc, #440]	; (80027c4 <HAL_TIM_PeriodElapsedCallback+0x1cc>)
 800260a:	f7ff fd2b 	bl	8002064 <BMP2_ReadTemperature_degC>
 800260e:	eeb0 7a40 	vmov.f32	s14, s0
 8002612:	eef0 7a60 	vmov.f32	s15, s1
 8002616:	4b6c      	ldr	r3, [pc, #432]	; (80027c8 <HAL_TIM_PeriodElapsedCallback+0x1d0>)
 8002618:	ed83 7b00 	vstr	d7, [r3]
    newTemp = (int)(temp*1000);		//wartość temperatury zamieniona na int usuwając cyfry po przecinku
 800261c:	4b6a      	ldr	r3, [pc, #424]	; (80027c8 <HAL_TIM_PeriodElapsedCallback+0x1d0>)
 800261e:	e9d3 0100 	ldrd	r0, r1, [r3]
 8002622:	f04f 0200 	mov.w	r2, #0
 8002626:	4b69      	ldr	r3, [pc, #420]	; (80027cc <HAL_TIM_PeriodElapsedCallback+0x1d4>)
 8002628:	f7fd fffe 	bl	8000628 <__aeabi_dmul>
 800262c:	4602      	mov	r2, r0
 800262e:	460b      	mov	r3, r1
 8002630:	4610      	mov	r0, r2
 8002632:	4619      	mov	r1, r3
 8002634:	f7fe fa92 	bl	8000b5c <__aeabi_d2iz>
 8002638:	4603      	mov	r3, r0
 800263a:	4a65      	ldr	r2, [pc, #404]	; (80027d0 <HAL_TIM_PeriodElapsedCallback+0x1d8>)
 800263c:	6013      	str	r3, [r2, #0]

    cnt++;
 800263e:	4b65      	ldr	r3, [pc, #404]	; (80027d4 <HAL_TIM_PeriodElapsedCallback+0x1dc>)
 8002640:	681b      	ldr	r3, [r3, #0]
 8002642:	3301      	adds	r3, #1
 8002644:	4a63      	ldr	r2, [pc, #396]	; (80027d4 <HAL_TIM_PeriodElapsedCallback+0x1dc>)
 8002646:	6013      	str	r3, [r2, #0]

    if(cnt == 40) 												//If aby rzadziej przesyłała się informacja do Terminala
 8002648:	4b62      	ldr	r3, [pc, #392]	; (80027d4 <HAL_TIM_PeriodElapsedCallback+0x1dc>)
 800264a:	681b      	ldr	r3, [r3, #0]
 800264c:	2b28      	cmp	r3, #40	; 0x28
 800264e:	d127      	bne.n	80026a0 <HAL_TIM_PeriodElapsedCallback+0xa8>
    {
      uint8_t dane[64];									//utworzenie zmiennej buforu
      int afterKropka = newTemp%1000;
 8002650:	4b5f      	ldr	r3, [pc, #380]	; (80027d0 <HAL_TIM_PeriodElapsedCallback+0x1d8>)
 8002652:	681b      	ldr	r3, [r3, #0]
 8002654:	4a60      	ldr	r2, [pc, #384]	; (80027d8 <HAL_TIM_PeriodElapsedCallback+0x1e0>)
 8002656:	fb82 1203 	smull	r1, r2, r2, r3
 800265a:	1191      	asrs	r1, r2, #6
 800265c:	17da      	asrs	r2, r3, #31
 800265e:	1a8a      	subs	r2, r1, r2
 8002660:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8002664:	fb01 f202 	mul.w	r2, r1, r2
 8002668:	1a9b      	subs	r3, r3, r2
 800266a:	653b      	str	r3, [r7, #80]	; 0x50
         	  int daneD=sprintf(dane," TEMP: %d.%d [degC]\r\n",newTemp/1000, afterKropka);
 800266c:	4b58      	ldr	r3, [pc, #352]	; (80027d0 <HAL_TIM_PeriodElapsedCallback+0x1d8>)
 800266e:	681b      	ldr	r3, [r3, #0]
 8002670:	4a59      	ldr	r2, [pc, #356]	; (80027d8 <HAL_TIM_PeriodElapsedCallback+0x1e0>)
 8002672:	fb82 1203 	smull	r1, r2, r2, r3
 8002676:	1192      	asrs	r2, r2, #6
 8002678:	17db      	asrs	r3, r3, #31
 800267a:	1ad2      	subs	r2, r2, r3
 800267c:	f107 0008 	add.w	r0, r7, #8
 8002680:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8002682:	4956      	ldr	r1, [pc, #344]	; (80027dc <HAL_TIM_PeriodElapsedCallback+0x1e4>)
 8002684:	f007 fc52 	bl	8009f2c <siprintf>
 8002688:	64f8      	str	r0, [r7, #76]	; 0x4c
         	  HAL_UART_Transmit_IT(&huart3,(uint8_t*)dane , daneD);;	//przesyłanie wiadomości do terminala
 800268a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800268c:	b29a      	uxth	r2, r3
 800268e:	f107 0308 	add.w	r3, r7, #8
 8002692:	4619      	mov	r1, r3
 8002694:	4852      	ldr	r0, [pc, #328]	; (80027e0 <HAL_TIM_PeriodElapsedCallback+0x1e8>)
 8002696:	f006 f899 	bl	80087cc <HAL_UART_Transmit_IT>
      cnt = 0;													//zerowanie licznika
 800269a:	4b4e      	ldr	r3, [pc, #312]	; (80027d4 <HAL_TIM_PeriodElapsedCallback+0x1dc>)
 800269c:	2200      	movs	r2, #0
 800269e:	601a      	str	r2, [r3, #0]


  	  }

  //Regulator-PID
  if(htim == &htim7){
 80026a0:	687b      	ldr	r3, [r7, #4]
 80026a2:	4a50      	ldr	r2, [pc, #320]	; (80027e4 <HAL_TIM_PeriodElapsedCallback+0x1ec>)
 80026a4:	4293      	cmp	r3, r2
 80026a6:	d109      	bne.n	80026bc <HAL_TIM_PeriodElapsedCallback+0xc4>

    current_temp = newTemp;
 80026a8:	4b49      	ldr	r3, [pc, #292]	; (80027d0 <HAL_TIM_PeriodElapsedCallback+0x1d8>)
 80026aa:	681b      	ldr	r3, [r3, #0]
 80026ac:	ee07 3a90 	vmov	s15, r3
 80026b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80026b4:	4b4c      	ldr	r3, [pc, #304]	; (80027e8 <HAL_TIM_PeriodElapsedCallback+0x1f0>)
 80026b6:	edc3 7a00 	vstr	s15, [r3]
    		RezystorTestDrive = pwm_duty;

    		__HAL_TIM_SET_COMPARE(&htim3,TIM_CHANNEL_3,pwm_duty);

  }
}
 80026ba:	e077      	b.n	80027ac <HAL_TIM_PeriodElapsedCallback+0x1b4>
    		float pwm_duty_f= (999.0*calculate_discrete_pid(&pid1,zadane_obiektu,newTemp));
 80026bc:	4b4b      	ldr	r3, [pc, #300]	; (80027ec <HAL_TIM_PeriodElapsedCallback+0x1f4>)
 80026be:	681b      	ldr	r3, [r3, #0]
 80026c0:	ee07 3a90 	vmov	s15, r3
 80026c4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80026c8:	4b41      	ldr	r3, [pc, #260]	; (80027d0 <HAL_TIM_PeriodElapsedCallback+0x1d8>)
 80026ca:	681b      	ldr	r3, [r3, #0]
 80026cc:	ee07 3a10 	vmov	s14, r3
 80026d0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80026d4:	eef0 0a47 	vmov.f32	s1, s14
 80026d8:	eeb0 0a67 	vmov.f32	s0, s15
 80026dc:	4844      	ldr	r0, [pc, #272]	; (80027f0 <HAL_TIM_PeriodElapsedCallback+0x1f8>)
 80026de:	f000 f9dc 	bl	8002a9a <calculate_discrete_pid>
 80026e2:	ee10 3a10 	vmov	r3, s0
 80026e6:	4618      	mov	r0, r3
 80026e8:	f7fd ff46 	bl	8000578 <__aeabi_f2d>
 80026ec:	a332      	add	r3, pc, #200	; (adr r3, 80027b8 <HAL_TIM_PeriodElapsedCallback+0x1c0>)
 80026ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80026f2:	f7fd ff99 	bl	8000628 <__aeabi_dmul>
 80026f6:	4602      	mov	r2, r0
 80026f8:	460b      	mov	r3, r1
 80026fa:	4610      	mov	r0, r2
 80026fc:	4619      	mov	r1, r3
 80026fe:	f7fe fa55 	bl	8000bac <__aeabi_d2f>
 8002702:	4603      	mov	r3, r0
 8002704:	64bb      	str	r3, [r7, #72]	; 0x48
    		RezystorTest = pwm_duty_f;
 8002706:	4a3b      	ldr	r2, [pc, #236]	; (80027f4 <HAL_TIM_PeriodElapsedCallback+0x1fc>)
 8002708:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800270a:	6013      	str	r3, [r2, #0]
    		uint16_t pwm_duty=0;
 800270c:	2300      	movs	r3, #0
 800270e:	f8a7 3056 	strh.w	r3, [r7, #86]	; 0x56
    		if(pwm_duty_f<0)pwm_duty=0;else
 8002712:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 8002716:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800271a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800271e:	d503      	bpl.n	8002728 <HAL_TIM_PeriodElapsedCallback+0x130>
 8002720:	2300      	movs	r3, #0
 8002722:	f8a7 3056 	strh.w	r3, [r7, #86]	; 0x56
 8002726:	e033      	b.n	8002790 <HAL_TIM_PeriodElapsedCallback+0x198>
    		if(150000>pwm_duty_f)pwm_duty=pwm_duty_f/200;else
 8002728:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 800272c:	ed9f 7a32 	vldr	s14, [pc, #200]	; 80027f8 <HAL_TIM_PeriodElapsedCallback+0x200>
 8002730:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002734:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002738:	d50c      	bpl.n	8002754 <HAL_TIM_PeriodElapsedCallback+0x15c>
 800273a:	ed97 7a12 	vldr	s14, [r7, #72]	; 0x48
 800273e:	eddf 6a2f 	vldr	s13, [pc, #188]	; 80027fc <HAL_TIM_PeriodElapsedCallback+0x204>
 8002742:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8002746:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800274a:	ee17 3a90 	vmov	r3, s15
 800274e:	f8a7 3056 	strh.w	r3, [r7, #86]	; 0x56
 8002752:	e01d      	b.n	8002790 <HAL_TIM_PeriodElapsedCallback+0x198>
    		if(pwm_duty_f>150000)pwm_duty=pwm_duty_f/800;else
 8002754:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 8002758:	ed9f 7a27 	vldr	s14, [pc, #156]	; 80027f8 <HAL_TIM_PeriodElapsedCallback+0x200>
 800275c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002760:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002764:	dd0c      	ble.n	8002780 <HAL_TIM_PeriodElapsedCallback+0x188>
 8002766:	ed97 7a12 	vldr	s14, [r7, #72]	; 0x48
 800276a:	eddf 6a25 	vldr	s13, [pc, #148]	; 8002800 <HAL_TIM_PeriodElapsedCallback+0x208>
 800276e:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8002772:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002776:	ee17 3a90 	vmov	r3, s15
 800277a:	f8a7 3056 	strh.w	r3, [r7, #86]	; 0x56
 800277e:	e007      	b.n	8002790 <HAL_TIM_PeriodElapsedCallback+0x198>
    			pwm_duty=(uint16_t)pwm_duty_f;
 8002780:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 8002784:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002788:	ee17 3a90 	vmov	r3, s15
 800278c:	f8a7 3056 	strh.w	r3, [r7, #86]	; 0x56
    		RezystorTestDrive = pwm_duty;
 8002790:	f8b7 3056 	ldrh.w	r3, [r7, #86]	; 0x56
 8002794:	ee07 3a90 	vmov	s15, r3
 8002798:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800279c:	4b19      	ldr	r3, [pc, #100]	; (8002804 <HAL_TIM_PeriodElapsedCallback+0x20c>)
 800279e:	edc3 7a00 	vstr	s15, [r3]
    		__HAL_TIM_SET_COMPARE(&htim3,TIM_CHANNEL_3,pwm_duty);
 80027a2:	4b19      	ldr	r3, [pc, #100]	; (8002808 <HAL_TIM_PeriodElapsedCallback+0x210>)
 80027a4:	681b      	ldr	r3, [r3, #0]
 80027a6:	f8b7 2056 	ldrh.w	r2, [r7, #86]	; 0x56
 80027aa:	63da      	str	r2, [r3, #60]	; 0x3c
}
 80027ac:	bf00      	nop
 80027ae:	3758      	adds	r7, #88	; 0x58
 80027b0:	46bd      	mov	sp, r7
 80027b2:	bd80      	pop	{r7, pc}
 80027b4:	f3af 8000 	nop.w
 80027b8:	00000000 	.word	0x00000000
 80027bc:	408f3800 	.word	0x408f3800
 80027c0:	200001fc 	.word	0x200001fc
 80027c4:	20000018 	.word	0x20000018
 80027c8:	20000150 	.word	0x20000150
 80027cc:	408f4000 	.word	0x408f4000
 80027d0:	20000158 	.word	0x20000158
 80027d4:	20000190 	.word	0x20000190
 80027d8:	10624dd3 	.word	0x10624dd3
 80027dc:	0800a8c0 	.word	0x0800a8c0
 80027e0:	2000032c 	.word	0x2000032c
 80027e4:	200002e0 	.word	0x200002e0
 80027e8:	2000015c 	.word	0x2000015c
 80027ec:	20000060 	.word	0x20000060
 80027f0:	20000064 	.word	0x20000064
 80027f4:	20000058 	.word	0x20000058
 80027f8:	48127c00 	.word	0x48127c00
 80027fc:	43480000 	.word	0x43480000
 8002800:	44480000 	.word	0x44480000
 8002804:	2000005c 	.word	0x2000005c
 8002808:	20000248 	.word	0x20000248

0800280c <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 800280c:	b580      	push	{r7, lr}
 800280e:	b084      	sub	sp, #16
 8002810:	af00      	add	r7, sp, #0
 8002812:	6078      	str	r0, [r7, #4]
	 int value = strtol((uint8_t*)&UART_zadajnik[0], NULL, 10);
 8002814:	220a      	movs	r2, #10
 8002816:	2100      	movs	r1, #0
 8002818:	4816      	ldr	r0, [pc, #88]	; (8002874 <HAL_UART_RxCpltCallback+0x68>)
 800281a:	f007 fb7d 	bl	8009f18 <strtol>
 800281e:	60f8      	str	r0, [r7, #12]
	 if(value<30){
 8002820:	68fb      	ldr	r3, [r7, #12]
 8002822:	2b1d      	cmp	r3, #29
 8002824:	dc08      	bgt.n	8002838 <HAL_UART_RxCpltCallback+0x2c>
		 zadane_obiektu = value*1000;
 8002826:	68fb      	ldr	r3, [r7, #12]
 8002828:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800282c:	fb02 f303 	mul.w	r3, r2, r3
 8002830:	461a      	mov	r2, r3
 8002832:	4b11      	ldr	r3, [pc, #68]	; (8002878 <HAL_UART_RxCpltCallback+0x6c>)
 8002834:	601a      	str	r2, [r3, #0]
 8002836:	e003      	b.n	8002840 <HAL_UART_RxCpltCallback+0x34>
	 }else{
		 zadane_obiektu = 30000;
 8002838:	4b0f      	ldr	r3, [pc, #60]	; (8002878 <HAL_UART_RxCpltCallback+0x6c>)
 800283a:	f247 5230 	movw	r2, #30000	; 0x7530
 800283e:	601a      	str	r2, [r3, #0]
	 }
	 if(value>19){
 8002840:	68fb      	ldr	r3, [r7, #12]
 8002842:	2b13      	cmp	r3, #19
 8002844:	dd08      	ble.n	8002858 <HAL_UART_RxCpltCallback+0x4c>
		 zadane_obiektu = value*1000;
 8002846:	68fb      	ldr	r3, [r7, #12]
 8002848:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800284c:	fb02 f303 	mul.w	r3, r2, r3
 8002850:	461a      	mov	r2, r3
 8002852:	4b09      	ldr	r3, [pc, #36]	; (8002878 <HAL_UART_RxCpltCallback+0x6c>)
 8002854:	601a      	str	r2, [r3, #0]
 8002856:	e003      	b.n	8002860 <HAL_UART_RxCpltCallback+0x54>
	 }else{
		 zadane_obiektu = 20000;
 8002858:	4b07      	ldr	r3, [pc, #28]	; (8002878 <HAL_UART_RxCpltCallback+0x6c>)
 800285a:	f644 6220 	movw	r2, #20000	; 0x4e20
 800285e:	601a      	str	r2, [r3, #0]
	 }
	 HAL_UART_Receive_IT(&huart3,(uint8_t*)UART_zadajnik , 3);
 8002860:	2203      	movs	r2, #3
 8002862:	4904      	ldr	r1, [pc, #16]	; (8002874 <HAL_UART_RxCpltCallback+0x68>)
 8002864:	4805      	ldr	r0, [pc, #20]	; (800287c <HAL_UART_RxCpltCallback+0x70>)
 8002866:	f006 f80f 	bl	8008888 <HAL_UART_Receive_IT>
//	}
//
//	HAL_UART_Receive_IT(&huart3, UART_zadajnik , 2);


}
 800286a:	bf00      	nop
 800286c:	3710      	adds	r7, #16
 800286e:	46bd      	mov	sp, r7
 8002870:	bd80      	pop	{r7, pc}
 8002872:	bf00      	nop
 8002874:	20000054 	.word	0x20000054
 8002878:	20000060 	.word	0x20000060
 800287c:	2000032c 	.word	0x2000032c

08002880 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8002880:	b580      	push	{r7, lr}
 8002882:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8002884:	f000 fddd 	bl	8003442 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8002888:	f000 f894 	bl	80029b4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800288c:	f7ff fc3a 	bl	8002104 <MX_GPIO_Init>
  MX_USART3_UART_Init();
 8002890:	f000 fd16 	bl	80032c0 <MX_USART3_UART_Init>
  MX_SPI4_Init();
 8002894:	f000 f99e 	bl	8002bd4 <MX_SPI4_Init>
  MX_TIM2_Init();
 8002898:	f000 faf6 	bl	8002e88 <MX_TIM2_Init>
  MX_TIM3_Init();
 800289c:	f000 fb42 	bl	8002f24 <MX_TIM3_Init>
  MX_TIM4_Init();
 80028a0:	f000 fbb8 	bl	8003014 <MX_TIM4_Init>
  MX_TIM7_Init();
 80028a4:	f000 fc0c 	bl	80030c0 <MX_TIM7_Init>
  MX_I2C1_Init();
 80028a8:	f7ff fd58 	bl	800235c <MX_I2C1_Init>
  /* USER CODE BEGIN 2 */
  BMP2_Init(&bmp2dev_1);// inicjalizacja czujnika
 80028ac:	4835      	ldr	r0, [pc, #212]	; (8002984 <main+0x104>)
 80028ae:	f7ff fb0d 	bl	8001ecc <BMP2_Init>
  HAL_TIM_Base_Start_IT(&htim2);// uruchomienie timerow
 80028b2:	4835      	ldr	r0, [pc, #212]	; (8002988 <main+0x108>)
 80028b4:	f004 fd32 	bl	800731c <HAL_TIM_Base_Start_IT>
  HAL_TIM_Base_Start_IT(&htim7);// uruchomienie timerow
 80028b8:	4834      	ldr	r0, [pc, #208]	; (800298c <main+0x10c>)
 80028ba:	f004 fd2f 	bl	800731c <HAL_TIM_Base_Start_IT>
  HAL_TIM_Base_Start_IT(&htim4);// uruchomienie timerow
 80028be:	4834      	ldr	r0, [pc, #208]	; (8002990 <main+0x110>)
 80028c0:	f004 fd2c 	bl	800731c <HAL_TIM_Base_Start_IT>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 80028c4:	2108      	movs	r1, #8
 80028c6:	4833      	ldr	r0, [pc, #204]	; (8002994 <main+0x114>)
 80028c8:	f004 fe02 	bl	80074d0 <HAL_TIM_PWM_Start>
  __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_3, 0);
 80028cc:	4b31      	ldr	r3, [pc, #196]	; (8002994 <main+0x114>)
 80028ce:	681b      	ldr	r3, [r3, #0]
 80028d0:	2200      	movs	r2, #0
 80028d2:	63da      	str	r2, [r3, #60]	; 0x3c
  HAL_UART_Receive_IT(&huart3, UART_zadajnik, 3);
 80028d4:	2203      	movs	r2, #3
 80028d6:	4930      	ldr	r1, [pc, #192]	; (8002998 <main+0x118>)
 80028d8:	4830      	ldr	r0, [pc, #192]	; (800299c <main+0x11c>)
 80028da:	f005 ffd5 	bl	8008888 <HAL_UART_Receive_IT>
  //wyswietlacz
    disp.addr = (0x27 << 1);
 80028de:	4b30      	ldr	r3, [pc, #192]	; (80029a0 <main+0x120>)
 80028e0:	224e      	movs	r2, #78	; 0x4e
 80028e2:	701a      	strb	r2, [r3, #0]
    disp.bl = true;
 80028e4:	4b2e      	ldr	r3, [pc, #184]	; (80029a0 <main+0x120>)
 80028e6:	2201      	movs	r2, #1
 80028e8:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23
    lcd_init(&disp);
 80028ec:	482c      	ldr	r0, [pc, #176]	; (80029a0 <main+0x120>)
 80028ee:	f7ff fde5 	bl	80024bc <lcd_init>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {

	  	  	pulse_count = __HAL_TIM_GET_COUNTER (& htim4 );
 80028f2:	4b27      	ldr	r3, [pc, #156]	; (8002990 <main+0x110>)
 80028f4:	681b      	ldr	r3, [r3, #0]
 80028f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80028f8:	4a2a      	ldr	r2, [pc, #168]	; (80029a4 <main+0x124>)
 80028fa:	6013      	str	r3, [r2, #0]

	     	if(pulse_count > pulse_count_prev){
 80028fc:	4b29      	ldr	r3, [pc, #164]	; (80029a4 <main+0x124>)
 80028fe:	681a      	ldr	r2, [r3, #0]
 8002900:	4b29      	ldr	r3, [pc, #164]	; (80029a8 <main+0x128>)
 8002902:	681b      	ldr	r3, [r3, #0]
 8002904:	429a      	cmp	r2, r3
 8002906:	d918      	bls.n	800293a <main+0xba>
	     	  		  Enc++;
 8002908:	4b28      	ldr	r3, [pc, #160]	; (80029ac <main+0x12c>)
 800290a:	681b      	ldr	r3, [r3, #0]
 800290c:	3301      	adds	r3, #1
 800290e:	4a27      	ldr	r2, [pc, #156]	; (80029ac <main+0x12c>)
 8002910:	6013      	str	r3, [r2, #0]
	     	  		  zadane_obiektu = zadane_obiektu + Enc*1;
 8002912:	4b27      	ldr	r3, [pc, #156]	; (80029b0 <main+0x130>)
 8002914:	681b      	ldr	r3, [r3, #0]
 8002916:	4a25      	ldr	r2, [pc, #148]	; (80029ac <main+0x12c>)
 8002918:	6812      	ldr	r2, [r2, #0]
 800291a:	4413      	add	r3, r2
 800291c:	4a24      	ldr	r2, [pc, #144]	; (80029b0 <main+0x130>)
 800291e:	6013      	str	r3, [r2, #0]
	     	  		  if (zadane_obiektu>30000)zadane_obiektu = 30000;
 8002920:	4b23      	ldr	r3, [pc, #140]	; (80029b0 <main+0x130>)
 8002922:	681b      	ldr	r3, [r3, #0]
 8002924:	f247 5230 	movw	r2, #30000	; 0x7530
 8002928:	4293      	cmp	r3, r2
 800292a:	d903      	bls.n	8002934 <main+0xb4>
 800292c:	4b20      	ldr	r3, [pc, #128]	; (80029b0 <main+0x130>)
 800292e:	f247 5230 	movw	r2, #30000	; 0x7530
 8002932:	601a      	str	r2, [r3, #0]
	     	  		  Enc = 0;
 8002934:	4b1d      	ldr	r3, [pc, #116]	; (80029ac <main+0x12c>)
 8002936:	2200      	movs	r2, #0
 8002938:	601a      	str	r2, [r3, #0]
	     	}
	     	if(pulse_count < pulse_count_prev){
 800293a:	4b1a      	ldr	r3, [pc, #104]	; (80029a4 <main+0x124>)
 800293c:	681a      	ldr	r2, [r3, #0]
 800293e:	4b1a      	ldr	r3, [pc, #104]	; (80029a8 <main+0x128>)
 8002940:	681b      	ldr	r3, [r3, #0]
 8002942:	429a      	cmp	r2, r3
 8002944:	d218      	bcs.n	8002978 <main+0xf8>
	     	  		  Enc++;
 8002946:	4b19      	ldr	r3, [pc, #100]	; (80029ac <main+0x12c>)
 8002948:	681b      	ldr	r3, [r3, #0]
 800294a:	3301      	adds	r3, #1
 800294c:	4a17      	ldr	r2, [pc, #92]	; (80029ac <main+0x12c>)
 800294e:	6013      	str	r3, [r2, #0]
	     	  		  zadane_obiektu = zadane_obiektu - Enc*1;
 8002950:	4b17      	ldr	r3, [pc, #92]	; (80029b0 <main+0x130>)
 8002952:	681b      	ldr	r3, [r3, #0]
 8002954:	4a15      	ldr	r2, [pc, #84]	; (80029ac <main+0x12c>)
 8002956:	6812      	ldr	r2, [r2, #0]
 8002958:	1a9b      	subs	r3, r3, r2
 800295a:	4a15      	ldr	r2, [pc, #84]	; (80029b0 <main+0x130>)
 800295c:	6013      	str	r3, [r2, #0]
	     	  		  if (zadane_obiektu<20000)zadane_obiektu = 35000;
 800295e:	4b14      	ldr	r3, [pc, #80]	; (80029b0 <main+0x130>)
 8002960:	681b      	ldr	r3, [r3, #0]
 8002962:	f644 621f 	movw	r2, #19999	; 0x4e1f
 8002966:	4293      	cmp	r3, r2
 8002968:	d803      	bhi.n	8002972 <main+0xf2>
 800296a:	4b11      	ldr	r3, [pc, #68]	; (80029b0 <main+0x130>)
 800296c:	f648 02b8 	movw	r2, #35000	; 0x88b8
 8002970:	601a      	str	r2, [r3, #0]
	     	  		  Enc = 0;
 8002972:	4b0e      	ldr	r3, [pc, #56]	; (80029ac <main+0x12c>)
 8002974:	2200      	movs	r2, #0
 8002976:	601a      	str	r2, [r3, #0]
	     	}


	     	pulse_count_prev = pulse_count;
 8002978:	4b0a      	ldr	r3, [pc, #40]	; (80029a4 <main+0x124>)
 800297a:	681b      	ldr	r3, [r3, #0]
 800297c:	4a0a      	ldr	r2, [pc, #40]	; (80029a8 <main+0x128>)
 800297e:	6013      	str	r3, [r2, #0]
	  	  	pulse_count = __HAL_TIM_GET_COUNTER (& htim4 );
 8002980:	e7b7      	b.n	80028f2 <main+0x72>
 8002982:	bf00      	nop
 8002984:	20000018 	.word	0x20000018
 8002988:	200001fc 	.word	0x200001fc
 800298c:	200002e0 	.word	0x200002e0
 8002990:	20000294 	.word	0x20000294
 8002994:	20000248 	.word	0x20000248
 8002998:	20000054 	.word	0x20000054
 800299c:	2000032c 	.word	0x2000032c
 80029a0:	2000016c 	.word	0x2000016c
 80029a4:	20000160 	.word	0x20000160
 80029a8:	20000164 	.word	0x20000164
 80029ac:	20000168 	.word	0x20000168
 80029b0:	20000060 	.word	0x20000060

080029b4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80029b4:	b580      	push	{r7, lr}
 80029b6:	b094      	sub	sp, #80	; 0x50
 80029b8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80029ba:	f107 0320 	add.w	r3, r7, #32
 80029be:	2230      	movs	r2, #48	; 0x30
 80029c0:	2100      	movs	r1, #0
 80029c2:	4618      	mov	r0, r3
 80029c4:	f007 fad2 	bl	8009f6c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80029c8:	f107 030c 	add.w	r3, r7, #12
 80029cc:	2200      	movs	r2, #0
 80029ce:	601a      	str	r2, [r3, #0]
 80029d0:	605a      	str	r2, [r3, #4]
 80029d2:	609a      	str	r2, [r3, #8]
 80029d4:	60da      	str	r2, [r3, #12]
 80029d6:	611a      	str	r2, [r3, #16]

  /** Configure LSE Drive Capability
  */
  HAL_PWR_EnableBkUpAccess();
 80029d8:	f002 faba 	bl	8004f50 <HAL_PWR_EnableBkUpAccess>

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80029dc:	4b2a      	ldr	r3, [pc, #168]	; (8002a88 <SystemClock_Config+0xd4>)
 80029de:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80029e0:	4a29      	ldr	r2, [pc, #164]	; (8002a88 <SystemClock_Config+0xd4>)
 80029e2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80029e6:	6413      	str	r3, [r2, #64]	; 0x40
 80029e8:	4b27      	ldr	r3, [pc, #156]	; (8002a88 <SystemClock_Config+0xd4>)
 80029ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80029ec:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80029f0:	60bb      	str	r3, [r7, #8]
 80029f2:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80029f4:	4b25      	ldr	r3, [pc, #148]	; (8002a8c <SystemClock_Config+0xd8>)
 80029f6:	681b      	ldr	r3, [r3, #0]
 80029f8:	4a24      	ldr	r2, [pc, #144]	; (8002a8c <SystemClock_Config+0xd8>)
 80029fa:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80029fe:	6013      	str	r3, [r2, #0]
 8002a00:	4b22      	ldr	r3, [pc, #136]	; (8002a8c <SystemClock_Config+0xd8>)
 8002a02:	681b      	ldr	r3, [r3, #0]
 8002a04:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8002a08:	607b      	str	r3, [r7, #4]
 8002a0a:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8002a0c:	2301      	movs	r3, #1
 8002a0e:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 8002a10:	f44f 23a0 	mov.w	r3, #327680	; 0x50000
 8002a14:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002a16:	2302      	movs	r3, #2
 8002a18:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8002a1a:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8002a1e:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
 8002a20:	2304      	movs	r3, #4
 8002a22:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 216;
 8002a24:	23d8      	movs	r3, #216	; 0xd8
 8002a26:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8002a28:	2302      	movs	r3, #2
 8002a2a:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 3;
 8002a2c:	2303      	movs	r3, #3
 8002a2e:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002a30:	f107 0320 	add.w	r3, r7, #32
 8002a34:	4618      	mov	r0, r3
 8002a36:	f002 faeb 	bl	8005010 <HAL_RCC_OscConfig>
 8002a3a:	4603      	mov	r3, r0
 8002a3c:	2b00      	cmp	r3, #0
 8002a3e:	d001      	beq.n	8002a44 <SystemClock_Config+0x90>
  {
    Error_Handler();
 8002a40:	f000 f826 	bl	8002a90 <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8002a44:	f002 fa94 	bl	8004f70 <HAL_PWREx_EnableOverDrive>
 8002a48:	4603      	mov	r3, r0
 8002a4a:	2b00      	cmp	r3, #0
 8002a4c:	d001      	beq.n	8002a52 <SystemClock_Config+0x9e>
  {
    Error_Handler();
 8002a4e:	f000 f81f 	bl	8002a90 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002a52:	230f      	movs	r3, #15
 8002a54:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002a56:	2302      	movs	r3, #2
 8002a58:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002a5a:	2300      	movs	r3, #0
 8002a5c:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8002a5e:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8002a62:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 8002a64:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8002a68:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 8002a6a:	f107 030c 	add.w	r3, r7, #12
 8002a6e:	2107      	movs	r1, #7
 8002a70:	4618      	mov	r0, r3
 8002a72:	f002 fd71 	bl	8005558 <HAL_RCC_ClockConfig>
 8002a76:	4603      	mov	r3, r0
 8002a78:	2b00      	cmp	r3, #0
 8002a7a:	d001      	beq.n	8002a80 <SystemClock_Config+0xcc>
  {
    Error_Handler();
 8002a7c:	f000 f808 	bl	8002a90 <Error_Handler>
  }
}
 8002a80:	bf00      	nop
 8002a82:	3750      	adds	r7, #80	; 0x50
 8002a84:	46bd      	mov	sp, r7
 8002a86:	bd80      	pop	{r7, pc}
 8002a88:	40023800 	.word	0x40023800
 8002a8c:	40007000 	.word	0x40007000

08002a90 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002a90:	b480      	push	{r7}
 8002a92:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002a94:	b672      	cpsid	i
}
 8002a96:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002a98:	e7fe      	b.n	8002a98 <Error_Handler+0x8>

08002a9a <calculate_discrete_pid>:
 *  Created on: Jan 28, 2024
 *      Author: huber
 */
#include "pid_regulator.h"

float32_t calculate_discrete_pid(pid_t2* pid, float32_t setpoint, float32_t measured){
 8002a9a:	b5b0      	push	{r4, r5, r7, lr}
 8002a9c:	b08c      	sub	sp, #48	; 0x30
 8002a9e:	af00      	add	r7, sp, #0
 8002aa0:	60f8      	str	r0, [r7, #12]
 8002aa2:	ed87 0a02 	vstr	s0, [r7, #8]
 8002aa6:	edc7 0a01 	vstr	s1, [r7, #4]
	float32_t u=0, P, I, D, error, integral, derivative;
 8002aaa:	f04f 0300 	mov.w	r3, #0
 8002aae:	62fb      	str	r3, [r7, #44]	; 0x2c

	error = setpoint-measured;
 8002ab0:	ed97 7a02 	vldr	s14, [r7, #8]
 8002ab4:	edd7 7a01 	vldr	s15, [r7, #4]
 8002ab8:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002abc:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28

	//Moduł proporcjonalny
	P = pid->param.Kp * error;
 8002ac0:	68fb      	ldr	r3, [r7, #12]
 8002ac2:	edd3 7a00 	vldr	s15, [r3]
 8002ac6:	ed97 7a0a 	vldr	s14, [r7, #40]	; 0x28
 8002aca:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002ace:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24

	//Moduł całki
	integral = pid->previous_integral + (error+pid->previous_error) ; //całka numeryczna bez anti-windup
 8002ad2:	68fb      	ldr	r3, [r7, #12]
 8002ad4:	ed93 7a05 	vldr	s14, [r3, #20]
 8002ad8:	68fb      	ldr	r3, [r7, #12]
 8002ada:	edd3 6a04 	vldr	s13, [r3, #16]
 8002ade:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 8002ae2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8002ae6:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002aea:	edc7 7a08 	vstr	s15, [r7, #32]
	pid->previous_integral = integral;
 8002aee:	68fb      	ldr	r3, [r7, #12]
 8002af0:	6a3a      	ldr	r2, [r7, #32]
 8002af2:	615a      	str	r2, [r3, #20]
	I = pid->param.Ki*integral*(pid->param.dt/2.0);
 8002af4:	68fb      	ldr	r3, [r7, #12]
 8002af6:	ed93 7a01 	vldr	s14, [r3, #4]
 8002afa:	edd7 7a08 	vldr	s15, [r7, #32]
 8002afe:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002b02:	ee17 0a90 	vmov	r0, s15
 8002b06:	f7fd fd37 	bl	8000578 <__aeabi_f2d>
 8002b0a:	4604      	mov	r4, r0
 8002b0c:	460d      	mov	r5, r1
 8002b0e:	68fb      	ldr	r3, [r7, #12]
 8002b10:	68db      	ldr	r3, [r3, #12]
 8002b12:	4618      	mov	r0, r3
 8002b14:	f7fd fd30 	bl	8000578 <__aeabi_f2d>
 8002b18:	f04f 0200 	mov.w	r2, #0
 8002b1c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002b20:	f7fd feac 	bl	800087c <__aeabi_ddiv>
 8002b24:	4602      	mov	r2, r0
 8002b26:	460b      	mov	r3, r1
 8002b28:	4620      	mov	r0, r4
 8002b2a:	4629      	mov	r1, r5
 8002b2c:	f7fd fd7c 	bl	8000628 <__aeabi_dmul>
 8002b30:	4602      	mov	r2, r0
 8002b32:	460b      	mov	r3, r1
 8002b34:	4610      	mov	r0, r2
 8002b36:	4619      	mov	r1, r3
 8002b38:	f7fe f838 	bl	8000bac <__aeabi_d2f>
 8002b3c:	4603      	mov	r3, r0
 8002b3e:	61fb      	str	r3, [r7, #28]

	//Różniczka
	derivative = (error - pid->previous_error)/pid->param.dt; //różniczka numeryczna bez without filter
 8002b40:	68fb      	ldr	r3, [r7, #12]
 8002b42:	edd3 7a04 	vldr	s15, [r3, #16]
 8002b46:	ed97 7a0a 	vldr	s14, [r7, #40]	; 0x28
 8002b4a:	ee77 6a67 	vsub.f32	s13, s14, s15
 8002b4e:	68fb      	ldr	r3, [r7, #12]
 8002b50:	ed93 7a03 	vldr	s14, [r3, #12]
 8002b54:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8002b58:	edc7 7a06 	vstr	s15, [r7, #24]
	pid->previous_error = error;
 8002b5c:	68fb      	ldr	r3, [r7, #12]
 8002b5e:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8002b60:	611a      	str	r2, [r3, #16]
	D = pid->param.Kd*derivative;
 8002b62:	68fb      	ldr	r3, [r7, #12]
 8002b64:	edd3 7a02 	vldr	s15, [r3, #8]
 8002b68:	ed97 7a06 	vldr	s14, [r7, #24]
 8002b6c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002b70:	edc7 7a05 	vstr	s15, [r7, #20]

	//sum of all parts
	u = P  + I + D; //without saturation
 8002b74:	ed97 7a09 	vldr	s14, [r7, #36]	; 0x24
 8002b78:	edd7 7a07 	vldr	s15, [r7, #28]
 8002b7c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002b80:	ed97 7a05 	vldr	s14, [r7, #20]
 8002b84:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002b88:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c

	if (u > pid->max_output) {
 8002b8c:	68fb      	ldr	r3, [r7, #12]
 8002b8e:	edd3 7a07 	vldr	s15, [r3, #28]
 8002b92:	ed97 7a0b 	vldr	s14, [r7, #44]	; 0x2c
 8002b96:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002b9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002b9e:	dd03      	ble.n	8002ba8 <calculate_discrete_pid+0x10e>
	    u = pid->max_output;
 8002ba0:	68fb      	ldr	r3, [r7, #12]
 8002ba2:	69db      	ldr	r3, [r3, #28]
 8002ba4:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002ba6:	e00c      	b.n	8002bc2 <calculate_discrete_pid+0x128>
	} else if (u < pid->min_output) {
 8002ba8:	68fb      	ldr	r3, [r7, #12]
 8002baa:	edd3 7a06 	vldr	s15, [r3, #24]
 8002bae:	ed97 7a0b 	vldr	s14, [r7, #44]	; 0x2c
 8002bb2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002bb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002bba:	d502      	bpl.n	8002bc2 <calculate_discrete_pid+0x128>
	    u = pid->min_output;
 8002bbc:	68fb      	ldr	r3, [r7, #12]
 8002bbe:	699b      	ldr	r3, [r3, #24]
 8002bc0:	62fb      	str	r3, [r7, #44]	; 0x2c
	}




	return u;
 8002bc2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002bc4:	ee07 3a90 	vmov	s15, r3
}
 8002bc8:	eeb0 0a67 	vmov.f32	s0, s15
 8002bcc:	3730      	adds	r7, #48	; 0x30
 8002bce:	46bd      	mov	sp, r7
 8002bd0:	bdb0      	pop	{r4, r5, r7, pc}
	...

08002bd4 <MX_SPI4_Init>:

SPI_HandleTypeDef hspi4;

/* SPI4 init function */
void MX_SPI4_Init(void)
{
 8002bd4:	b580      	push	{r7, lr}
 8002bd6:	af00      	add	r7, sp, #0
  /* USER CODE END SPI4_Init 0 */

  /* USER CODE BEGIN SPI4_Init 1 */

  /* USER CODE END SPI4_Init 1 */
  hspi4.Instance = SPI4;
 8002bd8:	4b1b      	ldr	r3, [pc, #108]	; (8002c48 <MX_SPI4_Init+0x74>)
 8002bda:	4a1c      	ldr	r2, [pc, #112]	; (8002c4c <MX_SPI4_Init+0x78>)
 8002bdc:	601a      	str	r2, [r3, #0]
  hspi4.Init.Mode = SPI_MODE_MASTER;
 8002bde:	4b1a      	ldr	r3, [pc, #104]	; (8002c48 <MX_SPI4_Init+0x74>)
 8002be0:	f44f 7282 	mov.w	r2, #260	; 0x104
 8002be4:	605a      	str	r2, [r3, #4]
  hspi4.Init.Direction = SPI_DIRECTION_2LINES;
 8002be6:	4b18      	ldr	r3, [pc, #96]	; (8002c48 <MX_SPI4_Init+0x74>)
 8002be8:	2200      	movs	r2, #0
 8002bea:	609a      	str	r2, [r3, #8]
  hspi4.Init.DataSize = SPI_DATASIZE_8BIT;
 8002bec:	4b16      	ldr	r3, [pc, #88]	; (8002c48 <MX_SPI4_Init+0x74>)
 8002bee:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8002bf2:	60da      	str	r2, [r3, #12]
  hspi4.Init.CLKPolarity = SPI_POLARITY_HIGH;
 8002bf4:	4b14      	ldr	r3, [pc, #80]	; (8002c48 <MX_SPI4_Init+0x74>)
 8002bf6:	2202      	movs	r2, #2
 8002bf8:	611a      	str	r2, [r3, #16]
  hspi4.Init.CLKPhase = SPI_PHASE_2EDGE;
 8002bfa:	4b13      	ldr	r3, [pc, #76]	; (8002c48 <MX_SPI4_Init+0x74>)
 8002bfc:	2201      	movs	r2, #1
 8002bfe:	615a      	str	r2, [r3, #20]
  hspi4.Init.NSS = SPI_NSS_SOFT;
 8002c00:	4b11      	ldr	r3, [pc, #68]	; (8002c48 <MX_SPI4_Init+0x74>)
 8002c02:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002c06:	619a      	str	r2, [r3, #24]
  hspi4.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 8002c08:	4b0f      	ldr	r3, [pc, #60]	; (8002c48 <MX_SPI4_Init+0x74>)
 8002c0a:	2210      	movs	r2, #16
 8002c0c:	61da      	str	r2, [r3, #28]
  hspi4.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8002c0e:	4b0e      	ldr	r3, [pc, #56]	; (8002c48 <MX_SPI4_Init+0x74>)
 8002c10:	2200      	movs	r2, #0
 8002c12:	621a      	str	r2, [r3, #32]
  hspi4.Init.TIMode = SPI_TIMODE_DISABLE;
 8002c14:	4b0c      	ldr	r3, [pc, #48]	; (8002c48 <MX_SPI4_Init+0x74>)
 8002c16:	2200      	movs	r2, #0
 8002c18:	625a      	str	r2, [r3, #36]	; 0x24
  hspi4.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002c1a:	4b0b      	ldr	r3, [pc, #44]	; (8002c48 <MX_SPI4_Init+0x74>)
 8002c1c:	2200      	movs	r2, #0
 8002c1e:	629a      	str	r2, [r3, #40]	; 0x28
  hspi4.Init.CRCPolynomial = 7;
 8002c20:	4b09      	ldr	r3, [pc, #36]	; (8002c48 <MX_SPI4_Init+0x74>)
 8002c22:	2207      	movs	r2, #7
 8002c24:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi4.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 8002c26:	4b08      	ldr	r3, [pc, #32]	; (8002c48 <MX_SPI4_Init+0x74>)
 8002c28:	2200      	movs	r2, #0
 8002c2a:	631a      	str	r2, [r3, #48]	; 0x30
  hspi4.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 8002c2c:	4b06      	ldr	r3, [pc, #24]	; (8002c48 <MX_SPI4_Init+0x74>)
 8002c2e:	2200      	movs	r2, #0
 8002c30:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_SPI_Init(&hspi4) != HAL_OK)
 8002c32:	4805      	ldr	r0, [pc, #20]	; (8002c48 <MX_SPI4_Init+0x74>)
 8002c34:	f003 faa6 	bl	8006184 <HAL_SPI_Init>
 8002c38:	4603      	mov	r3, r0
 8002c3a:	2b00      	cmp	r3, #0
 8002c3c:	d001      	beq.n	8002c42 <MX_SPI4_Init+0x6e>
  {
    Error_Handler();
 8002c3e:	f7ff ff27 	bl	8002a90 <Error_Handler>
  }
  /* USER CODE BEGIN SPI4_Init 2 */

  /* USER CODE END SPI4_Init 2 */

}
 8002c42:	bf00      	nop
 8002c44:	bd80      	pop	{r7, pc}
 8002c46:	bf00      	nop
 8002c48:	20000194 	.word	0x20000194
 8002c4c:	40013400 	.word	0x40013400

08002c50 <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 8002c50:	b580      	push	{r7, lr}
 8002c52:	b08a      	sub	sp, #40	; 0x28
 8002c54:	af00      	add	r7, sp, #0
 8002c56:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002c58:	f107 0314 	add.w	r3, r7, #20
 8002c5c:	2200      	movs	r2, #0
 8002c5e:	601a      	str	r2, [r3, #0]
 8002c60:	605a      	str	r2, [r3, #4]
 8002c62:	609a      	str	r2, [r3, #8]
 8002c64:	60da      	str	r2, [r3, #12]
 8002c66:	611a      	str	r2, [r3, #16]
  if(spiHandle->Instance==SPI4)
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	681b      	ldr	r3, [r3, #0]
 8002c6c:	4a1b      	ldr	r2, [pc, #108]	; (8002cdc <HAL_SPI_MspInit+0x8c>)
 8002c6e:	4293      	cmp	r3, r2
 8002c70:	d12f      	bne.n	8002cd2 <HAL_SPI_MspInit+0x82>
  {
  /* USER CODE BEGIN SPI4_MspInit 0 */

  /* USER CODE END SPI4_MspInit 0 */
    /* SPI4 clock enable */
    __HAL_RCC_SPI4_CLK_ENABLE();
 8002c72:	4b1b      	ldr	r3, [pc, #108]	; (8002ce0 <HAL_SPI_MspInit+0x90>)
 8002c74:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002c76:	4a1a      	ldr	r2, [pc, #104]	; (8002ce0 <HAL_SPI_MspInit+0x90>)
 8002c78:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8002c7c:	6453      	str	r3, [r2, #68]	; 0x44
 8002c7e:	4b18      	ldr	r3, [pc, #96]	; (8002ce0 <HAL_SPI_MspInit+0x90>)
 8002c80:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002c82:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8002c86:	613b      	str	r3, [r7, #16]
 8002c88:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOE_CLK_ENABLE();
 8002c8a:	4b15      	ldr	r3, [pc, #84]	; (8002ce0 <HAL_SPI_MspInit+0x90>)
 8002c8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c8e:	4a14      	ldr	r2, [pc, #80]	; (8002ce0 <HAL_SPI_MspInit+0x90>)
 8002c90:	f043 0310 	orr.w	r3, r3, #16
 8002c94:	6313      	str	r3, [r2, #48]	; 0x30
 8002c96:	4b12      	ldr	r3, [pc, #72]	; (8002ce0 <HAL_SPI_MspInit+0x90>)
 8002c98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c9a:	f003 0310 	and.w	r3, r3, #16
 8002c9e:	60fb      	str	r3, [r7, #12]
 8002ca0:	68fb      	ldr	r3, [r7, #12]
    /**SPI4 GPIO Configuration
    PE2     ------> SPI4_SCK
    PE5     ------> SPI4_MISO
    PE6     ------> SPI4_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_5|GPIO_PIN_6;
 8002ca2:	2364      	movs	r3, #100	; 0x64
 8002ca4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002ca6:	2302      	movs	r3, #2
 8002ca8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002caa:	2300      	movs	r3, #0
 8002cac:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002cae:	2303      	movs	r3, #3
 8002cb0:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI4;
 8002cb2:	2305      	movs	r3, #5
 8002cb4:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002cb6:	f107 0314 	add.w	r3, r7, #20
 8002cba:	4619      	mov	r1, r3
 8002cbc:	4809      	ldr	r0, [pc, #36]	; (8002ce4 <HAL_SPI_MspInit+0x94>)
 8002cbe:	f000 fdf3 	bl	80038a8 <HAL_GPIO_Init>

    /* SPI4 interrupt Init */
    HAL_NVIC_SetPriority(SPI4_IRQn, 0, 0);
 8002cc2:	2200      	movs	r2, #0
 8002cc4:	2100      	movs	r1, #0
 8002cc6:	2054      	movs	r0, #84	; 0x54
 8002cc8:	f000 fd17 	bl	80036fa <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI4_IRQn);
 8002ccc:	2054      	movs	r0, #84	; 0x54
 8002cce:	f000 fd30 	bl	8003732 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN SPI4_MspInit 1 */

  /* USER CODE END SPI4_MspInit 1 */
  }
}
 8002cd2:	bf00      	nop
 8002cd4:	3728      	adds	r7, #40	; 0x28
 8002cd6:	46bd      	mov	sp, r7
 8002cd8:	bd80      	pop	{r7, pc}
 8002cda:	bf00      	nop
 8002cdc:	40013400 	.word	0x40013400
 8002ce0:	40023800 	.word	0x40023800
 8002ce4:	40021000 	.word	0x40021000

08002ce8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002ce8:	b480      	push	{r7}
 8002cea:	b083      	sub	sp, #12
 8002cec:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 8002cee:	4b0f      	ldr	r3, [pc, #60]	; (8002d2c <HAL_MspInit+0x44>)
 8002cf0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002cf2:	4a0e      	ldr	r2, [pc, #56]	; (8002d2c <HAL_MspInit+0x44>)
 8002cf4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002cf8:	6413      	str	r3, [r2, #64]	; 0x40
 8002cfa:	4b0c      	ldr	r3, [pc, #48]	; (8002d2c <HAL_MspInit+0x44>)
 8002cfc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002cfe:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002d02:	607b      	str	r3, [r7, #4]
 8002d04:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002d06:	4b09      	ldr	r3, [pc, #36]	; (8002d2c <HAL_MspInit+0x44>)
 8002d08:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002d0a:	4a08      	ldr	r2, [pc, #32]	; (8002d2c <HAL_MspInit+0x44>)
 8002d0c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002d10:	6453      	str	r3, [r2, #68]	; 0x44
 8002d12:	4b06      	ldr	r3, [pc, #24]	; (8002d2c <HAL_MspInit+0x44>)
 8002d14:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002d16:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002d1a:	603b      	str	r3, [r7, #0]
 8002d1c:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002d1e:	bf00      	nop
 8002d20:	370c      	adds	r7, #12
 8002d22:	46bd      	mov	sp, r7
 8002d24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d28:	4770      	bx	lr
 8002d2a:	bf00      	nop
 8002d2c:	40023800 	.word	0x40023800

08002d30 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002d30:	b480      	push	{r7}
 8002d32:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8002d34:	e7fe      	b.n	8002d34 <NMI_Handler+0x4>

08002d36 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002d36:	b480      	push	{r7}
 8002d38:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002d3a:	e7fe      	b.n	8002d3a <HardFault_Handler+0x4>

08002d3c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002d3c:	b480      	push	{r7}
 8002d3e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002d40:	e7fe      	b.n	8002d40 <MemManage_Handler+0x4>

08002d42 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002d42:	b480      	push	{r7}
 8002d44:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002d46:	e7fe      	b.n	8002d46 <BusFault_Handler+0x4>

08002d48 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002d48:	b480      	push	{r7}
 8002d4a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002d4c:	e7fe      	b.n	8002d4c <UsageFault_Handler+0x4>

08002d4e <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002d4e:	b480      	push	{r7}
 8002d50:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002d52:	bf00      	nop
 8002d54:	46bd      	mov	sp, r7
 8002d56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d5a:	4770      	bx	lr

08002d5c <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002d5c:	b480      	push	{r7}
 8002d5e:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002d60:	bf00      	nop
 8002d62:	46bd      	mov	sp, r7
 8002d64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d68:	4770      	bx	lr

08002d6a <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002d6a:	b480      	push	{r7}
 8002d6c:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002d6e:	bf00      	nop
 8002d70:	46bd      	mov	sp, r7
 8002d72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d76:	4770      	bx	lr

08002d78 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002d78:	b580      	push	{r7, lr}
 8002d7a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002d7c:	f000 fb9e 	bl	80034bc <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002d80:	bf00      	nop
 8002d82:	bd80      	pop	{r7, pc}

08002d84 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8002d84:	b580      	push	{r7, lr}
 8002d86:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8002d88:	4802      	ldr	r0, [pc, #8]	; (8002d94 <TIM2_IRQHandler+0x10>)
 8002d8a:	f004 fd41 	bl	8007810 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8002d8e:	bf00      	nop
 8002d90:	bd80      	pop	{r7, pc}
 8002d92:	bf00      	nop
 8002d94:	200001fc 	.word	0x200001fc

08002d98 <I2C1_EV_IRQHandler>:

/**
  * @brief This function handles I2C1 event interrupt.
  */
void I2C1_EV_IRQHandler(void)
{
 8002d98:	b580      	push	{r7, lr}
 8002d9a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN I2C1_EV_IRQn 0 */

  /* USER CODE END I2C1_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c1);
 8002d9c:	4802      	ldr	r0, [pc, #8]	; (8002da8 <I2C1_EV_IRQHandler+0x10>)
 8002d9e:	f001 f8f1 	bl	8003f84 <HAL_I2C_EV_IRQHandler>
  /* USER CODE BEGIN I2C1_EV_IRQn 1 */

  /* USER CODE END I2C1_EV_IRQn 1 */
}
 8002da2:	bf00      	nop
 8002da4:	bd80      	pop	{r7, pc}
 8002da6:	bf00      	nop
 8002da8:	200000fc 	.word	0x200000fc

08002dac <I2C1_ER_IRQHandler>:

/**
  * @brief This function handles I2C1 error interrupt.
  */
void I2C1_ER_IRQHandler(void)
{
 8002dac:	b580      	push	{r7, lr}
 8002dae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN I2C1_ER_IRQn 0 */

  /* USER CODE END I2C1_ER_IRQn 0 */
  HAL_I2C_ER_IRQHandler(&hi2c1);
 8002db0:	4802      	ldr	r0, [pc, #8]	; (8002dbc <I2C1_ER_IRQHandler+0x10>)
 8002db2:	f001 f901 	bl	8003fb8 <HAL_I2C_ER_IRQHandler>
  /* USER CODE BEGIN I2C1_ER_IRQn 1 */

  /* USER CODE END I2C1_ER_IRQn 1 */
}
 8002db6:	bf00      	nop
 8002db8:	bd80      	pop	{r7, pc}
 8002dba:	bf00      	nop
 8002dbc:	200000fc 	.word	0x200000fc

08002dc0 <USART3_IRQHandler>:

/**
  * @brief This function handles USART3 global interrupt.
  */
void USART3_IRQHandler(void)
{
 8002dc0:	b580      	push	{r7, lr}
 8002dc2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART3_IRQn 0 */

  /* USER CODE END USART3_IRQn 0 */
  HAL_UART_IRQHandler(&huart3);
 8002dc4:	4802      	ldr	r0, [pc, #8]	; (8002dd0 <USART3_IRQHandler+0x10>)
 8002dc6:	f005 fda3 	bl	8008910 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART3_IRQn 1 */

  /* USER CODE END USART3_IRQn 1 */
}
 8002dca:	bf00      	nop
 8002dcc:	bd80      	pop	{r7, pc}
 8002dce:	bf00      	nop
 8002dd0:	2000032c 	.word	0x2000032c

08002dd4 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 8002dd4:	b580      	push	{r7, lr}
 8002dd6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(USER_Btn_Pin);
 8002dd8:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8002ddc:	f000 ff2a 	bl	8003c34 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8002de0:	bf00      	nop
 8002de2:	bd80      	pop	{r7, pc}

08002de4 <SPI4_IRQHandler>:

/**
  * @brief This function handles SPI4 global interrupt.
  */
void SPI4_IRQHandler(void)
{
 8002de4:	b580      	push	{r7, lr}
 8002de6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI4_IRQn 0 */

  /* USER CODE END SPI4_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi4);
 8002de8:	4802      	ldr	r0, [pc, #8]	; (8002df4 <SPI4_IRQHandler+0x10>)
 8002dea:	f003 ff27 	bl	8006c3c <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI4_IRQn 1 */

  /* USER CODE END SPI4_IRQn 1 */
}
 8002dee:	bf00      	nop
 8002df0:	bd80      	pop	{r7, pc}
 8002df2:	bf00      	nop
 8002df4:	20000194 	.word	0x20000194

08002df8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002df8:	b580      	push	{r7, lr}
 8002dfa:	b086      	sub	sp, #24
 8002dfc:	af00      	add	r7, sp, #0
 8002dfe:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002e00:	4a14      	ldr	r2, [pc, #80]	; (8002e54 <_sbrk+0x5c>)
 8002e02:	4b15      	ldr	r3, [pc, #84]	; (8002e58 <_sbrk+0x60>)
 8002e04:	1ad3      	subs	r3, r2, r3
 8002e06:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002e08:	697b      	ldr	r3, [r7, #20]
 8002e0a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002e0c:	4b13      	ldr	r3, [pc, #76]	; (8002e5c <_sbrk+0x64>)
 8002e0e:	681b      	ldr	r3, [r3, #0]
 8002e10:	2b00      	cmp	r3, #0
 8002e12:	d102      	bne.n	8002e1a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002e14:	4b11      	ldr	r3, [pc, #68]	; (8002e5c <_sbrk+0x64>)
 8002e16:	4a12      	ldr	r2, [pc, #72]	; (8002e60 <_sbrk+0x68>)
 8002e18:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002e1a:	4b10      	ldr	r3, [pc, #64]	; (8002e5c <_sbrk+0x64>)
 8002e1c:	681a      	ldr	r2, [r3, #0]
 8002e1e:	687b      	ldr	r3, [r7, #4]
 8002e20:	4413      	add	r3, r2
 8002e22:	693a      	ldr	r2, [r7, #16]
 8002e24:	429a      	cmp	r2, r3
 8002e26:	d207      	bcs.n	8002e38 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002e28:	f007 f8a8 	bl	8009f7c <__errno>
 8002e2c:	4603      	mov	r3, r0
 8002e2e:	220c      	movs	r2, #12
 8002e30:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002e32:	f04f 33ff 	mov.w	r3, #4294967295
 8002e36:	e009      	b.n	8002e4c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002e38:	4b08      	ldr	r3, [pc, #32]	; (8002e5c <_sbrk+0x64>)
 8002e3a:	681b      	ldr	r3, [r3, #0]
 8002e3c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002e3e:	4b07      	ldr	r3, [pc, #28]	; (8002e5c <_sbrk+0x64>)
 8002e40:	681a      	ldr	r2, [r3, #0]
 8002e42:	687b      	ldr	r3, [r7, #4]
 8002e44:	4413      	add	r3, r2
 8002e46:	4a05      	ldr	r2, [pc, #20]	; (8002e5c <_sbrk+0x64>)
 8002e48:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002e4a:	68fb      	ldr	r3, [r7, #12]
}
 8002e4c:	4618      	mov	r0, r3
 8002e4e:	3718      	adds	r7, #24
 8002e50:	46bd      	mov	sp, r7
 8002e52:	bd80      	pop	{r7, pc}
 8002e54:	20050000 	.word	0x20050000
 8002e58:	00000400 	.word	0x00000400
 8002e5c:	200001f8 	.word	0x200001f8
 8002e60:	20000500 	.word	0x20000500

08002e64 <SystemInit>:
  *         SystemFrequency variable.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002e64:	b480      	push	{r7}
 8002e66:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002e68:	4b06      	ldr	r3, [pc, #24]	; (8002e84 <SystemInit+0x20>)
 8002e6a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002e6e:	4a05      	ldr	r2, [pc, #20]	; (8002e84 <SystemInit+0x20>)
 8002e70:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002e74:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002e78:	bf00      	nop
 8002e7a:	46bd      	mov	sp, r7
 8002e7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e80:	4770      	bx	lr
 8002e82:	bf00      	nop
 8002e84:	e000ed00 	.word	0xe000ed00

08002e88 <MX_TIM2_Init>:
TIM_HandleTypeDef htim4;
TIM_HandleTypeDef htim7;

/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8002e88:	b580      	push	{r7, lr}
 8002e8a:	b088      	sub	sp, #32
 8002e8c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002e8e:	f107 0310 	add.w	r3, r7, #16
 8002e92:	2200      	movs	r2, #0
 8002e94:	601a      	str	r2, [r3, #0]
 8002e96:	605a      	str	r2, [r3, #4]
 8002e98:	609a      	str	r2, [r3, #8]
 8002e9a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002e9c:	1d3b      	adds	r3, r7, #4
 8002e9e:	2200      	movs	r2, #0
 8002ea0:	601a      	str	r2, [r3, #0]
 8002ea2:	605a      	str	r2, [r3, #4]
 8002ea4:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8002ea6:	4b1e      	ldr	r3, [pc, #120]	; (8002f20 <MX_TIM2_Init+0x98>)
 8002ea8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002eac:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 107;
 8002eae:	4b1c      	ldr	r3, [pc, #112]	; (8002f20 <MX_TIM2_Init+0x98>)
 8002eb0:	226b      	movs	r2, #107	; 0x6b
 8002eb2:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002eb4:	4b1a      	ldr	r3, [pc, #104]	; (8002f20 <MX_TIM2_Init+0x98>)
 8002eb6:	2200      	movs	r2, #0
 8002eb8:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 24999;
 8002eba:	4b19      	ldr	r3, [pc, #100]	; (8002f20 <MX_TIM2_Init+0x98>)
 8002ebc:	f246 12a7 	movw	r2, #24999	; 0x61a7
 8002ec0:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002ec2:	4b17      	ldr	r3, [pc, #92]	; (8002f20 <MX_TIM2_Init+0x98>)
 8002ec4:	2200      	movs	r2, #0
 8002ec6:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002ec8:	4b15      	ldr	r3, [pc, #84]	; (8002f20 <MX_TIM2_Init+0x98>)
 8002eca:	2200      	movs	r2, #0
 8002ecc:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8002ece:	4814      	ldr	r0, [pc, #80]	; (8002f20 <MX_TIM2_Init+0x98>)
 8002ed0:	f004 f9cc 	bl	800726c <HAL_TIM_Base_Init>
 8002ed4:	4603      	mov	r3, r0
 8002ed6:	2b00      	cmp	r3, #0
 8002ed8:	d001      	beq.n	8002ede <MX_TIM2_Init+0x56>
  {
    Error_Handler();
 8002eda:	f7ff fdd9 	bl	8002a90 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002ede:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002ee2:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8002ee4:	f107 0310 	add.w	r3, r7, #16
 8002ee8:	4619      	mov	r1, r3
 8002eea:	480d      	ldr	r0, [pc, #52]	; (8002f20 <MX_TIM2_Init+0x98>)
 8002eec:	f004 fec4 	bl	8007c78 <HAL_TIM_ConfigClockSource>
 8002ef0:	4603      	mov	r3, r0
 8002ef2:	2b00      	cmp	r3, #0
 8002ef4:	d001      	beq.n	8002efa <MX_TIM2_Init+0x72>
  {
    Error_Handler();
 8002ef6:	f7ff fdcb 	bl	8002a90 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002efa:	2300      	movs	r3, #0
 8002efc:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002efe:	2300      	movs	r3, #0
 8002f00:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8002f02:	1d3b      	adds	r3, r7, #4
 8002f04:	4619      	mov	r1, r3
 8002f06:	4806      	ldr	r0, [pc, #24]	; (8002f20 <MX_TIM2_Init+0x98>)
 8002f08:	f005 fb66 	bl	80085d8 <HAL_TIMEx_MasterConfigSynchronization>
 8002f0c:	4603      	mov	r3, r0
 8002f0e:	2b00      	cmp	r3, #0
 8002f10:	d001      	beq.n	8002f16 <MX_TIM2_Init+0x8e>
  {
    Error_Handler();
 8002f12:	f7ff fdbd 	bl	8002a90 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8002f16:	bf00      	nop
 8002f18:	3720      	adds	r7, #32
 8002f1a:	46bd      	mov	sp, r7
 8002f1c:	bd80      	pop	{r7, pc}
 8002f1e:	bf00      	nop
 8002f20:	200001fc 	.word	0x200001fc

08002f24 <MX_TIM3_Init>:
/* TIM3 init function */
void MX_TIM3_Init(void)
{
 8002f24:	b580      	push	{r7, lr}
 8002f26:	b08e      	sub	sp, #56	; 0x38
 8002f28:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002f2a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8002f2e:	2200      	movs	r2, #0
 8002f30:	601a      	str	r2, [r3, #0]
 8002f32:	605a      	str	r2, [r3, #4]
 8002f34:	609a      	str	r2, [r3, #8]
 8002f36:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002f38:	f107 031c 	add.w	r3, r7, #28
 8002f3c:	2200      	movs	r2, #0
 8002f3e:	601a      	str	r2, [r3, #0]
 8002f40:	605a      	str	r2, [r3, #4]
 8002f42:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8002f44:	463b      	mov	r3, r7
 8002f46:	2200      	movs	r2, #0
 8002f48:	601a      	str	r2, [r3, #0]
 8002f4a:	605a      	str	r2, [r3, #4]
 8002f4c:	609a      	str	r2, [r3, #8]
 8002f4e:	60da      	str	r2, [r3, #12]
 8002f50:	611a      	str	r2, [r3, #16]
 8002f52:	615a      	str	r2, [r3, #20]
 8002f54:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8002f56:	4b2d      	ldr	r3, [pc, #180]	; (800300c <MX_TIM3_Init+0xe8>)
 8002f58:	4a2d      	ldr	r2, [pc, #180]	; (8003010 <MX_TIM3_Init+0xec>)
 8002f5a:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 107;
 8002f5c:	4b2b      	ldr	r3, [pc, #172]	; (800300c <MX_TIM3_Init+0xe8>)
 8002f5e:	226b      	movs	r2, #107	; 0x6b
 8002f60:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002f62:	4b2a      	ldr	r3, [pc, #168]	; (800300c <MX_TIM3_Init+0xe8>)
 8002f64:	2200      	movs	r2, #0
 8002f66:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 999;
 8002f68:	4b28      	ldr	r3, [pc, #160]	; (800300c <MX_TIM3_Init+0xe8>)
 8002f6a:	f240 32e7 	movw	r2, #999	; 0x3e7
 8002f6e:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002f70:	4b26      	ldr	r3, [pc, #152]	; (800300c <MX_TIM3_Init+0xe8>)
 8002f72:	2200      	movs	r2, #0
 8002f74:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002f76:	4b25      	ldr	r3, [pc, #148]	; (800300c <MX_TIM3_Init+0xe8>)
 8002f78:	2200      	movs	r2, #0
 8002f7a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8002f7c:	4823      	ldr	r0, [pc, #140]	; (800300c <MX_TIM3_Init+0xe8>)
 8002f7e:	f004 f975 	bl	800726c <HAL_TIM_Base_Init>
 8002f82:	4603      	mov	r3, r0
 8002f84:	2b00      	cmp	r3, #0
 8002f86:	d001      	beq.n	8002f8c <MX_TIM3_Init+0x68>
  {
    Error_Handler();
 8002f88:	f7ff fd82 	bl	8002a90 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002f8c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002f90:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8002f92:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8002f96:	4619      	mov	r1, r3
 8002f98:	481c      	ldr	r0, [pc, #112]	; (800300c <MX_TIM3_Init+0xe8>)
 8002f9a:	f004 fe6d 	bl	8007c78 <HAL_TIM_ConfigClockSource>
 8002f9e:	4603      	mov	r3, r0
 8002fa0:	2b00      	cmp	r3, #0
 8002fa2:	d001      	beq.n	8002fa8 <MX_TIM3_Init+0x84>
  {
    Error_Handler();
 8002fa4:	f7ff fd74 	bl	8002a90 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8002fa8:	4818      	ldr	r0, [pc, #96]	; (800300c <MX_TIM3_Init+0xe8>)
 8002faa:	f004 fa2f 	bl	800740c <HAL_TIM_PWM_Init>
 8002fae:	4603      	mov	r3, r0
 8002fb0:	2b00      	cmp	r3, #0
 8002fb2:	d001      	beq.n	8002fb8 <MX_TIM3_Init+0x94>
  {
    Error_Handler();
 8002fb4:	f7ff fd6c 	bl	8002a90 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002fb8:	2300      	movs	r3, #0
 8002fba:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002fbc:	2300      	movs	r3, #0
 8002fbe:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8002fc0:	f107 031c 	add.w	r3, r7, #28
 8002fc4:	4619      	mov	r1, r3
 8002fc6:	4811      	ldr	r0, [pc, #68]	; (800300c <MX_TIM3_Init+0xe8>)
 8002fc8:	f005 fb06 	bl	80085d8 <HAL_TIMEx_MasterConfigSynchronization>
 8002fcc:	4603      	mov	r3, r0
 8002fce:	2b00      	cmp	r3, #0
 8002fd0:	d001      	beq.n	8002fd6 <MX_TIM3_Init+0xb2>
  {
    Error_Handler();
 8002fd2:	f7ff fd5d 	bl	8002a90 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8002fd6:	2360      	movs	r3, #96	; 0x60
 8002fd8:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 500;
 8002fda:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8002fde:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002fe0:	2300      	movs	r3, #0
 8002fe2:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002fe4:	2300      	movs	r3, #0
 8002fe6:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8002fe8:	463b      	mov	r3, r7
 8002fea:	2208      	movs	r2, #8
 8002fec:	4619      	mov	r1, r3
 8002fee:	4807      	ldr	r0, [pc, #28]	; (800300c <MX_TIM3_Init+0xe8>)
 8002ff0:	f004 fd2e 	bl	8007a50 <HAL_TIM_PWM_ConfigChannel>
 8002ff4:	4603      	mov	r3, r0
 8002ff6:	2b00      	cmp	r3, #0
 8002ff8:	d001      	beq.n	8002ffe <MX_TIM3_Init+0xda>
  {
    Error_Handler();
 8002ffa:	f7ff fd49 	bl	8002a90 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8002ffe:	4803      	ldr	r0, [pc, #12]	; (800300c <MX_TIM3_Init+0xe8>)
 8003000:	f000 f926 	bl	8003250 <HAL_TIM_MspPostInit>

}
 8003004:	bf00      	nop
 8003006:	3738      	adds	r7, #56	; 0x38
 8003008:	46bd      	mov	sp, r7
 800300a:	bd80      	pop	{r7, pc}
 800300c:	20000248 	.word	0x20000248
 8003010:	40000400 	.word	0x40000400

08003014 <MX_TIM4_Init>:
/* TIM4 init function */
void MX_TIM4_Init(void)
{
 8003014:	b580      	push	{r7, lr}
 8003016:	b08c      	sub	sp, #48	; 0x30
 8003018:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 800301a:	f107 030c 	add.w	r3, r7, #12
 800301e:	2224      	movs	r2, #36	; 0x24
 8003020:	2100      	movs	r1, #0
 8003022:	4618      	mov	r0, r3
 8003024:	f006 ffa2 	bl	8009f6c <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003028:	463b      	mov	r3, r7
 800302a:	2200      	movs	r2, #0
 800302c:	601a      	str	r2, [r3, #0]
 800302e:	605a      	str	r2, [r3, #4]
 8003030:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8003032:	4b21      	ldr	r3, [pc, #132]	; (80030b8 <MX_TIM4_Init+0xa4>)
 8003034:	4a21      	ldr	r2, [pc, #132]	; (80030bc <MX_TIM4_Init+0xa8>)
 8003036:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 8003038:	4b1f      	ldr	r3, [pc, #124]	; (80030b8 <MX_TIM4_Init+0xa4>)
 800303a:	2200      	movs	r2, #0
 800303c:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 800303e:	4b1e      	ldr	r3, [pc, #120]	; (80030b8 <MX_TIM4_Init+0xa4>)
 8003040:	2200      	movs	r2, #0
 8003042:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 1000;
 8003044:	4b1c      	ldr	r3, [pc, #112]	; (80030b8 <MX_TIM4_Init+0xa4>)
 8003046:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800304a:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800304c:	4b1a      	ldr	r3, [pc, #104]	; (80030b8 <MX_TIM4_Init+0xa4>)
 800304e:	2200      	movs	r2, #0
 8003050:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8003052:	4b19      	ldr	r3, [pc, #100]	; (80030b8 <MX_TIM4_Init+0xa4>)
 8003054:	2200      	movs	r2, #0
 8003056:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 8003058:	2303      	movs	r3, #3
 800305a:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 800305c:	2300      	movs	r3, #0
 800305e:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8003060:	2301      	movs	r3, #1
 8003062:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8003064:	2300      	movs	r3, #0
 8003066:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 8003068:	2300      	movs	r3, #0
 800306a:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 800306c:	2300      	movs	r3, #0
 800306e:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8003070:	2301      	movs	r3, #1
 8003072:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8003074:	2300      	movs	r3, #0
 8003076:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 0;
 8003078:	2300      	movs	r3, #0
 800307a:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 800307c:	f107 030c 	add.w	r3, r7, #12
 8003080:	4619      	mov	r1, r3
 8003082:	480d      	ldr	r0, [pc, #52]	; (80030b8 <MX_TIM4_Init+0xa4>)
 8003084:	f004 fb1e 	bl	80076c4 <HAL_TIM_Encoder_Init>
 8003088:	4603      	mov	r3, r0
 800308a:	2b00      	cmp	r3, #0
 800308c:	d001      	beq.n	8003092 <MX_TIM4_Init+0x7e>
  {
    Error_Handler();
 800308e:	f7ff fcff 	bl	8002a90 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8003092:	2300      	movs	r3, #0
 8003094:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003096:	2300      	movs	r3, #0
 8003098:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 800309a:	463b      	mov	r3, r7
 800309c:	4619      	mov	r1, r3
 800309e:	4806      	ldr	r0, [pc, #24]	; (80030b8 <MX_TIM4_Init+0xa4>)
 80030a0:	f005 fa9a 	bl	80085d8 <HAL_TIMEx_MasterConfigSynchronization>
 80030a4:	4603      	mov	r3, r0
 80030a6:	2b00      	cmp	r3, #0
 80030a8:	d001      	beq.n	80030ae <MX_TIM4_Init+0x9a>
  {
    Error_Handler();
 80030aa:	f7ff fcf1 	bl	8002a90 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 80030ae:	bf00      	nop
 80030b0:	3730      	adds	r7, #48	; 0x30
 80030b2:	46bd      	mov	sp, r7
 80030b4:	bd80      	pop	{r7, pc}
 80030b6:	bf00      	nop
 80030b8:	20000294 	.word	0x20000294
 80030bc:	40000800 	.word	0x40000800

080030c0 <MX_TIM7_Init>:
/* TIM7 init function */
void MX_TIM7_Init(void)
{
 80030c0:	b580      	push	{r7, lr}
 80030c2:	b084      	sub	sp, #16
 80030c4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM7_Init 0 */

  /* USER CODE END TIM7_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80030c6:	1d3b      	adds	r3, r7, #4
 80030c8:	2200      	movs	r2, #0
 80030ca:	601a      	str	r2, [r3, #0]
 80030cc:	605a      	str	r2, [r3, #4]
 80030ce:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM7_Init 1 */

  /* USER CODE END TIM7_Init 1 */
  htim7.Instance = TIM7;
 80030d0:	4b15      	ldr	r3, [pc, #84]	; (8003128 <MX_TIM7_Init+0x68>)
 80030d2:	4a16      	ldr	r2, [pc, #88]	; (800312c <MX_TIM7_Init+0x6c>)
 80030d4:	601a      	str	r2, [r3, #0]
  htim7.Init.Prescaler = 10799;
 80030d6:	4b14      	ldr	r3, [pc, #80]	; (8003128 <MX_TIM7_Init+0x68>)
 80030d8:	f642 222f 	movw	r2, #10799	; 0x2a2f
 80030dc:	605a      	str	r2, [r3, #4]
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 80030de:	4b12      	ldr	r3, [pc, #72]	; (8003128 <MX_TIM7_Init+0x68>)
 80030e0:	2200      	movs	r2, #0
 80030e2:	609a      	str	r2, [r3, #8]
  htim7.Init.Period = 9999;
 80030e4:	4b10      	ldr	r3, [pc, #64]	; (8003128 <MX_TIM7_Init+0x68>)
 80030e6:	f242 720f 	movw	r2, #9999	; 0x270f
 80030ea:	60da      	str	r2, [r3, #12]
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80030ec:	4b0e      	ldr	r3, [pc, #56]	; (8003128 <MX_TIM7_Init+0x68>)
 80030ee:	2200      	movs	r2, #0
 80030f0:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 80030f2:	480d      	ldr	r0, [pc, #52]	; (8003128 <MX_TIM7_Init+0x68>)
 80030f4:	f004 f8ba 	bl	800726c <HAL_TIM_Base_Init>
 80030f8:	4603      	mov	r3, r0
 80030fa:	2b00      	cmp	r3, #0
 80030fc:	d001      	beq.n	8003102 <MX_TIM7_Init+0x42>
  {
    Error_Handler();
 80030fe:	f7ff fcc7 	bl	8002a90 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8003102:	2300      	movs	r3, #0
 8003104:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003106:	2300      	movs	r3, #0
 8003108:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 800310a:	1d3b      	adds	r3, r7, #4
 800310c:	4619      	mov	r1, r3
 800310e:	4806      	ldr	r0, [pc, #24]	; (8003128 <MX_TIM7_Init+0x68>)
 8003110:	f005 fa62 	bl	80085d8 <HAL_TIMEx_MasterConfigSynchronization>
 8003114:	4603      	mov	r3, r0
 8003116:	2b00      	cmp	r3, #0
 8003118:	d001      	beq.n	800311e <MX_TIM7_Init+0x5e>
  {
    Error_Handler();
 800311a:	f7ff fcb9 	bl	8002a90 <Error_Handler>
  }
  /* USER CODE BEGIN TIM7_Init 2 */

  /* USER CODE END TIM7_Init 2 */

}
 800311e:	bf00      	nop
 8003120:	3710      	adds	r7, #16
 8003122:	46bd      	mov	sp, r7
 8003124:	bd80      	pop	{r7, pc}
 8003126:	bf00      	nop
 8003128:	200002e0 	.word	0x200002e0
 800312c:	40001400 	.word	0x40001400

08003130 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8003130:	b580      	push	{r7, lr}
 8003132:	b086      	sub	sp, #24
 8003134:	af00      	add	r7, sp, #0
 8003136:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM2)
 8003138:	687b      	ldr	r3, [r7, #4]
 800313a:	681b      	ldr	r3, [r3, #0]
 800313c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003140:	d114      	bne.n	800316c <HAL_TIM_Base_MspInit+0x3c>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8003142:	4b1e      	ldr	r3, [pc, #120]	; (80031bc <HAL_TIM_Base_MspInit+0x8c>)
 8003144:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003146:	4a1d      	ldr	r2, [pc, #116]	; (80031bc <HAL_TIM_Base_MspInit+0x8c>)
 8003148:	f043 0301 	orr.w	r3, r3, #1
 800314c:	6413      	str	r3, [r2, #64]	; 0x40
 800314e:	4b1b      	ldr	r3, [pc, #108]	; (80031bc <HAL_TIM_Base_MspInit+0x8c>)
 8003150:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003152:	f003 0301 	and.w	r3, r3, #1
 8003156:	617b      	str	r3, [r7, #20]
 8003158:	697b      	ldr	r3, [r7, #20]

    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 800315a:	2200      	movs	r2, #0
 800315c:	2100      	movs	r1, #0
 800315e:	201c      	movs	r0, #28
 8003160:	f000 facb 	bl	80036fa <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8003164:	201c      	movs	r0, #28
 8003166:	f000 fae4 	bl	8003732 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_TIM7_CLK_ENABLE();
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }
}
 800316a:	e022      	b.n	80031b2 <HAL_TIM_Base_MspInit+0x82>
  else if(tim_baseHandle->Instance==TIM3)
 800316c:	687b      	ldr	r3, [r7, #4]
 800316e:	681b      	ldr	r3, [r3, #0]
 8003170:	4a13      	ldr	r2, [pc, #76]	; (80031c0 <HAL_TIM_Base_MspInit+0x90>)
 8003172:	4293      	cmp	r3, r2
 8003174:	d10c      	bne.n	8003190 <HAL_TIM_Base_MspInit+0x60>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8003176:	4b11      	ldr	r3, [pc, #68]	; (80031bc <HAL_TIM_Base_MspInit+0x8c>)
 8003178:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800317a:	4a10      	ldr	r2, [pc, #64]	; (80031bc <HAL_TIM_Base_MspInit+0x8c>)
 800317c:	f043 0302 	orr.w	r3, r3, #2
 8003180:	6413      	str	r3, [r2, #64]	; 0x40
 8003182:	4b0e      	ldr	r3, [pc, #56]	; (80031bc <HAL_TIM_Base_MspInit+0x8c>)
 8003184:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003186:	f003 0302 	and.w	r3, r3, #2
 800318a:	613b      	str	r3, [r7, #16]
 800318c:	693b      	ldr	r3, [r7, #16]
}
 800318e:	e010      	b.n	80031b2 <HAL_TIM_Base_MspInit+0x82>
  else if(tim_baseHandle->Instance==TIM7)
 8003190:	687b      	ldr	r3, [r7, #4]
 8003192:	681b      	ldr	r3, [r3, #0]
 8003194:	4a0b      	ldr	r2, [pc, #44]	; (80031c4 <HAL_TIM_Base_MspInit+0x94>)
 8003196:	4293      	cmp	r3, r2
 8003198:	d10b      	bne.n	80031b2 <HAL_TIM_Base_MspInit+0x82>
    __HAL_RCC_TIM7_CLK_ENABLE();
 800319a:	4b08      	ldr	r3, [pc, #32]	; (80031bc <HAL_TIM_Base_MspInit+0x8c>)
 800319c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800319e:	4a07      	ldr	r2, [pc, #28]	; (80031bc <HAL_TIM_Base_MspInit+0x8c>)
 80031a0:	f043 0320 	orr.w	r3, r3, #32
 80031a4:	6413      	str	r3, [r2, #64]	; 0x40
 80031a6:	4b05      	ldr	r3, [pc, #20]	; (80031bc <HAL_TIM_Base_MspInit+0x8c>)
 80031a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80031aa:	f003 0320 	and.w	r3, r3, #32
 80031ae:	60fb      	str	r3, [r7, #12]
 80031b0:	68fb      	ldr	r3, [r7, #12]
}
 80031b2:	bf00      	nop
 80031b4:	3718      	adds	r7, #24
 80031b6:	46bd      	mov	sp, r7
 80031b8:	bd80      	pop	{r7, pc}
 80031ba:	bf00      	nop
 80031bc:	40023800 	.word	0x40023800
 80031c0:	40000400 	.word	0x40000400
 80031c4:	40001400 	.word	0x40001400

080031c8 <HAL_TIM_Encoder_MspInit>:

void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* tim_encoderHandle)
{
 80031c8:	b580      	push	{r7, lr}
 80031ca:	b08a      	sub	sp, #40	; 0x28
 80031cc:	af00      	add	r7, sp, #0
 80031ce:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80031d0:	f107 0314 	add.w	r3, r7, #20
 80031d4:	2200      	movs	r2, #0
 80031d6:	601a      	str	r2, [r3, #0]
 80031d8:	605a      	str	r2, [r3, #4]
 80031da:	609a      	str	r2, [r3, #8]
 80031dc:	60da      	str	r2, [r3, #12]
 80031de:	611a      	str	r2, [r3, #16]
  if(tim_encoderHandle->Instance==TIM4)
 80031e0:	687b      	ldr	r3, [r7, #4]
 80031e2:	681b      	ldr	r3, [r3, #0]
 80031e4:	4a17      	ldr	r2, [pc, #92]	; (8003244 <HAL_TIM_Encoder_MspInit+0x7c>)
 80031e6:	4293      	cmp	r3, r2
 80031e8:	d128      	bne.n	800323c <HAL_TIM_Encoder_MspInit+0x74>
  {
  /* USER CODE BEGIN TIM4_MspInit 0 */

  /* USER CODE END TIM4_MspInit 0 */
    /* TIM4 clock enable */
    __HAL_RCC_TIM4_CLK_ENABLE();
 80031ea:	4b17      	ldr	r3, [pc, #92]	; (8003248 <HAL_TIM_Encoder_MspInit+0x80>)
 80031ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80031ee:	4a16      	ldr	r2, [pc, #88]	; (8003248 <HAL_TIM_Encoder_MspInit+0x80>)
 80031f0:	f043 0304 	orr.w	r3, r3, #4
 80031f4:	6413      	str	r3, [r2, #64]	; 0x40
 80031f6:	4b14      	ldr	r3, [pc, #80]	; (8003248 <HAL_TIM_Encoder_MspInit+0x80>)
 80031f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80031fa:	f003 0304 	and.w	r3, r3, #4
 80031fe:	613b      	str	r3, [r7, #16]
 8003200:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOD_CLK_ENABLE();
 8003202:	4b11      	ldr	r3, [pc, #68]	; (8003248 <HAL_TIM_Encoder_MspInit+0x80>)
 8003204:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003206:	4a10      	ldr	r2, [pc, #64]	; (8003248 <HAL_TIM_Encoder_MspInit+0x80>)
 8003208:	f043 0308 	orr.w	r3, r3, #8
 800320c:	6313      	str	r3, [r2, #48]	; 0x30
 800320e:	4b0e      	ldr	r3, [pc, #56]	; (8003248 <HAL_TIM_Encoder_MspInit+0x80>)
 8003210:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003212:	f003 0308 	and.w	r3, r3, #8
 8003216:	60fb      	str	r3, [r7, #12]
 8003218:	68fb      	ldr	r3, [r7, #12]
    /**TIM4 GPIO Configuration
    PD12     ------> TIM4_CH1
    PD13     ------> TIM4_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 800321a:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 800321e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003220:	2302      	movs	r3, #2
 8003222:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003224:	2300      	movs	r3, #0
 8003226:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003228:	2300      	movs	r3, #0
 800322a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 800322c:	2302      	movs	r3, #2
 800322e:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8003230:	f107 0314 	add.w	r3, r7, #20
 8003234:	4619      	mov	r1, r3
 8003236:	4805      	ldr	r0, [pc, #20]	; (800324c <HAL_TIM_Encoder_MspInit+0x84>)
 8003238:	f000 fb36 	bl	80038a8 <HAL_GPIO_Init>

  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }
}
 800323c:	bf00      	nop
 800323e:	3728      	adds	r7, #40	; 0x28
 8003240:	46bd      	mov	sp, r7
 8003242:	bd80      	pop	{r7, pc}
 8003244:	40000800 	.word	0x40000800
 8003248:	40023800 	.word	0x40023800
 800324c:	40020c00 	.word	0x40020c00

08003250 <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 8003250:	b580      	push	{r7, lr}
 8003252:	b088      	sub	sp, #32
 8003254:	af00      	add	r7, sp, #0
 8003256:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003258:	f107 030c 	add.w	r3, r7, #12
 800325c:	2200      	movs	r2, #0
 800325e:	601a      	str	r2, [r3, #0]
 8003260:	605a      	str	r2, [r3, #4]
 8003262:	609a      	str	r2, [r3, #8]
 8003264:	60da      	str	r2, [r3, #12]
 8003266:	611a      	str	r2, [r3, #16]
  if(timHandle->Instance==TIM3)
 8003268:	687b      	ldr	r3, [r7, #4]
 800326a:	681b      	ldr	r3, [r3, #0]
 800326c:	4a11      	ldr	r2, [pc, #68]	; (80032b4 <HAL_TIM_MspPostInit+0x64>)
 800326e:	4293      	cmp	r3, r2
 8003270:	d11c      	bne.n	80032ac <HAL_TIM_MspPostInit+0x5c>
  {
  /* USER CODE BEGIN TIM3_MspPostInit 0 */

  /* USER CODE END TIM3_MspPostInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8003272:	4b11      	ldr	r3, [pc, #68]	; (80032b8 <HAL_TIM_MspPostInit+0x68>)
 8003274:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003276:	4a10      	ldr	r2, [pc, #64]	; (80032b8 <HAL_TIM_MspPostInit+0x68>)
 8003278:	f043 0304 	orr.w	r3, r3, #4
 800327c:	6313      	str	r3, [r2, #48]	; 0x30
 800327e:	4b0e      	ldr	r3, [pc, #56]	; (80032b8 <HAL_TIM_MspPostInit+0x68>)
 8003280:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003282:	f003 0304 	and.w	r3, r3, #4
 8003286:	60bb      	str	r3, [r7, #8]
 8003288:	68bb      	ldr	r3, [r7, #8]
    /**TIM3 GPIO Configuration
    PC8     ------> TIM3_CH3
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 800328a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800328e:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003290:	2302      	movs	r3, #2
 8003292:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003294:	2300      	movs	r3, #0
 8003296:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003298:	2300      	movs	r3, #0
 800329a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 800329c:	2302      	movs	r3, #2
 800329e:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80032a0:	f107 030c 	add.w	r3, r7, #12
 80032a4:	4619      	mov	r1, r3
 80032a6:	4805      	ldr	r0, [pc, #20]	; (80032bc <HAL_TIM_MspPostInit+0x6c>)
 80032a8:	f000 fafe 	bl	80038a8 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 80032ac:	bf00      	nop
 80032ae:	3720      	adds	r7, #32
 80032b0:	46bd      	mov	sp, r7
 80032b2:	bd80      	pop	{r7, pc}
 80032b4:	40000400 	.word	0x40000400
 80032b8:	40023800 	.word	0x40023800
 80032bc:	40020800 	.word	0x40020800

080032c0 <MX_USART3_UART_Init>:
UART_HandleTypeDef huart3;

/* USART3 init function */

void MX_USART3_UART_Init(void)
{
 80032c0:	b580      	push	{r7, lr}
 80032c2:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 80032c4:	4b14      	ldr	r3, [pc, #80]	; (8003318 <MX_USART3_UART_Init+0x58>)
 80032c6:	4a15      	ldr	r2, [pc, #84]	; (800331c <MX_USART3_UART_Init+0x5c>)
 80032c8:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 9600;
 80032ca:	4b13      	ldr	r3, [pc, #76]	; (8003318 <MX_USART3_UART_Init+0x58>)
 80032cc:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 80032d0:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 80032d2:	4b11      	ldr	r3, [pc, #68]	; (8003318 <MX_USART3_UART_Init+0x58>)
 80032d4:	2200      	movs	r2, #0
 80032d6:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 80032d8:	4b0f      	ldr	r3, [pc, #60]	; (8003318 <MX_USART3_UART_Init+0x58>)
 80032da:	2200      	movs	r2, #0
 80032dc:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 80032de:	4b0e      	ldr	r3, [pc, #56]	; (8003318 <MX_USART3_UART_Init+0x58>)
 80032e0:	2200      	movs	r2, #0
 80032e2:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 80032e4:	4b0c      	ldr	r3, [pc, #48]	; (8003318 <MX_USART3_UART_Init+0x58>)
 80032e6:	220c      	movs	r2, #12
 80032e8:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80032ea:	4b0b      	ldr	r3, [pc, #44]	; (8003318 <MX_USART3_UART_Init+0x58>)
 80032ec:	2200      	movs	r2, #0
 80032ee:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 80032f0:	4b09      	ldr	r3, [pc, #36]	; (8003318 <MX_USART3_UART_Init+0x58>)
 80032f2:	2200      	movs	r2, #0
 80032f4:	61da      	str	r2, [r3, #28]
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80032f6:	4b08      	ldr	r3, [pc, #32]	; (8003318 <MX_USART3_UART_Init+0x58>)
 80032f8:	2200      	movs	r2, #0
 80032fa:	621a      	str	r2, [r3, #32]
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80032fc:	4b06      	ldr	r3, [pc, #24]	; (8003318 <MX_USART3_UART_Init+0x58>)
 80032fe:	2200      	movs	r2, #0
 8003300:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8003302:	4805      	ldr	r0, [pc, #20]	; (8003318 <MX_USART3_UART_Init+0x58>)
 8003304:	f005 fa14 	bl	8008730 <HAL_UART_Init>
 8003308:	4603      	mov	r3, r0
 800330a:	2b00      	cmp	r3, #0
 800330c:	d001      	beq.n	8003312 <MX_USART3_UART_Init+0x52>
  {
    Error_Handler();
 800330e:	f7ff fbbf 	bl	8002a90 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 8003312:	bf00      	nop
 8003314:	bd80      	pop	{r7, pc}
 8003316:	bf00      	nop
 8003318:	2000032c 	.word	0x2000032c
 800331c:	40004800 	.word	0x40004800

08003320 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8003320:	b580      	push	{r7, lr}
 8003322:	b0aa      	sub	sp, #168	; 0xa8
 8003324:	af00      	add	r7, sp, #0
 8003326:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003328:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800332c:	2200      	movs	r2, #0
 800332e:	601a      	str	r2, [r3, #0]
 8003330:	605a      	str	r2, [r3, #4]
 8003332:	609a      	str	r2, [r3, #8]
 8003334:	60da      	str	r2, [r3, #12]
 8003336:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8003338:	f107 0310 	add.w	r3, r7, #16
 800333c:	2284      	movs	r2, #132	; 0x84
 800333e:	2100      	movs	r1, #0
 8003340:	4618      	mov	r0, r3
 8003342:	f006 fe13 	bl	8009f6c <memset>
  if(uartHandle->Instance==USART3)
 8003346:	687b      	ldr	r3, [r7, #4]
 8003348:	681b      	ldr	r3, [r3, #0]
 800334a:	4a26      	ldr	r2, [pc, #152]	; (80033e4 <HAL_UART_MspInit+0xc4>)
 800334c:	4293      	cmp	r3, r2
 800334e:	d144      	bne.n	80033da <HAL_UART_MspInit+0xba>

  /* USER CODE END USART3_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3;
 8003350:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003354:	613b      	str	r3, [r7, #16]
    PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 8003356:	2300      	movs	r3, #0
 8003358:	65fb      	str	r3, [r7, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800335a:	f107 0310 	add.w	r3, r7, #16
 800335e:	4618      	mov	r0, r3
 8003360:	f002 fb20 	bl	80059a4 <HAL_RCCEx_PeriphCLKConfig>
 8003364:	4603      	mov	r3, r0
 8003366:	2b00      	cmp	r3, #0
 8003368:	d001      	beq.n	800336e <HAL_UART_MspInit+0x4e>
    {
      Error_Handler();
 800336a:	f7ff fb91 	bl	8002a90 <Error_Handler>
    }

    /* USART3 clock enable */
    __HAL_RCC_USART3_CLK_ENABLE();
 800336e:	4b1e      	ldr	r3, [pc, #120]	; (80033e8 <HAL_UART_MspInit+0xc8>)
 8003370:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003372:	4a1d      	ldr	r2, [pc, #116]	; (80033e8 <HAL_UART_MspInit+0xc8>)
 8003374:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8003378:	6413      	str	r3, [r2, #64]	; 0x40
 800337a:	4b1b      	ldr	r3, [pc, #108]	; (80033e8 <HAL_UART_MspInit+0xc8>)
 800337c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800337e:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003382:	60fb      	str	r3, [r7, #12]
 8003384:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOD_CLK_ENABLE();
 8003386:	4b18      	ldr	r3, [pc, #96]	; (80033e8 <HAL_UART_MspInit+0xc8>)
 8003388:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800338a:	4a17      	ldr	r2, [pc, #92]	; (80033e8 <HAL_UART_MspInit+0xc8>)
 800338c:	f043 0308 	orr.w	r3, r3, #8
 8003390:	6313      	str	r3, [r2, #48]	; 0x30
 8003392:	4b15      	ldr	r3, [pc, #84]	; (80033e8 <HAL_UART_MspInit+0xc8>)
 8003394:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003396:	f003 0308 	and.w	r3, r3, #8
 800339a:	60bb      	str	r3, [r7, #8]
 800339c:	68bb      	ldr	r3, [r7, #8]
    /**USART3 GPIO Configuration
    PD8     ------> USART3_TX
    PD9     ------> USART3_RX
    */
    GPIO_InitStruct.Pin = STLK_RX_Pin|STLK_TX_Pin;
 800339e:	f44f 7340 	mov.w	r3, #768	; 0x300
 80033a2:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80033a6:	2302      	movs	r3, #2
 80033a8:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 80033ac:	2301      	movs	r3, #1
 80033ae:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80033b2:	2303      	movs	r3, #3
 80033b4:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 80033b8:	2307      	movs	r3, #7
 80033ba:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80033be:	f107 0394 	add.w	r3, r7, #148	; 0x94
 80033c2:	4619      	mov	r1, r3
 80033c4:	4809      	ldr	r0, [pc, #36]	; (80033ec <HAL_UART_MspInit+0xcc>)
 80033c6:	f000 fa6f 	bl	80038a8 <HAL_GPIO_Init>

    /* USART3 interrupt Init */
    HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 80033ca:	2200      	movs	r2, #0
 80033cc:	2100      	movs	r1, #0
 80033ce:	2027      	movs	r0, #39	; 0x27
 80033d0:	f000 f993 	bl	80036fa <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
 80033d4:	2027      	movs	r0, #39	; 0x27
 80033d6:	f000 f9ac 	bl	8003732 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }
}
 80033da:	bf00      	nop
 80033dc:	37a8      	adds	r7, #168	; 0xa8
 80033de:	46bd      	mov	sp, r7
 80033e0:	bd80      	pop	{r7, pc}
 80033e2:	bf00      	nop
 80033e4:	40004800 	.word	0x40004800
 80033e8:	40023800 	.word	0x40023800
 80033ec:	40020c00 	.word	0x40020c00

080033f0 <Reset_Handler>:
 80033f0:	f8df d034 	ldr.w	sp, [pc, #52]	; 8003428 <LoopFillZerobss+0x12>
 80033f4:	480d      	ldr	r0, [pc, #52]	; (800342c <LoopFillZerobss+0x16>)
 80033f6:	490e      	ldr	r1, [pc, #56]	; (8003430 <LoopFillZerobss+0x1a>)
 80033f8:	4a0e      	ldr	r2, [pc, #56]	; (8003434 <LoopFillZerobss+0x1e>)
 80033fa:	2300      	movs	r3, #0
 80033fc:	e002      	b.n	8003404 <LoopCopyDataInit>

080033fe <CopyDataInit>:
 80033fe:	58d4      	ldr	r4, [r2, r3]
 8003400:	50c4      	str	r4, [r0, r3]
 8003402:	3304      	adds	r3, #4

08003404 <LoopCopyDataInit>:
 8003404:	18c4      	adds	r4, r0, r3
 8003406:	428c      	cmp	r4, r1
 8003408:	d3f9      	bcc.n	80033fe <CopyDataInit>
 800340a:	4a0b      	ldr	r2, [pc, #44]	; (8003438 <LoopFillZerobss+0x22>)
 800340c:	4c0b      	ldr	r4, [pc, #44]	; (800343c <LoopFillZerobss+0x26>)
 800340e:	2300      	movs	r3, #0
 8003410:	e001      	b.n	8003416 <LoopFillZerobss>

08003412 <FillZerobss>:
 8003412:	6013      	str	r3, [r2, #0]
 8003414:	3204      	adds	r2, #4

08003416 <LoopFillZerobss>:
 8003416:	42a2      	cmp	r2, r4
 8003418:	d3fb      	bcc.n	8003412 <FillZerobss>
 800341a:	f7ff fd23 	bl	8002e64 <SystemInit>
 800341e:	f006 fdb3 	bl	8009f88 <__libc_init_array>
 8003422:	f7ff fa2d 	bl	8002880 <main>
 8003426:	4770      	bx	lr
 8003428:	20050000 	.word	0x20050000
 800342c:	20000000 	.word	0x20000000
 8003430:	200000e0 	.word	0x200000e0
 8003434:	0800aa7c 	.word	0x0800aa7c
 8003438:	200000e0 	.word	0x200000e0
 800343c:	20000500 	.word	0x20000500

08003440 <ADC_IRQHandler>:
 8003440:	e7fe      	b.n	8003440 <ADC_IRQHandler>

08003442 <HAL_Init>:
 8003442:	b580      	push	{r7, lr}
 8003444:	af00      	add	r7, sp, #0
 8003446:	2003      	movs	r0, #3
 8003448:	f000 f94c 	bl	80036e4 <HAL_NVIC_SetPriorityGrouping>
 800344c:	2000      	movs	r0, #0
 800344e:	f000 f805 	bl	800345c <HAL_InitTick>
 8003452:	f7ff fc49 	bl	8002ce8 <HAL_MspInit>
 8003456:	2300      	movs	r3, #0
 8003458:	4618      	mov	r0, r3
 800345a:	bd80      	pop	{r7, pc}

0800345c <HAL_InitTick>:
 800345c:	b580      	push	{r7, lr}
 800345e:	b082      	sub	sp, #8
 8003460:	af00      	add	r7, sp, #0
 8003462:	6078      	str	r0, [r7, #4]
 8003464:	4b12      	ldr	r3, [pc, #72]	; (80034b0 <HAL_InitTick+0x54>)
 8003466:	681a      	ldr	r2, [r3, #0]
 8003468:	4b12      	ldr	r3, [pc, #72]	; (80034b4 <HAL_InitTick+0x58>)
 800346a:	781b      	ldrb	r3, [r3, #0]
 800346c:	4619      	mov	r1, r3
 800346e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003472:	fbb3 f3f1 	udiv	r3, r3, r1
 8003476:	fbb2 f3f3 	udiv	r3, r2, r3
 800347a:	4618      	mov	r0, r3
 800347c:	f000 f967 	bl	800374e <HAL_SYSTICK_Config>
 8003480:	4603      	mov	r3, r0
 8003482:	2b00      	cmp	r3, #0
 8003484:	d001      	beq.n	800348a <HAL_InitTick+0x2e>
 8003486:	2301      	movs	r3, #1
 8003488:	e00e      	b.n	80034a8 <HAL_InitTick+0x4c>
 800348a:	687b      	ldr	r3, [r7, #4]
 800348c:	2b0f      	cmp	r3, #15
 800348e:	d80a      	bhi.n	80034a6 <HAL_InitTick+0x4a>
 8003490:	2200      	movs	r2, #0
 8003492:	6879      	ldr	r1, [r7, #4]
 8003494:	f04f 30ff 	mov.w	r0, #4294967295
 8003498:	f000 f92f 	bl	80036fa <HAL_NVIC_SetPriority>
 800349c:	4a06      	ldr	r2, [pc, #24]	; (80034b8 <HAL_InitTick+0x5c>)
 800349e:	687b      	ldr	r3, [r7, #4]
 80034a0:	6013      	str	r3, [r2, #0]
 80034a2:	2300      	movs	r3, #0
 80034a4:	e000      	b.n	80034a8 <HAL_InitTick+0x4c>
 80034a6:	2301      	movs	r3, #1
 80034a8:	4618      	mov	r0, r3
 80034aa:	3708      	adds	r7, #8
 80034ac:	46bd      	mov	sp, r7
 80034ae:	bd80      	pop	{r7, pc}
 80034b0:	20000084 	.word	0x20000084
 80034b4:	2000008c 	.word	0x2000008c
 80034b8:	20000088 	.word	0x20000088

080034bc <HAL_IncTick>:
 80034bc:	b480      	push	{r7}
 80034be:	af00      	add	r7, sp, #0
 80034c0:	4b06      	ldr	r3, [pc, #24]	; (80034dc <HAL_IncTick+0x20>)
 80034c2:	781b      	ldrb	r3, [r3, #0]
 80034c4:	461a      	mov	r2, r3
 80034c6:	4b06      	ldr	r3, [pc, #24]	; (80034e0 <HAL_IncTick+0x24>)
 80034c8:	681b      	ldr	r3, [r3, #0]
 80034ca:	4413      	add	r3, r2
 80034cc:	4a04      	ldr	r2, [pc, #16]	; (80034e0 <HAL_IncTick+0x24>)
 80034ce:	6013      	str	r3, [r2, #0]
 80034d0:	bf00      	nop
 80034d2:	46bd      	mov	sp, r7
 80034d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034d8:	4770      	bx	lr
 80034da:	bf00      	nop
 80034dc:	2000008c 	.word	0x2000008c
 80034e0:	200003b4 	.word	0x200003b4

080034e4 <HAL_GetTick>:
 80034e4:	b480      	push	{r7}
 80034e6:	af00      	add	r7, sp, #0
 80034e8:	4b03      	ldr	r3, [pc, #12]	; (80034f8 <HAL_GetTick+0x14>)
 80034ea:	681b      	ldr	r3, [r3, #0]
 80034ec:	4618      	mov	r0, r3
 80034ee:	46bd      	mov	sp, r7
 80034f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034f4:	4770      	bx	lr
 80034f6:	bf00      	nop
 80034f8:	200003b4 	.word	0x200003b4

080034fc <HAL_Delay>:
 80034fc:	b580      	push	{r7, lr}
 80034fe:	b084      	sub	sp, #16
 8003500:	af00      	add	r7, sp, #0
 8003502:	6078      	str	r0, [r7, #4]
 8003504:	f7ff ffee 	bl	80034e4 <HAL_GetTick>
 8003508:	60b8      	str	r0, [r7, #8]
 800350a:	687b      	ldr	r3, [r7, #4]
 800350c:	60fb      	str	r3, [r7, #12]
 800350e:	68fb      	ldr	r3, [r7, #12]
 8003510:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003514:	d005      	beq.n	8003522 <HAL_Delay+0x26>
 8003516:	4b0a      	ldr	r3, [pc, #40]	; (8003540 <HAL_Delay+0x44>)
 8003518:	781b      	ldrb	r3, [r3, #0]
 800351a:	461a      	mov	r2, r3
 800351c:	68fb      	ldr	r3, [r7, #12]
 800351e:	4413      	add	r3, r2
 8003520:	60fb      	str	r3, [r7, #12]
 8003522:	bf00      	nop
 8003524:	f7ff ffde 	bl	80034e4 <HAL_GetTick>
 8003528:	4602      	mov	r2, r0
 800352a:	68bb      	ldr	r3, [r7, #8]
 800352c:	1ad3      	subs	r3, r2, r3
 800352e:	68fa      	ldr	r2, [r7, #12]
 8003530:	429a      	cmp	r2, r3
 8003532:	d8f7      	bhi.n	8003524 <HAL_Delay+0x28>
 8003534:	bf00      	nop
 8003536:	bf00      	nop
 8003538:	3710      	adds	r7, #16
 800353a:	46bd      	mov	sp, r7
 800353c:	bd80      	pop	{r7, pc}
 800353e:	bf00      	nop
 8003540:	2000008c 	.word	0x2000008c

08003544 <__NVIC_SetPriorityGrouping>:
 8003544:	b480      	push	{r7}
 8003546:	b085      	sub	sp, #20
 8003548:	af00      	add	r7, sp, #0
 800354a:	6078      	str	r0, [r7, #4]
 800354c:	687b      	ldr	r3, [r7, #4]
 800354e:	f003 0307 	and.w	r3, r3, #7
 8003552:	60fb      	str	r3, [r7, #12]
 8003554:	4b0b      	ldr	r3, [pc, #44]	; (8003584 <__NVIC_SetPriorityGrouping+0x40>)
 8003556:	68db      	ldr	r3, [r3, #12]
 8003558:	60bb      	str	r3, [r7, #8]
 800355a:	68ba      	ldr	r2, [r7, #8]
 800355c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8003560:	4013      	ands	r3, r2
 8003562:	60bb      	str	r3, [r7, #8]
 8003564:	68fb      	ldr	r3, [r7, #12]
 8003566:	021a      	lsls	r2, r3, #8
 8003568:	68bb      	ldr	r3, [r7, #8]
 800356a:	431a      	orrs	r2, r3
 800356c:	4b06      	ldr	r3, [pc, #24]	; (8003588 <__NVIC_SetPriorityGrouping+0x44>)
 800356e:	4313      	orrs	r3, r2
 8003570:	60bb      	str	r3, [r7, #8]
 8003572:	4a04      	ldr	r2, [pc, #16]	; (8003584 <__NVIC_SetPriorityGrouping+0x40>)
 8003574:	68bb      	ldr	r3, [r7, #8]
 8003576:	60d3      	str	r3, [r2, #12]
 8003578:	bf00      	nop
 800357a:	3714      	adds	r7, #20
 800357c:	46bd      	mov	sp, r7
 800357e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003582:	4770      	bx	lr
 8003584:	e000ed00 	.word	0xe000ed00
 8003588:	05fa0000 	.word	0x05fa0000

0800358c <__NVIC_GetPriorityGrouping>:
 800358c:	b480      	push	{r7}
 800358e:	af00      	add	r7, sp, #0
 8003590:	4b04      	ldr	r3, [pc, #16]	; (80035a4 <__NVIC_GetPriorityGrouping+0x18>)
 8003592:	68db      	ldr	r3, [r3, #12]
 8003594:	0a1b      	lsrs	r3, r3, #8
 8003596:	f003 0307 	and.w	r3, r3, #7
 800359a:	4618      	mov	r0, r3
 800359c:	46bd      	mov	sp, r7
 800359e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035a2:	4770      	bx	lr
 80035a4:	e000ed00 	.word	0xe000ed00

080035a8 <__NVIC_EnableIRQ>:
 80035a8:	b480      	push	{r7}
 80035aa:	b083      	sub	sp, #12
 80035ac:	af00      	add	r7, sp, #0
 80035ae:	4603      	mov	r3, r0
 80035b0:	71fb      	strb	r3, [r7, #7]
 80035b2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035b6:	2b00      	cmp	r3, #0
 80035b8:	db0b      	blt.n	80035d2 <__NVIC_EnableIRQ+0x2a>
 80035ba:	79fb      	ldrb	r3, [r7, #7]
 80035bc:	f003 021f 	and.w	r2, r3, #31
 80035c0:	4907      	ldr	r1, [pc, #28]	; (80035e0 <__NVIC_EnableIRQ+0x38>)
 80035c2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035c6:	095b      	lsrs	r3, r3, #5
 80035c8:	2001      	movs	r0, #1
 80035ca:	fa00 f202 	lsl.w	r2, r0, r2
 80035ce:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80035d2:	bf00      	nop
 80035d4:	370c      	adds	r7, #12
 80035d6:	46bd      	mov	sp, r7
 80035d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035dc:	4770      	bx	lr
 80035de:	bf00      	nop
 80035e0:	e000e100 	.word	0xe000e100

080035e4 <__NVIC_SetPriority>:
 80035e4:	b480      	push	{r7}
 80035e6:	b083      	sub	sp, #12
 80035e8:	af00      	add	r7, sp, #0
 80035ea:	4603      	mov	r3, r0
 80035ec:	6039      	str	r1, [r7, #0]
 80035ee:	71fb      	strb	r3, [r7, #7]
 80035f0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035f4:	2b00      	cmp	r3, #0
 80035f6:	db0a      	blt.n	800360e <__NVIC_SetPriority+0x2a>
 80035f8:	683b      	ldr	r3, [r7, #0]
 80035fa:	b2da      	uxtb	r2, r3
 80035fc:	490c      	ldr	r1, [pc, #48]	; (8003630 <__NVIC_SetPriority+0x4c>)
 80035fe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003602:	0112      	lsls	r2, r2, #4
 8003604:	b2d2      	uxtb	r2, r2
 8003606:	440b      	add	r3, r1
 8003608:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 800360c:	e00a      	b.n	8003624 <__NVIC_SetPriority+0x40>
 800360e:	683b      	ldr	r3, [r7, #0]
 8003610:	b2da      	uxtb	r2, r3
 8003612:	4908      	ldr	r1, [pc, #32]	; (8003634 <__NVIC_SetPriority+0x50>)
 8003614:	79fb      	ldrb	r3, [r7, #7]
 8003616:	f003 030f 	and.w	r3, r3, #15
 800361a:	3b04      	subs	r3, #4
 800361c:	0112      	lsls	r2, r2, #4
 800361e:	b2d2      	uxtb	r2, r2
 8003620:	440b      	add	r3, r1
 8003622:	761a      	strb	r2, [r3, #24]
 8003624:	bf00      	nop
 8003626:	370c      	adds	r7, #12
 8003628:	46bd      	mov	sp, r7
 800362a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800362e:	4770      	bx	lr
 8003630:	e000e100 	.word	0xe000e100
 8003634:	e000ed00 	.word	0xe000ed00

08003638 <NVIC_EncodePriority>:
 8003638:	b480      	push	{r7}
 800363a:	b089      	sub	sp, #36	; 0x24
 800363c:	af00      	add	r7, sp, #0
 800363e:	60f8      	str	r0, [r7, #12]
 8003640:	60b9      	str	r1, [r7, #8]
 8003642:	607a      	str	r2, [r7, #4]
 8003644:	68fb      	ldr	r3, [r7, #12]
 8003646:	f003 0307 	and.w	r3, r3, #7
 800364a:	61fb      	str	r3, [r7, #28]
 800364c:	69fb      	ldr	r3, [r7, #28]
 800364e:	f1c3 0307 	rsb	r3, r3, #7
 8003652:	2b04      	cmp	r3, #4
 8003654:	bf28      	it	cs
 8003656:	2304      	movcs	r3, #4
 8003658:	61bb      	str	r3, [r7, #24]
 800365a:	69fb      	ldr	r3, [r7, #28]
 800365c:	3304      	adds	r3, #4
 800365e:	2b06      	cmp	r3, #6
 8003660:	d902      	bls.n	8003668 <NVIC_EncodePriority+0x30>
 8003662:	69fb      	ldr	r3, [r7, #28]
 8003664:	3b03      	subs	r3, #3
 8003666:	e000      	b.n	800366a <NVIC_EncodePriority+0x32>
 8003668:	2300      	movs	r3, #0
 800366a:	617b      	str	r3, [r7, #20]
 800366c:	f04f 32ff 	mov.w	r2, #4294967295
 8003670:	69bb      	ldr	r3, [r7, #24]
 8003672:	fa02 f303 	lsl.w	r3, r2, r3
 8003676:	43da      	mvns	r2, r3
 8003678:	68bb      	ldr	r3, [r7, #8]
 800367a:	401a      	ands	r2, r3
 800367c:	697b      	ldr	r3, [r7, #20]
 800367e:	409a      	lsls	r2, r3
 8003680:	f04f 31ff 	mov.w	r1, #4294967295
 8003684:	697b      	ldr	r3, [r7, #20]
 8003686:	fa01 f303 	lsl.w	r3, r1, r3
 800368a:	43d9      	mvns	r1, r3
 800368c:	687b      	ldr	r3, [r7, #4]
 800368e:	400b      	ands	r3, r1
 8003690:	4313      	orrs	r3, r2
 8003692:	4618      	mov	r0, r3
 8003694:	3724      	adds	r7, #36	; 0x24
 8003696:	46bd      	mov	sp, r7
 8003698:	f85d 7b04 	ldr.w	r7, [sp], #4
 800369c:	4770      	bx	lr
	...

080036a0 <SysTick_Config>:
 80036a0:	b580      	push	{r7, lr}
 80036a2:	b082      	sub	sp, #8
 80036a4:	af00      	add	r7, sp, #0
 80036a6:	6078      	str	r0, [r7, #4]
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	3b01      	subs	r3, #1
 80036ac:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80036b0:	d301      	bcc.n	80036b6 <SysTick_Config+0x16>
 80036b2:	2301      	movs	r3, #1
 80036b4:	e00f      	b.n	80036d6 <SysTick_Config+0x36>
 80036b6:	4a0a      	ldr	r2, [pc, #40]	; (80036e0 <SysTick_Config+0x40>)
 80036b8:	687b      	ldr	r3, [r7, #4]
 80036ba:	3b01      	subs	r3, #1
 80036bc:	6053      	str	r3, [r2, #4]
 80036be:	210f      	movs	r1, #15
 80036c0:	f04f 30ff 	mov.w	r0, #4294967295
 80036c4:	f7ff ff8e 	bl	80035e4 <__NVIC_SetPriority>
 80036c8:	4b05      	ldr	r3, [pc, #20]	; (80036e0 <SysTick_Config+0x40>)
 80036ca:	2200      	movs	r2, #0
 80036cc:	609a      	str	r2, [r3, #8]
 80036ce:	4b04      	ldr	r3, [pc, #16]	; (80036e0 <SysTick_Config+0x40>)
 80036d0:	2207      	movs	r2, #7
 80036d2:	601a      	str	r2, [r3, #0]
 80036d4:	2300      	movs	r3, #0
 80036d6:	4618      	mov	r0, r3
 80036d8:	3708      	adds	r7, #8
 80036da:	46bd      	mov	sp, r7
 80036dc:	bd80      	pop	{r7, pc}
 80036de:	bf00      	nop
 80036e0:	e000e010 	.word	0xe000e010

080036e4 <HAL_NVIC_SetPriorityGrouping>:
 80036e4:	b580      	push	{r7, lr}
 80036e6:	b082      	sub	sp, #8
 80036e8:	af00      	add	r7, sp, #0
 80036ea:	6078      	str	r0, [r7, #4]
 80036ec:	6878      	ldr	r0, [r7, #4]
 80036ee:	f7ff ff29 	bl	8003544 <__NVIC_SetPriorityGrouping>
 80036f2:	bf00      	nop
 80036f4:	3708      	adds	r7, #8
 80036f6:	46bd      	mov	sp, r7
 80036f8:	bd80      	pop	{r7, pc}

080036fa <HAL_NVIC_SetPriority>:
 80036fa:	b580      	push	{r7, lr}
 80036fc:	b086      	sub	sp, #24
 80036fe:	af00      	add	r7, sp, #0
 8003700:	4603      	mov	r3, r0
 8003702:	60b9      	str	r1, [r7, #8]
 8003704:	607a      	str	r2, [r7, #4]
 8003706:	73fb      	strb	r3, [r7, #15]
 8003708:	2300      	movs	r3, #0
 800370a:	617b      	str	r3, [r7, #20]
 800370c:	f7ff ff3e 	bl	800358c <__NVIC_GetPriorityGrouping>
 8003710:	6178      	str	r0, [r7, #20]
 8003712:	687a      	ldr	r2, [r7, #4]
 8003714:	68b9      	ldr	r1, [r7, #8]
 8003716:	6978      	ldr	r0, [r7, #20]
 8003718:	f7ff ff8e 	bl	8003638 <NVIC_EncodePriority>
 800371c:	4602      	mov	r2, r0
 800371e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003722:	4611      	mov	r1, r2
 8003724:	4618      	mov	r0, r3
 8003726:	f7ff ff5d 	bl	80035e4 <__NVIC_SetPriority>
 800372a:	bf00      	nop
 800372c:	3718      	adds	r7, #24
 800372e:	46bd      	mov	sp, r7
 8003730:	bd80      	pop	{r7, pc}

08003732 <HAL_NVIC_EnableIRQ>:
 8003732:	b580      	push	{r7, lr}
 8003734:	b082      	sub	sp, #8
 8003736:	af00      	add	r7, sp, #0
 8003738:	4603      	mov	r3, r0
 800373a:	71fb      	strb	r3, [r7, #7]
 800373c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003740:	4618      	mov	r0, r3
 8003742:	f7ff ff31 	bl	80035a8 <__NVIC_EnableIRQ>
 8003746:	bf00      	nop
 8003748:	3708      	adds	r7, #8
 800374a:	46bd      	mov	sp, r7
 800374c:	bd80      	pop	{r7, pc}

0800374e <HAL_SYSTICK_Config>:
 800374e:	b580      	push	{r7, lr}
 8003750:	b082      	sub	sp, #8
 8003752:	af00      	add	r7, sp, #0
 8003754:	6078      	str	r0, [r7, #4]
 8003756:	6878      	ldr	r0, [r7, #4]
 8003758:	f7ff ffa2 	bl	80036a0 <SysTick_Config>
 800375c:	4603      	mov	r3, r0
 800375e:	4618      	mov	r0, r3
 8003760:	3708      	adds	r7, #8
 8003762:	46bd      	mov	sp, r7
 8003764:	bd80      	pop	{r7, pc}

08003766 <HAL_DMA_Abort>:
 8003766:	b580      	push	{r7, lr}
 8003768:	b084      	sub	sp, #16
 800376a:	af00      	add	r7, sp, #0
 800376c:	6078      	str	r0, [r7, #4]
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003772:	60fb      	str	r3, [r7, #12]
 8003774:	f7ff feb6 	bl	80034e4 <HAL_GetTick>
 8003778:	60b8      	str	r0, [r7, #8]
 800377a:	687b      	ldr	r3, [r7, #4]
 800377c:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003780:	b2db      	uxtb	r3, r3
 8003782:	2b02      	cmp	r3, #2
 8003784:	d008      	beq.n	8003798 <HAL_DMA_Abort+0x32>
 8003786:	687b      	ldr	r3, [r7, #4]
 8003788:	2280      	movs	r2, #128	; 0x80
 800378a:	655a      	str	r2, [r3, #84]	; 0x54
 800378c:	687b      	ldr	r3, [r7, #4]
 800378e:	2200      	movs	r2, #0
 8003790:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003794:	2301      	movs	r3, #1
 8003796:	e052      	b.n	800383e <HAL_DMA_Abort+0xd8>
 8003798:	687b      	ldr	r3, [r7, #4]
 800379a:	681b      	ldr	r3, [r3, #0]
 800379c:	681a      	ldr	r2, [r3, #0]
 800379e:	687b      	ldr	r3, [r7, #4]
 80037a0:	681b      	ldr	r3, [r3, #0]
 80037a2:	f022 0216 	bic.w	r2, r2, #22
 80037a6:	601a      	str	r2, [r3, #0]
 80037a8:	687b      	ldr	r3, [r7, #4]
 80037aa:	681b      	ldr	r3, [r3, #0]
 80037ac:	695a      	ldr	r2, [r3, #20]
 80037ae:	687b      	ldr	r3, [r7, #4]
 80037b0:	681b      	ldr	r3, [r3, #0]
 80037b2:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80037b6:	615a      	str	r2, [r3, #20]
 80037b8:	687b      	ldr	r3, [r7, #4]
 80037ba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80037bc:	2b00      	cmp	r3, #0
 80037be:	d103      	bne.n	80037c8 <HAL_DMA_Abort+0x62>
 80037c0:	687b      	ldr	r3, [r7, #4]
 80037c2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80037c4:	2b00      	cmp	r3, #0
 80037c6:	d007      	beq.n	80037d8 <HAL_DMA_Abort+0x72>
 80037c8:	687b      	ldr	r3, [r7, #4]
 80037ca:	681b      	ldr	r3, [r3, #0]
 80037cc:	681a      	ldr	r2, [r3, #0]
 80037ce:	687b      	ldr	r3, [r7, #4]
 80037d0:	681b      	ldr	r3, [r3, #0]
 80037d2:	f022 0208 	bic.w	r2, r2, #8
 80037d6:	601a      	str	r2, [r3, #0]
 80037d8:	687b      	ldr	r3, [r7, #4]
 80037da:	681b      	ldr	r3, [r3, #0]
 80037dc:	681a      	ldr	r2, [r3, #0]
 80037de:	687b      	ldr	r3, [r7, #4]
 80037e0:	681b      	ldr	r3, [r3, #0]
 80037e2:	f022 0201 	bic.w	r2, r2, #1
 80037e6:	601a      	str	r2, [r3, #0]
 80037e8:	e013      	b.n	8003812 <HAL_DMA_Abort+0xac>
 80037ea:	f7ff fe7b 	bl	80034e4 <HAL_GetTick>
 80037ee:	4602      	mov	r2, r0
 80037f0:	68bb      	ldr	r3, [r7, #8]
 80037f2:	1ad3      	subs	r3, r2, r3
 80037f4:	2b05      	cmp	r3, #5
 80037f6:	d90c      	bls.n	8003812 <HAL_DMA_Abort+0xac>
 80037f8:	687b      	ldr	r3, [r7, #4]
 80037fa:	2220      	movs	r2, #32
 80037fc:	655a      	str	r2, [r3, #84]	; 0x54
 80037fe:	687b      	ldr	r3, [r7, #4]
 8003800:	2203      	movs	r2, #3
 8003802:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003806:	687b      	ldr	r3, [r7, #4]
 8003808:	2200      	movs	r2, #0
 800380a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800380e:	2303      	movs	r3, #3
 8003810:	e015      	b.n	800383e <HAL_DMA_Abort+0xd8>
 8003812:	687b      	ldr	r3, [r7, #4]
 8003814:	681b      	ldr	r3, [r3, #0]
 8003816:	681b      	ldr	r3, [r3, #0]
 8003818:	f003 0301 	and.w	r3, r3, #1
 800381c:	2b00      	cmp	r3, #0
 800381e:	d1e4      	bne.n	80037ea <HAL_DMA_Abort+0x84>
 8003820:	687b      	ldr	r3, [r7, #4]
 8003822:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003824:	223f      	movs	r2, #63	; 0x3f
 8003826:	409a      	lsls	r2, r3
 8003828:	68fb      	ldr	r3, [r7, #12]
 800382a:	609a      	str	r2, [r3, #8]
 800382c:	687b      	ldr	r3, [r7, #4]
 800382e:	2201      	movs	r2, #1
 8003830:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003834:	687b      	ldr	r3, [r7, #4]
 8003836:	2200      	movs	r2, #0
 8003838:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800383c:	2300      	movs	r3, #0
 800383e:	4618      	mov	r0, r3
 8003840:	3710      	adds	r7, #16
 8003842:	46bd      	mov	sp, r7
 8003844:	bd80      	pop	{r7, pc}

08003846 <HAL_DMA_Abort_IT>:
 8003846:	b480      	push	{r7}
 8003848:	b083      	sub	sp, #12
 800384a:	af00      	add	r7, sp, #0
 800384c:	6078      	str	r0, [r7, #4]
 800384e:	687b      	ldr	r3, [r7, #4]
 8003850:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003854:	b2db      	uxtb	r3, r3
 8003856:	2b02      	cmp	r3, #2
 8003858:	d004      	beq.n	8003864 <HAL_DMA_Abort_IT+0x1e>
 800385a:	687b      	ldr	r3, [r7, #4]
 800385c:	2280      	movs	r2, #128	; 0x80
 800385e:	655a      	str	r2, [r3, #84]	; 0x54
 8003860:	2301      	movs	r3, #1
 8003862:	e00c      	b.n	800387e <HAL_DMA_Abort_IT+0x38>
 8003864:	687b      	ldr	r3, [r7, #4]
 8003866:	2205      	movs	r2, #5
 8003868:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800386c:	687b      	ldr	r3, [r7, #4]
 800386e:	681b      	ldr	r3, [r3, #0]
 8003870:	681a      	ldr	r2, [r3, #0]
 8003872:	687b      	ldr	r3, [r7, #4]
 8003874:	681b      	ldr	r3, [r3, #0]
 8003876:	f022 0201 	bic.w	r2, r2, #1
 800387a:	601a      	str	r2, [r3, #0]
 800387c:	2300      	movs	r3, #0
 800387e:	4618      	mov	r0, r3
 8003880:	370c      	adds	r7, #12
 8003882:	46bd      	mov	sp, r7
 8003884:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003888:	4770      	bx	lr

0800388a <HAL_DMA_GetState>:
 800388a:	b480      	push	{r7}
 800388c:	b083      	sub	sp, #12
 800388e:	af00      	add	r7, sp, #0
 8003890:	6078      	str	r0, [r7, #4]
 8003892:	687b      	ldr	r3, [r7, #4]
 8003894:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003898:	b2db      	uxtb	r3, r3
 800389a:	4618      	mov	r0, r3
 800389c:	370c      	adds	r7, #12
 800389e:	46bd      	mov	sp, r7
 80038a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038a4:	4770      	bx	lr
	...

080038a8 <HAL_GPIO_Init>:
 80038a8:	b480      	push	{r7}
 80038aa:	b089      	sub	sp, #36	; 0x24
 80038ac:	af00      	add	r7, sp, #0
 80038ae:	6078      	str	r0, [r7, #4]
 80038b0:	6039      	str	r1, [r7, #0]
 80038b2:	2300      	movs	r3, #0
 80038b4:	61fb      	str	r3, [r7, #28]
 80038b6:	2300      	movs	r3, #0
 80038b8:	617b      	str	r3, [r7, #20]
 80038ba:	2300      	movs	r3, #0
 80038bc:	613b      	str	r3, [r7, #16]
 80038be:	2300      	movs	r3, #0
 80038c0:	61bb      	str	r3, [r7, #24]
 80038c2:	2300      	movs	r3, #0
 80038c4:	61fb      	str	r3, [r7, #28]
 80038c6:	e175      	b.n	8003bb4 <HAL_GPIO_Init+0x30c>
 80038c8:	2201      	movs	r2, #1
 80038ca:	69fb      	ldr	r3, [r7, #28]
 80038cc:	fa02 f303 	lsl.w	r3, r2, r3
 80038d0:	617b      	str	r3, [r7, #20]
 80038d2:	683b      	ldr	r3, [r7, #0]
 80038d4:	681b      	ldr	r3, [r3, #0]
 80038d6:	697a      	ldr	r2, [r7, #20]
 80038d8:	4013      	ands	r3, r2
 80038da:	613b      	str	r3, [r7, #16]
 80038dc:	693a      	ldr	r2, [r7, #16]
 80038de:	697b      	ldr	r3, [r7, #20]
 80038e0:	429a      	cmp	r2, r3
 80038e2:	f040 8164 	bne.w	8003bae <HAL_GPIO_Init+0x306>
 80038e6:	683b      	ldr	r3, [r7, #0]
 80038e8:	685b      	ldr	r3, [r3, #4]
 80038ea:	f003 0303 	and.w	r3, r3, #3
 80038ee:	2b01      	cmp	r3, #1
 80038f0:	d005      	beq.n	80038fe <HAL_GPIO_Init+0x56>
 80038f2:	683b      	ldr	r3, [r7, #0]
 80038f4:	685b      	ldr	r3, [r3, #4]
 80038f6:	f003 0303 	and.w	r3, r3, #3
 80038fa:	2b02      	cmp	r3, #2
 80038fc:	d130      	bne.n	8003960 <HAL_GPIO_Init+0xb8>
 80038fe:	687b      	ldr	r3, [r7, #4]
 8003900:	689b      	ldr	r3, [r3, #8]
 8003902:	61bb      	str	r3, [r7, #24]
 8003904:	69fb      	ldr	r3, [r7, #28]
 8003906:	005b      	lsls	r3, r3, #1
 8003908:	2203      	movs	r2, #3
 800390a:	fa02 f303 	lsl.w	r3, r2, r3
 800390e:	43db      	mvns	r3, r3
 8003910:	69ba      	ldr	r2, [r7, #24]
 8003912:	4013      	ands	r3, r2
 8003914:	61bb      	str	r3, [r7, #24]
 8003916:	683b      	ldr	r3, [r7, #0]
 8003918:	68da      	ldr	r2, [r3, #12]
 800391a:	69fb      	ldr	r3, [r7, #28]
 800391c:	005b      	lsls	r3, r3, #1
 800391e:	fa02 f303 	lsl.w	r3, r2, r3
 8003922:	69ba      	ldr	r2, [r7, #24]
 8003924:	4313      	orrs	r3, r2
 8003926:	61bb      	str	r3, [r7, #24]
 8003928:	687b      	ldr	r3, [r7, #4]
 800392a:	69ba      	ldr	r2, [r7, #24]
 800392c:	609a      	str	r2, [r3, #8]
 800392e:	687b      	ldr	r3, [r7, #4]
 8003930:	685b      	ldr	r3, [r3, #4]
 8003932:	61bb      	str	r3, [r7, #24]
 8003934:	2201      	movs	r2, #1
 8003936:	69fb      	ldr	r3, [r7, #28]
 8003938:	fa02 f303 	lsl.w	r3, r2, r3
 800393c:	43db      	mvns	r3, r3
 800393e:	69ba      	ldr	r2, [r7, #24]
 8003940:	4013      	ands	r3, r2
 8003942:	61bb      	str	r3, [r7, #24]
 8003944:	683b      	ldr	r3, [r7, #0]
 8003946:	685b      	ldr	r3, [r3, #4]
 8003948:	091b      	lsrs	r3, r3, #4
 800394a:	f003 0201 	and.w	r2, r3, #1
 800394e:	69fb      	ldr	r3, [r7, #28]
 8003950:	fa02 f303 	lsl.w	r3, r2, r3
 8003954:	69ba      	ldr	r2, [r7, #24]
 8003956:	4313      	orrs	r3, r2
 8003958:	61bb      	str	r3, [r7, #24]
 800395a:	687b      	ldr	r3, [r7, #4]
 800395c:	69ba      	ldr	r2, [r7, #24]
 800395e:	605a      	str	r2, [r3, #4]
 8003960:	683b      	ldr	r3, [r7, #0]
 8003962:	685b      	ldr	r3, [r3, #4]
 8003964:	f003 0303 	and.w	r3, r3, #3
 8003968:	2b03      	cmp	r3, #3
 800396a:	d017      	beq.n	800399c <HAL_GPIO_Init+0xf4>
 800396c:	687b      	ldr	r3, [r7, #4]
 800396e:	68db      	ldr	r3, [r3, #12]
 8003970:	61bb      	str	r3, [r7, #24]
 8003972:	69fb      	ldr	r3, [r7, #28]
 8003974:	005b      	lsls	r3, r3, #1
 8003976:	2203      	movs	r2, #3
 8003978:	fa02 f303 	lsl.w	r3, r2, r3
 800397c:	43db      	mvns	r3, r3
 800397e:	69ba      	ldr	r2, [r7, #24]
 8003980:	4013      	ands	r3, r2
 8003982:	61bb      	str	r3, [r7, #24]
 8003984:	683b      	ldr	r3, [r7, #0]
 8003986:	689a      	ldr	r2, [r3, #8]
 8003988:	69fb      	ldr	r3, [r7, #28]
 800398a:	005b      	lsls	r3, r3, #1
 800398c:	fa02 f303 	lsl.w	r3, r2, r3
 8003990:	69ba      	ldr	r2, [r7, #24]
 8003992:	4313      	orrs	r3, r2
 8003994:	61bb      	str	r3, [r7, #24]
 8003996:	687b      	ldr	r3, [r7, #4]
 8003998:	69ba      	ldr	r2, [r7, #24]
 800399a:	60da      	str	r2, [r3, #12]
 800399c:	683b      	ldr	r3, [r7, #0]
 800399e:	685b      	ldr	r3, [r3, #4]
 80039a0:	f003 0303 	and.w	r3, r3, #3
 80039a4:	2b02      	cmp	r3, #2
 80039a6:	d123      	bne.n	80039f0 <HAL_GPIO_Init+0x148>
 80039a8:	69fb      	ldr	r3, [r7, #28]
 80039aa:	08da      	lsrs	r2, r3, #3
 80039ac:	687b      	ldr	r3, [r7, #4]
 80039ae:	3208      	adds	r2, #8
 80039b0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80039b4:	61bb      	str	r3, [r7, #24]
 80039b6:	69fb      	ldr	r3, [r7, #28]
 80039b8:	f003 0307 	and.w	r3, r3, #7
 80039bc:	009b      	lsls	r3, r3, #2
 80039be:	220f      	movs	r2, #15
 80039c0:	fa02 f303 	lsl.w	r3, r2, r3
 80039c4:	43db      	mvns	r3, r3
 80039c6:	69ba      	ldr	r2, [r7, #24]
 80039c8:	4013      	ands	r3, r2
 80039ca:	61bb      	str	r3, [r7, #24]
 80039cc:	683b      	ldr	r3, [r7, #0]
 80039ce:	691a      	ldr	r2, [r3, #16]
 80039d0:	69fb      	ldr	r3, [r7, #28]
 80039d2:	f003 0307 	and.w	r3, r3, #7
 80039d6:	009b      	lsls	r3, r3, #2
 80039d8:	fa02 f303 	lsl.w	r3, r2, r3
 80039dc:	69ba      	ldr	r2, [r7, #24]
 80039de:	4313      	orrs	r3, r2
 80039e0:	61bb      	str	r3, [r7, #24]
 80039e2:	69fb      	ldr	r3, [r7, #28]
 80039e4:	08da      	lsrs	r2, r3, #3
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	3208      	adds	r2, #8
 80039ea:	69b9      	ldr	r1, [r7, #24]
 80039ec:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80039f0:	687b      	ldr	r3, [r7, #4]
 80039f2:	681b      	ldr	r3, [r3, #0]
 80039f4:	61bb      	str	r3, [r7, #24]
 80039f6:	69fb      	ldr	r3, [r7, #28]
 80039f8:	005b      	lsls	r3, r3, #1
 80039fa:	2203      	movs	r2, #3
 80039fc:	fa02 f303 	lsl.w	r3, r2, r3
 8003a00:	43db      	mvns	r3, r3
 8003a02:	69ba      	ldr	r2, [r7, #24]
 8003a04:	4013      	ands	r3, r2
 8003a06:	61bb      	str	r3, [r7, #24]
 8003a08:	683b      	ldr	r3, [r7, #0]
 8003a0a:	685b      	ldr	r3, [r3, #4]
 8003a0c:	f003 0203 	and.w	r2, r3, #3
 8003a10:	69fb      	ldr	r3, [r7, #28]
 8003a12:	005b      	lsls	r3, r3, #1
 8003a14:	fa02 f303 	lsl.w	r3, r2, r3
 8003a18:	69ba      	ldr	r2, [r7, #24]
 8003a1a:	4313      	orrs	r3, r2
 8003a1c:	61bb      	str	r3, [r7, #24]
 8003a1e:	687b      	ldr	r3, [r7, #4]
 8003a20:	69ba      	ldr	r2, [r7, #24]
 8003a22:	601a      	str	r2, [r3, #0]
 8003a24:	683b      	ldr	r3, [r7, #0]
 8003a26:	685b      	ldr	r3, [r3, #4]
 8003a28:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003a2c:	2b00      	cmp	r3, #0
 8003a2e:	f000 80be 	beq.w	8003bae <HAL_GPIO_Init+0x306>
 8003a32:	4b66      	ldr	r3, [pc, #408]	; (8003bcc <HAL_GPIO_Init+0x324>)
 8003a34:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003a36:	4a65      	ldr	r2, [pc, #404]	; (8003bcc <HAL_GPIO_Init+0x324>)
 8003a38:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003a3c:	6453      	str	r3, [r2, #68]	; 0x44
 8003a3e:	4b63      	ldr	r3, [pc, #396]	; (8003bcc <HAL_GPIO_Init+0x324>)
 8003a40:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003a42:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003a46:	60fb      	str	r3, [r7, #12]
 8003a48:	68fb      	ldr	r3, [r7, #12]
 8003a4a:	4a61      	ldr	r2, [pc, #388]	; (8003bd0 <HAL_GPIO_Init+0x328>)
 8003a4c:	69fb      	ldr	r3, [r7, #28]
 8003a4e:	089b      	lsrs	r3, r3, #2
 8003a50:	3302      	adds	r3, #2
 8003a52:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003a56:	61bb      	str	r3, [r7, #24]
 8003a58:	69fb      	ldr	r3, [r7, #28]
 8003a5a:	f003 0303 	and.w	r3, r3, #3
 8003a5e:	009b      	lsls	r3, r3, #2
 8003a60:	220f      	movs	r2, #15
 8003a62:	fa02 f303 	lsl.w	r3, r2, r3
 8003a66:	43db      	mvns	r3, r3
 8003a68:	69ba      	ldr	r2, [r7, #24]
 8003a6a:	4013      	ands	r3, r2
 8003a6c:	61bb      	str	r3, [r7, #24]
 8003a6e:	687b      	ldr	r3, [r7, #4]
 8003a70:	4a58      	ldr	r2, [pc, #352]	; (8003bd4 <HAL_GPIO_Init+0x32c>)
 8003a72:	4293      	cmp	r3, r2
 8003a74:	d037      	beq.n	8003ae6 <HAL_GPIO_Init+0x23e>
 8003a76:	687b      	ldr	r3, [r7, #4]
 8003a78:	4a57      	ldr	r2, [pc, #348]	; (8003bd8 <HAL_GPIO_Init+0x330>)
 8003a7a:	4293      	cmp	r3, r2
 8003a7c:	d031      	beq.n	8003ae2 <HAL_GPIO_Init+0x23a>
 8003a7e:	687b      	ldr	r3, [r7, #4]
 8003a80:	4a56      	ldr	r2, [pc, #344]	; (8003bdc <HAL_GPIO_Init+0x334>)
 8003a82:	4293      	cmp	r3, r2
 8003a84:	d02b      	beq.n	8003ade <HAL_GPIO_Init+0x236>
 8003a86:	687b      	ldr	r3, [r7, #4]
 8003a88:	4a55      	ldr	r2, [pc, #340]	; (8003be0 <HAL_GPIO_Init+0x338>)
 8003a8a:	4293      	cmp	r3, r2
 8003a8c:	d025      	beq.n	8003ada <HAL_GPIO_Init+0x232>
 8003a8e:	687b      	ldr	r3, [r7, #4]
 8003a90:	4a54      	ldr	r2, [pc, #336]	; (8003be4 <HAL_GPIO_Init+0x33c>)
 8003a92:	4293      	cmp	r3, r2
 8003a94:	d01f      	beq.n	8003ad6 <HAL_GPIO_Init+0x22e>
 8003a96:	687b      	ldr	r3, [r7, #4]
 8003a98:	4a53      	ldr	r2, [pc, #332]	; (8003be8 <HAL_GPIO_Init+0x340>)
 8003a9a:	4293      	cmp	r3, r2
 8003a9c:	d019      	beq.n	8003ad2 <HAL_GPIO_Init+0x22a>
 8003a9e:	687b      	ldr	r3, [r7, #4]
 8003aa0:	4a52      	ldr	r2, [pc, #328]	; (8003bec <HAL_GPIO_Init+0x344>)
 8003aa2:	4293      	cmp	r3, r2
 8003aa4:	d013      	beq.n	8003ace <HAL_GPIO_Init+0x226>
 8003aa6:	687b      	ldr	r3, [r7, #4]
 8003aa8:	4a51      	ldr	r2, [pc, #324]	; (8003bf0 <HAL_GPIO_Init+0x348>)
 8003aaa:	4293      	cmp	r3, r2
 8003aac:	d00d      	beq.n	8003aca <HAL_GPIO_Init+0x222>
 8003aae:	687b      	ldr	r3, [r7, #4]
 8003ab0:	4a50      	ldr	r2, [pc, #320]	; (8003bf4 <HAL_GPIO_Init+0x34c>)
 8003ab2:	4293      	cmp	r3, r2
 8003ab4:	d007      	beq.n	8003ac6 <HAL_GPIO_Init+0x21e>
 8003ab6:	687b      	ldr	r3, [r7, #4]
 8003ab8:	4a4f      	ldr	r2, [pc, #316]	; (8003bf8 <HAL_GPIO_Init+0x350>)
 8003aba:	4293      	cmp	r3, r2
 8003abc:	d101      	bne.n	8003ac2 <HAL_GPIO_Init+0x21a>
 8003abe:	2309      	movs	r3, #9
 8003ac0:	e012      	b.n	8003ae8 <HAL_GPIO_Init+0x240>
 8003ac2:	230a      	movs	r3, #10
 8003ac4:	e010      	b.n	8003ae8 <HAL_GPIO_Init+0x240>
 8003ac6:	2308      	movs	r3, #8
 8003ac8:	e00e      	b.n	8003ae8 <HAL_GPIO_Init+0x240>
 8003aca:	2307      	movs	r3, #7
 8003acc:	e00c      	b.n	8003ae8 <HAL_GPIO_Init+0x240>
 8003ace:	2306      	movs	r3, #6
 8003ad0:	e00a      	b.n	8003ae8 <HAL_GPIO_Init+0x240>
 8003ad2:	2305      	movs	r3, #5
 8003ad4:	e008      	b.n	8003ae8 <HAL_GPIO_Init+0x240>
 8003ad6:	2304      	movs	r3, #4
 8003ad8:	e006      	b.n	8003ae8 <HAL_GPIO_Init+0x240>
 8003ada:	2303      	movs	r3, #3
 8003adc:	e004      	b.n	8003ae8 <HAL_GPIO_Init+0x240>
 8003ade:	2302      	movs	r3, #2
 8003ae0:	e002      	b.n	8003ae8 <HAL_GPIO_Init+0x240>
 8003ae2:	2301      	movs	r3, #1
 8003ae4:	e000      	b.n	8003ae8 <HAL_GPIO_Init+0x240>
 8003ae6:	2300      	movs	r3, #0
 8003ae8:	69fa      	ldr	r2, [r7, #28]
 8003aea:	f002 0203 	and.w	r2, r2, #3
 8003aee:	0092      	lsls	r2, r2, #2
 8003af0:	4093      	lsls	r3, r2
 8003af2:	69ba      	ldr	r2, [r7, #24]
 8003af4:	4313      	orrs	r3, r2
 8003af6:	61bb      	str	r3, [r7, #24]
 8003af8:	4935      	ldr	r1, [pc, #212]	; (8003bd0 <HAL_GPIO_Init+0x328>)
 8003afa:	69fb      	ldr	r3, [r7, #28]
 8003afc:	089b      	lsrs	r3, r3, #2
 8003afe:	3302      	adds	r3, #2
 8003b00:	69ba      	ldr	r2, [r7, #24]
 8003b02:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003b06:	4b3d      	ldr	r3, [pc, #244]	; (8003bfc <HAL_GPIO_Init+0x354>)
 8003b08:	689b      	ldr	r3, [r3, #8]
 8003b0a:	61bb      	str	r3, [r7, #24]
 8003b0c:	693b      	ldr	r3, [r7, #16]
 8003b0e:	43db      	mvns	r3, r3
 8003b10:	69ba      	ldr	r2, [r7, #24]
 8003b12:	4013      	ands	r3, r2
 8003b14:	61bb      	str	r3, [r7, #24]
 8003b16:	683b      	ldr	r3, [r7, #0]
 8003b18:	685b      	ldr	r3, [r3, #4]
 8003b1a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003b1e:	2b00      	cmp	r3, #0
 8003b20:	d003      	beq.n	8003b2a <HAL_GPIO_Init+0x282>
 8003b22:	69ba      	ldr	r2, [r7, #24]
 8003b24:	693b      	ldr	r3, [r7, #16]
 8003b26:	4313      	orrs	r3, r2
 8003b28:	61bb      	str	r3, [r7, #24]
 8003b2a:	4a34      	ldr	r2, [pc, #208]	; (8003bfc <HAL_GPIO_Init+0x354>)
 8003b2c:	69bb      	ldr	r3, [r7, #24]
 8003b2e:	6093      	str	r3, [r2, #8]
 8003b30:	4b32      	ldr	r3, [pc, #200]	; (8003bfc <HAL_GPIO_Init+0x354>)
 8003b32:	68db      	ldr	r3, [r3, #12]
 8003b34:	61bb      	str	r3, [r7, #24]
 8003b36:	693b      	ldr	r3, [r7, #16]
 8003b38:	43db      	mvns	r3, r3
 8003b3a:	69ba      	ldr	r2, [r7, #24]
 8003b3c:	4013      	ands	r3, r2
 8003b3e:	61bb      	str	r3, [r7, #24]
 8003b40:	683b      	ldr	r3, [r7, #0]
 8003b42:	685b      	ldr	r3, [r3, #4]
 8003b44:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003b48:	2b00      	cmp	r3, #0
 8003b4a:	d003      	beq.n	8003b54 <HAL_GPIO_Init+0x2ac>
 8003b4c:	69ba      	ldr	r2, [r7, #24]
 8003b4e:	693b      	ldr	r3, [r7, #16]
 8003b50:	4313      	orrs	r3, r2
 8003b52:	61bb      	str	r3, [r7, #24]
 8003b54:	4a29      	ldr	r2, [pc, #164]	; (8003bfc <HAL_GPIO_Init+0x354>)
 8003b56:	69bb      	ldr	r3, [r7, #24]
 8003b58:	60d3      	str	r3, [r2, #12]
 8003b5a:	4b28      	ldr	r3, [pc, #160]	; (8003bfc <HAL_GPIO_Init+0x354>)
 8003b5c:	685b      	ldr	r3, [r3, #4]
 8003b5e:	61bb      	str	r3, [r7, #24]
 8003b60:	693b      	ldr	r3, [r7, #16]
 8003b62:	43db      	mvns	r3, r3
 8003b64:	69ba      	ldr	r2, [r7, #24]
 8003b66:	4013      	ands	r3, r2
 8003b68:	61bb      	str	r3, [r7, #24]
 8003b6a:	683b      	ldr	r3, [r7, #0]
 8003b6c:	685b      	ldr	r3, [r3, #4]
 8003b6e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003b72:	2b00      	cmp	r3, #0
 8003b74:	d003      	beq.n	8003b7e <HAL_GPIO_Init+0x2d6>
 8003b76:	69ba      	ldr	r2, [r7, #24]
 8003b78:	693b      	ldr	r3, [r7, #16]
 8003b7a:	4313      	orrs	r3, r2
 8003b7c:	61bb      	str	r3, [r7, #24]
 8003b7e:	4a1f      	ldr	r2, [pc, #124]	; (8003bfc <HAL_GPIO_Init+0x354>)
 8003b80:	69bb      	ldr	r3, [r7, #24]
 8003b82:	6053      	str	r3, [r2, #4]
 8003b84:	4b1d      	ldr	r3, [pc, #116]	; (8003bfc <HAL_GPIO_Init+0x354>)
 8003b86:	681b      	ldr	r3, [r3, #0]
 8003b88:	61bb      	str	r3, [r7, #24]
 8003b8a:	693b      	ldr	r3, [r7, #16]
 8003b8c:	43db      	mvns	r3, r3
 8003b8e:	69ba      	ldr	r2, [r7, #24]
 8003b90:	4013      	ands	r3, r2
 8003b92:	61bb      	str	r3, [r7, #24]
 8003b94:	683b      	ldr	r3, [r7, #0]
 8003b96:	685b      	ldr	r3, [r3, #4]
 8003b98:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003b9c:	2b00      	cmp	r3, #0
 8003b9e:	d003      	beq.n	8003ba8 <HAL_GPIO_Init+0x300>
 8003ba0:	69ba      	ldr	r2, [r7, #24]
 8003ba2:	693b      	ldr	r3, [r7, #16]
 8003ba4:	4313      	orrs	r3, r2
 8003ba6:	61bb      	str	r3, [r7, #24]
 8003ba8:	4a14      	ldr	r2, [pc, #80]	; (8003bfc <HAL_GPIO_Init+0x354>)
 8003baa:	69bb      	ldr	r3, [r7, #24]
 8003bac:	6013      	str	r3, [r2, #0]
 8003bae:	69fb      	ldr	r3, [r7, #28]
 8003bb0:	3301      	adds	r3, #1
 8003bb2:	61fb      	str	r3, [r7, #28]
 8003bb4:	69fb      	ldr	r3, [r7, #28]
 8003bb6:	2b0f      	cmp	r3, #15
 8003bb8:	f67f ae86 	bls.w	80038c8 <HAL_GPIO_Init+0x20>
 8003bbc:	bf00      	nop
 8003bbe:	bf00      	nop
 8003bc0:	3724      	adds	r7, #36	; 0x24
 8003bc2:	46bd      	mov	sp, r7
 8003bc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bc8:	4770      	bx	lr
 8003bca:	bf00      	nop
 8003bcc:	40023800 	.word	0x40023800
 8003bd0:	40013800 	.word	0x40013800
 8003bd4:	40020000 	.word	0x40020000
 8003bd8:	40020400 	.word	0x40020400
 8003bdc:	40020800 	.word	0x40020800
 8003be0:	40020c00 	.word	0x40020c00
 8003be4:	40021000 	.word	0x40021000
 8003be8:	40021400 	.word	0x40021400
 8003bec:	40021800 	.word	0x40021800
 8003bf0:	40021c00 	.word	0x40021c00
 8003bf4:	40022000 	.word	0x40022000
 8003bf8:	40022400 	.word	0x40022400
 8003bfc:	40013c00 	.word	0x40013c00

08003c00 <HAL_GPIO_WritePin>:
 8003c00:	b480      	push	{r7}
 8003c02:	b083      	sub	sp, #12
 8003c04:	af00      	add	r7, sp, #0
 8003c06:	6078      	str	r0, [r7, #4]
 8003c08:	460b      	mov	r3, r1
 8003c0a:	807b      	strh	r3, [r7, #2]
 8003c0c:	4613      	mov	r3, r2
 8003c0e:	707b      	strb	r3, [r7, #1]
 8003c10:	787b      	ldrb	r3, [r7, #1]
 8003c12:	2b00      	cmp	r3, #0
 8003c14:	d003      	beq.n	8003c1e <HAL_GPIO_WritePin+0x1e>
 8003c16:	887a      	ldrh	r2, [r7, #2]
 8003c18:	687b      	ldr	r3, [r7, #4]
 8003c1a:	619a      	str	r2, [r3, #24]
 8003c1c:	e003      	b.n	8003c26 <HAL_GPIO_WritePin+0x26>
 8003c1e:	887b      	ldrh	r3, [r7, #2]
 8003c20:	041a      	lsls	r2, r3, #16
 8003c22:	687b      	ldr	r3, [r7, #4]
 8003c24:	619a      	str	r2, [r3, #24]
 8003c26:	bf00      	nop
 8003c28:	370c      	adds	r7, #12
 8003c2a:	46bd      	mov	sp, r7
 8003c2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c30:	4770      	bx	lr
	...

08003c34 <HAL_GPIO_EXTI_IRQHandler>:
 8003c34:	b580      	push	{r7, lr}
 8003c36:	b082      	sub	sp, #8
 8003c38:	af00      	add	r7, sp, #0
 8003c3a:	4603      	mov	r3, r0
 8003c3c:	80fb      	strh	r3, [r7, #6]
 8003c3e:	4b08      	ldr	r3, [pc, #32]	; (8003c60 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003c40:	695a      	ldr	r2, [r3, #20]
 8003c42:	88fb      	ldrh	r3, [r7, #6]
 8003c44:	4013      	ands	r3, r2
 8003c46:	2b00      	cmp	r3, #0
 8003c48:	d006      	beq.n	8003c58 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8003c4a:	4a05      	ldr	r2, [pc, #20]	; (8003c60 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003c4c:	88fb      	ldrh	r3, [r7, #6]
 8003c4e:	6153      	str	r3, [r2, #20]
 8003c50:	88fb      	ldrh	r3, [r7, #6]
 8003c52:	4618      	mov	r0, r3
 8003c54:	f000 f806 	bl	8003c64 <HAL_GPIO_EXTI_Callback>
 8003c58:	bf00      	nop
 8003c5a:	3708      	adds	r7, #8
 8003c5c:	46bd      	mov	sp, r7
 8003c5e:	bd80      	pop	{r7, pc}
 8003c60:	40013c00 	.word	0x40013c00

08003c64 <HAL_GPIO_EXTI_Callback>:
 8003c64:	b480      	push	{r7}
 8003c66:	b083      	sub	sp, #12
 8003c68:	af00      	add	r7, sp, #0
 8003c6a:	4603      	mov	r3, r0
 8003c6c:	80fb      	strh	r3, [r7, #6]
 8003c6e:	bf00      	nop
 8003c70:	370c      	adds	r7, #12
 8003c72:	46bd      	mov	sp, r7
 8003c74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c78:	4770      	bx	lr
	...

08003c7c <HAL_I2C_Init>:
 8003c7c:	b580      	push	{r7, lr}
 8003c7e:	b082      	sub	sp, #8
 8003c80:	af00      	add	r7, sp, #0
 8003c82:	6078      	str	r0, [r7, #4]
 8003c84:	687b      	ldr	r3, [r7, #4]
 8003c86:	2b00      	cmp	r3, #0
 8003c88:	d101      	bne.n	8003c8e <HAL_I2C_Init+0x12>
 8003c8a:	2301      	movs	r3, #1
 8003c8c:	e07f      	b.n	8003d8e <HAL_I2C_Init+0x112>
 8003c8e:	687b      	ldr	r3, [r7, #4]
 8003c90:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003c94:	b2db      	uxtb	r3, r3
 8003c96:	2b00      	cmp	r3, #0
 8003c98:	d106      	bne.n	8003ca8 <HAL_I2C_Init+0x2c>
 8003c9a:	687b      	ldr	r3, [r7, #4]
 8003c9c:	2200      	movs	r2, #0
 8003c9e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003ca2:	6878      	ldr	r0, [r7, #4]
 8003ca4:	f7fe fb9a 	bl	80023dc <HAL_I2C_MspInit>
 8003ca8:	687b      	ldr	r3, [r7, #4]
 8003caa:	2224      	movs	r2, #36	; 0x24
 8003cac:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003cb0:	687b      	ldr	r3, [r7, #4]
 8003cb2:	681b      	ldr	r3, [r3, #0]
 8003cb4:	681a      	ldr	r2, [r3, #0]
 8003cb6:	687b      	ldr	r3, [r7, #4]
 8003cb8:	681b      	ldr	r3, [r3, #0]
 8003cba:	f022 0201 	bic.w	r2, r2, #1
 8003cbe:	601a      	str	r2, [r3, #0]
 8003cc0:	687b      	ldr	r3, [r7, #4]
 8003cc2:	685a      	ldr	r2, [r3, #4]
 8003cc4:	687b      	ldr	r3, [r7, #4]
 8003cc6:	681b      	ldr	r3, [r3, #0]
 8003cc8:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8003ccc:	611a      	str	r2, [r3, #16]
 8003cce:	687b      	ldr	r3, [r7, #4]
 8003cd0:	681b      	ldr	r3, [r3, #0]
 8003cd2:	689a      	ldr	r2, [r3, #8]
 8003cd4:	687b      	ldr	r3, [r7, #4]
 8003cd6:	681b      	ldr	r3, [r3, #0]
 8003cd8:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8003cdc:	609a      	str	r2, [r3, #8]
 8003cde:	687b      	ldr	r3, [r7, #4]
 8003ce0:	68db      	ldr	r3, [r3, #12]
 8003ce2:	2b01      	cmp	r3, #1
 8003ce4:	d107      	bne.n	8003cf6 <HAL_I2C_Init+0x7a>
 8003ce6:	687b      	ldr	r3, [r7, #4]
 8003ce8:	689a      	ldr	r2, [r3, #8]
 8003cea:	687b      	ldr	r3, [r7, #4]
 8003cec:	681b      	ldr	r3, [r3, #0]
 8003cee:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8003cf2:	609a      	str	r2, [r3, #8]
 8003cf4:	e006      	b.n	8003d04 <HAL_I2C_Init+0x88>
 8003cf6:	687b      	ldr	r3, [r7, #4]
 8003cf8:	689a      	ldr	r2, [r3, #8]
 8003cfa:	687b      	ldr	r3, [r7, #4]
 8003cfc:	681b      	ldr	r3, [r3, #0]
 8003cfe:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 8003d02:	609a      	str	r2, [r3, #8]
 8003d04:	687b      	ldr	r3, [r7, #4]
 8003d06:	68db      	ldr	r3, [r3, #12]
 8003d08:	2b02      	cmp	r3, #2
 8003d0a:	d104      	bne.n	8003d16 <HAL_I2C_Init+0x9a>
 8003d0c:	687b      	ldr	r3, [r7, #4]
 8003d0e:	681b      	ldr	r3, [r3, #0]
 8003d10:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8003d14:	605a      	str	r2, [r3, #4]
 8003d16:	687b      	ldr	r3, [r7, #4]
 8003d18:	681b      	ldr	r3, [r3, #0]
 8003d1a:	6859      	ldr	r1, [r3, #4]
 8003d1c:	687b      	ldr	r3, [r7, #4]
 8003d1e:	681a      	ldr	r2, [r3, #0]
 8003d20:	4b1d      	ldr	r3, [pc, #116]	; (8003d98 <HAL_I2C_Init+0x11c>)
 8003d22:	430b      	orrs	r3, r1
 8003d24:	6053      	str	r3, [r2, #4]
 8003d26:	687b      	ldr	r3, [r7, #4]
 8003d28:	681b      	ldr	r3, [r3, #0]
 8003d2a:	68da      	ldr	r2, [r3, #12]
 8003d2c:	687b      	ldr	r3, [r7, #4]
 8003d2e:	681b      	ldr	r3, [r3, #0]
 8003d30:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8003d34:	60da      	str	r2, [r3, #12]
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	691a      	ldr	r2, [r3, #16]
 8003d3a:	687b      	ldr	r3, [r7, #4]
 8003d3c:	695b      	ldr	r3, [r3, #20]
 8003d3e:	ea42 0103 	orr.w	r1, r2, r3
 8003d42:	687b      	ldr	r3, [r7, #4]
 8003d44:	699b      	ldr	r3, [r3, #24]
 8003d46:	021a      	lsls	r2, r3, #8
 8003d48:	687b      	ldr	r3, [r7, #4]
 8003d4a:	681b      	ldr	r3, [r3, #0]
 8003d4c:	430a      	orrs	r2, r1
 8003d4e:	60da      	str	r2, [r3, #12]
 8003d50:	687b      	ldr	r3, [r7, #4]
 8003d52:	69d9      	ldr	r1, [r3, #28]
 8003d54:	687b      	ldr	r3, [r7, #4]
 8003d56:	6a1a      	ldr	r2, [r3, #32]
 8003d58:	687b      	ldr	r3, [r7, #4]
 8003d5a:	681b      	ldr	r3, [r3, #0]
 8003d5c:	430a      	orrs	r2, r1
 8003d5e:	601a      	str	r2, [r3, #0]
 8003d60:	687b      	ldr	r3, [r7, #4]
 8003d62:	681b      	ldr	r3, [r3, #0]
 8003d64:	681a      	ldr	r2, [r3, #0]
 8003d66:	687b      	ldr	r3, [r7, #4]
 8003d68:	681b      	ldr	r3, [r3, #0]
 8003d6a:	f042 0201 	orr.w	r2, r2, #1
 8003d6e:	601a      	str	r2, [r3, #0]
 8003d70:	687b      	ldr	r3, [r7, #4]
 8003d72:	2200      	movs	r2, #0
 8003d74:	645a      	str	r2, [r3, #68]	; 0x44
 8003d76:	687b      	ldr	r3, [r7, #4]
 8003d78:	2220      	movs	r2, #32
 8003d7a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003d7e:	687b      	ldr	r3, [r7, #4]
 8003d80:	2200      	movs	r2, #0
 8003d82:	631a      	str	r2, [r3, #48]	; 0x30
 8003d84:	687b      	ldr	r3, [r7, #4]
 8003d86:	2200      	movs	r2, #0
 8003d88:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003d8c:	2300      	movs	r3, #0
 8003d8e:	4618      	mov	r0, r3
 8003d90:	3708      	adds	r7, #8
 8003d92:	46bd      	mov	sp, r7
 8003d94:	bd80      	pop	{r7, pc}
 8003d96:	bf00      	nop
 8003d98:	02008000 	.word	0x02008000

08003d9c <HAL_I2C_Master_Transmit>:
 8003d9c:	b580      	push	{r7, lr}
 8003d9e:	b088      	sub	sp, #32
 8003da0:	af02      	add	r7, sp, #8
 8003da2:	60f8      	str	r0, [r7, #12]
 8003da4:	607a      	str	r2, [r7, #4]
 8003da6:	461a      	mov	r2, r3
 8003da8:	460b      	mov	r3, r1
 8003daa:	817b      	strh	r3, [r7, #10]
 8003dac:	4613      	mov	r3, r2
 8003dae:	813b      	strh	r3, [r7, #8]
 8003db0:	68fb      	ldr	r3, [r7, #12]
 8003db2:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003db6:	b2db      	uxtb	r3, r3
 8003db8:	2b20      	cmp	r3, #32
 8003dba:	f040 80da 	bne.w	8003f72 <HAL_I2C_Master_Transmit+0x1d6>
 8003dbe:	68fb      	ldr	r3, [r7, #12]
 8003dc0:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8003dc4:	2b01      	cmp	r3, #1
 8003dc6:	d101      	bne.n	8003dcc <HAL_I2C_Master_Transmit+0x30>
 8003dc8:	2302      	movs	r3, #2
 8003dca:	e0d3      	b.n	8003f74 <HAL_I2C_Master_Transmit+0x1d8>
 8003dcc:	68fb      	ldr	r3, [r7, #12]
 8003dce:	2201      	movs	r2, #1
 8003dd0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003dd4:	f7ff fb86 	bl	80034e4 <HAL_GetTick>
 8003dd8:	6178      	str	r0, [r7, #20]
 8003dda:	697b      	ldr	r3, [r7, #20]
 8003ddc:	9300      	str	r3, [sp, #0]
 8003dde:	2319      	movs	r3, #25
 8003de0:	2201      	movs	r2, #1
 8003de2:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8003de6:	68f8      	ldr	r0, [r7, #12]
 8003de8:	f000 fded 	bl	80049c6 <I2C_WaitOnFlagUntilTimeout>
 8003dec:	4603      	mov	r3, r0
 8003dee:	2b00      	cmp	r3, #0
 8003df0:	d001      	beq.n	8003df6 <HAL_I2C_Master_Transmit+0x5a>
 8003df2:	2301      	movs	r3, #1
 8003df4:	e0be      	b.n	8003f74 <HAL_I2C_Master_Transmit+0x1d8>
 8003df6:	68fb      	ldr	r3, [r7, #12]
 8003df8:	2221      	movs	r2, #33	; 0x21
 8003dfa:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003dfe:	68fb      	ldr	r3, [r7, #12]
 8003e00:	2210      	movs	r2, #16
 8003e02:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003e06:	68fb      	ldr	r3, [r7, #12]
 8003e08:	2200      	movs	r2, #0
 8003e0a:	645a      	str	r2, [r3, #68]	; 0x44
 8003e0c:	68fb      	ldr	r3, [r7, #12]
 8003e0e:	687a      	ldr	r2, [r7, #4]
 8003e10:	625a      	str	r2, [r3, #36]	; 0x24
 8003e12:	68fb      	ldr	r3, [r7, #12]
 8003e14:	893a      	ldrh	r2, [r7, #8]
 8003e16:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003e18:	68fb      	ldr	r3, [r7, #12]
 8003e1a:	2200      	movs	r2, #0
 8003e1c:	635a      	str	r2, [r3, #52]	; 0x34
 8003e1e:	68fb      	ldr	r3, [r7, #12]
 8003e20:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003e22:	b29b      	uxth	r3, r3
 8003e24:	2bff      	cmp	r3, #255	; 0xff
 8003e26:	d90e      	bls.n	8003e46 <HAL_I2C_Master_Transmit+0xaa>
 8003e28:	68fb      	ldr	r3, [r7, #12]
 8003e2a:	22ff      	movs	r2, #255	; 0xff
 8003e2c:	851a      	strh	r2, [r3, #40]	; 0x28
 8003e2e:	68fb      	ldr	r3, [r7, #12]
 8003e30:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003e32:	b2da      	uxtb	r2, r3
 8003e34:	8979      	ldrh	r1, [r7, #10]
 8003e36:	4b51      	ldr	r3, [pc, #324]	; (8003f7c <HAL_I2C_Master_Transmit+0x1e0>)
 8003e38:	9300      	str	r3, [sp, #0]
 8003e3a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003e3e:	68f8      	ldr	r0, [r7, #12]
 8003e40:	f000 ff5e 	bl	8004d00 <I2C_TransferConfig>
 8003e44:	e06c      	b.n	8003f20 <HAL_I2C_Master_Transmit+0x184>
 8003e46:	68fb      	ldr	r3, [r7, #12]
 8003e48:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003e4a:	b29a      	uxth	r2, r3
 8003e4c:	68fb      	ldr	r3, [r7, #12]
 8003e4e:	851a      	strh	r2, [r3, #40]	; 0x28
 8003e50:	68fb      	ldr	r3, [r7, #12]
 8003e52:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003e54:	b2da      	uxtb	r2, r3
 8003e56:	8979      	ldrh	r1, [r7, #10]
 8003e58:	4b48      	ldr	r3, [pc, #288]	; (8003f7c <HAL_I2C_Master_Transmit+0x1e0>)
 8003e5a:	9300      	str	r3, [sp, #0]
 8003e5c:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003e60:	68f8      	ldr	r0, [r7, #12]
 8003e62:	f000 ff4d 	bl	8004d00 <I2C_TransferConfig>
 8003e66:	e05b      	b.n	8003f20 <HAL_I2C_Master_Transmit+0x184>
 8003e68:	697a      	ldr	r2, [r7, #20]
 8003e6a:	6a39      	ldr	r1, [r7, #32]
 8003e6c:	68f8      	ldr	r0, [r7, #12]
 8003e6e:	f000 fdea 	bl	8004a46 <I2C_WaitOnTXISFlagUntilTimeout>
 8003e72:	4603      	mov	r3, r0
 8003e74:	2b00      	cmp	r3, #0
 8003e76:	d001      	beq.n	8003e7c <HAL_I2C_Master_Transmit+0xe0>
 8003e78:	2301      	movs	r3, #1
 8003e7a:	e07b      	b.n	8003f74 <HAL_I2C_Master_Transmit+0x1d8>
 8003e7c:	68fb      	ldr	r3, [r7, #12]
 8003e7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e80:	781a      	ldrb	r2, [r3, #0]
 8003e82:	68fb      	ldr	r3, [r7, #12]
 8003e84:	681b      	ldr	r3, [r3, #0]
 8003e86:	629a      	str	r2, [r3, #40]	; 0x28
 8003e88:	68fb      	ldr	r3, [r7, #12]
 8003e8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e8c:	1c5a      	adds	r2, r3, #1
 8003e8e:	68fb      	ldr	r3, [r7, #12]
 8003e90:	625a      	str	r2, [r3, #36]	; 0x24
 8003e92:	68fb      	ldr	r3, [r7, #12]
 8003e94:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003e96:	b29b      	uxth	r3, r3
 8003e98:	3b01      	subs	r3, #1
 8003e9a:	b29a      	uxth	r2, r3
 8003e9c:	68fb      	ldr	r3, [r7, #12]
 8003e9e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003ea0:	68fb      	ldr	r3, [r7, #12]
 8003ea2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003ea4:	3b01      	subs	r3, #1
 8003ea6:	b29a      	uxth	r2, r3
 8003ea8:	68fb      	ldr	r3, [r7, #12]
 8003eaa:	851a      	strh	r2, [r3, #40]	; 0x28
 8003eac:	68fb      	ldr	r3, [r7, #12]
 8003eae:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003eb0:	b29b      	uxth	r3, r3
 8003eb2:	2b00      	cmp	r3, #0
 8003eb4:	d034      	beq.n	8003f20 <HAL_I2C_Master_Transmit+0x184>
 8003eb6:	68fb      	ldr	r3, [r7, #12]
 8003eb8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003eba:	2b00      	cmp	r3, #0
 8003ebc:	d130      	bne.n	8003f20 <HAL_I2C_Master_Transmit+0x184>
 8003ebe:	697b      	ldr	r3, [r7, #20]
 8003ec0:	9300      	str	r3, [sp, #0]
 8003ec2:	6a3b      	ldr	r3, [r7, #32]
 8003ec4:	2200      	movs	r2, #0
 8003ec6:	2180      	movs	r1, #128	; 0x80
 8003ec8:	68f8      	ldr	r0, [r7, #12]
 8003eca:	f000 fd7c 	bl	80049c6 <I2C_WaitOnFlagUntilTimeout>
 8003ece:	4603      	mov	r3, r0
 8003ed0:	2b00      	cmp	r3, #0
 8003ed2:	d001      	beq.n	8003ed8 <HAL_I2C_Master_Transmit+0x13c>
 8003ed4:	2301      	movs	r3, #1
 8003ed6:	e04d      	b.n	8003f74 <HAL_I2C_Master_Transmit+0x1d8>
 8003ed8:	68fb      	ldr	r3, [r7, #12]
 8003eda:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003edc:	b29b      	uxth	r3, r3
 8003ede:	2bff      	cmp	r3, #255	; 0xff
 8003ee0:	d90e      	bls.n	8003f00 <HAL_I2C_Master_Transmit+0x164>
 8003ee2:	68fb      	ldr	r3, [r7, #12]
 8003ee4:	22ff      	movs	r2, #255	; 0xff
 8003ee6:	851a      	strh	r2, [r3, #40]	; 0x28
 8003ee8:	68fb      	ldr	r3, [r7, #12]
 8003eea:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003eec:	b2da      	uxtb	r2, r3
 8003eee:	8979      	ldrh	r1, [r7, #10]
 8003ef0:	2300      	movs	r3, #0
 8003ef2:	9300      	str	r3, [sp, #0]
 8003ef4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003ef8:	68f8      	ldr	r0, [r7, #12]
 8003efa:	f000 ff01 	bl	8004d00 <I2C_TransferConfig>
 8003efe:	e00f      	b.n	8003f20 <HAL_I2C_Master_Transmit+0x184>
 8003f00:	68fb      	ldr	r3, [r7, #12]
 8003f02:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003f04:	b29a      	uxth	r2, r3
 8003f06:	68fb      	ldr	r3, [r7, #12]
 8003f08:	851a      	strh	r2, [r3, #40]	; 0x28
 8003f0a:	68fb      	ldr	r3, [r7, #12]
 8003f0c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003f0e:	b2da      	uxtb	r2, r3
 8003f10:	8979      	ldrh	r1, [r7, #10]
 8003f12:	2300      	movs	r3, #0
 8003f14:	9300      	str	r3, [sp, #0]
 8003f16:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003f1a:	68f8      	ldr	r0, [r7, #12]
 8003f1c:	f000 fef0 	bl	8004d00 <I2C_TransferConfig>
 8003f20:	68fb      	ldr	r3, [r7, #12]
 8003f22:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003f24:	b29b      	uxth	r3, r3
 8003f26:	2b00      	cmp	r3, #0
 8003f28:	d19e      	bne.n	8003e68 <HAL_I2C_Master_Transmit+0xcc>
 8003f2a:	697a      	ldr	r2, [r7, #20]
 8003f2c:	6a39      	ldr	r1, [r7, #32]
 8003f2e:	68f8      	ldr	r0, [r7, #12]
 8003f30:	f000 fdc9 	bl	8004ac6 <I2C_WaitOnSTOPFlagUntilTimeout>
 8003f34:	4603      	mov	r3, r0
 8003f36:	2b00      	cmp	r3, #0
 8003f38:	d001      	beq.n	8003f3e <HAL_I2C_Master_Transmit+0x1a2>
 8003f3a:	2301      	movs	r3, #1
 8003f3c:	e01a      	b.n	8003f74 <HAL_I2C_Master_Transmit+0x1d8>
 8003f3e:	68fb      	ldr	r3, [r7, #12]
 8003f40:	681b      	ldr	r3, [r3, #0]
 8003f42:	2220      	movs	r2, #32
 8003f44:	61da      	str	r2, [r3, #28]
 8003f46:	68fb      	ldr	r3, [r7, #12]
 8003f48:	681b      	ldr	r3, [r3, #0]
 8003f4a:	6859      	ldr	r1, [r3, #4]
 8003f4c:	68fb      	ldr	r3, [r7, #12]
 8003f4e:	681a      	ldr	r2, [r3, #0]
 8003f50:	4b0b      	ldr	r3, [pc, #44]	; (8003f80 <HAL_I2C_Master_Transmit+0x1e4>)
 8003f52:	400b      	ands	r3, r1
 8003f54:	6053      	str	r3, [r2, #4]
 8003f56:	68fb      	ldr	r3, [r7, #12]
 8003f58:	2220      	movs	r2, #32
 8003f5a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003f5e:	68fb      	ldr	r3, [r7, #12]
 8003f60:	2200      	movs	r2, #0
 8003f62:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003f66:	68fb      	ldr	r3, [r7, #12]
 8003f68:	2200      	movs	r2, #0
 8003f6a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003f6e:	2300      	movs	r3, #0
 8003f70:	e000      	b.n	8003f74 <HAL_I2C_Master_Transmit+0x1d8>
 8003f72:	2302      	movs	r3, #2
 8003f74:	4618      	mov	r0, r3
 8003f76:	3718      	adds	r7, #24
 8003f78:	46bd      	mov	sp, r7
 8003f7a:	bd80      	pop	{r7, pc}
 8003f7c:	80002000 	.word	0x80002000
 8003f80:	fe00e800 	.word	0xfe00e800

08003f84 <HAL_I2C_EV_IRQHandler>:
 8003f84:	b580      	push	{r7, lr}
 8003f86:	b084      	sub	sp, #16
 8003f88:	af00      	add	r7, sp, #0
 8003f8a:	6078      	str	r0, [r7, #4]
 8003f8c:	687b      	ldr	r3, [r7, #4]
 8003f8e:	681b      	ldr	r3, [r3, #0]
 8003f90:	699b      	ldr	r3, [r3, #24]
 8003f92:	60fb      	str	r3, [r7, #12]
 8003f94:	687b      	ldr	r3, [r7, #4]
 8003f96:	681b      	ldr	r3, [r3, #0]
 8003f98:	681b      	ldr	r3, [r3, #0]
 8003f9a:	60bb      	str	r3, [r7, #8]
 8003f9c:	687b      	ldr	r3, [r7, #4]
 8003f9e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003fa0:	2b00      	cmp	r3, #0
 8003fa2:	d005      	beq.n	8003fb0 <HAL_I2C_EV_IRQHandler+0x2c>
 8003fa4:	687b      	ldr	r3, [r7, #4]
 8003fa6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003fa8:	68ba      	ldr	r2, [r7, #8]
 8003faa:	68f9      	ldr	r1, [r7, #12]
 8003fac:	6878      	ldr	r0, [r7, #4]
 8003fae:	4798      	blx	r3
 8003fb0:	bf00      	nop
 8003fb2:	3710      	adds	r7, #16
 8003fb4:	46bd      	mov	sp, r7
 8003fb6:	bd80      	pop	{r7, pc}

08003fb8 <HAL_I2C_ER_IRQHandler>:
 8003fb8:	b580      	push	{r7, lr}
 8003fba:	b086      	sub	sp, #24
 8003fbc:	af00      	add	r7, sp, #0
 8003fbe:	6078      	str	r0, [r7, #4]
 8003fc0:	687b      	ldr	r3, [r7, #4]
 8003fc2:	681b      	ldr	r3, [r3, #0]
 8003fc4:	699b      	ldr	r3, [r3, #24]
 8003fc6:	617b      	str	r3, [r7, #20]
 8003fc8:	687b      	ldr	r3, [r7, #4]
 8003fca:	681b      	ldr	r3, [r3, #0]
 8003fcc:	681b      	ldr	r3, [r3, #0]
 8003fce:	613b      	str	r3, [r7, #16]
 8003fd0:	697b      	ldr	r3, [r7, #20]
 8003fd2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003fd6:	2b00      	cmp	r3, #0
 8003fd8:	d00f      	beq.n	8003ffa <HAL_I2C_ER_IRQHandler+0x42>
 8003fda:	693b      	ldr	r3, [r7, #16]
 8003fdc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003fe0:	2b00      	cmp	r3, #0
 8003fe2:	d00a      	beq.n	8003ffa <HAL_I2C_ER_IRQHandler+0x42>
 8003fe4:	687b      	ldr	r3, [r7, #4]
 8003fe6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003fe8:	f043 0201 	orr.w	r2, r3, #1
 8003fec:	687b      	ldr	r3, [r7, #4]
 8003fee:	645a      	str	r2, [r3, #68]	; 0x44
 8003ff0:	687b      	ldr	r3, [r7, #4]
 8003ff2:	681b      	ldr	r3, [r3, #0]
 8003ff4:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003ff8:	61da      	str	r2, [r3, #28]
 8003ffa:	697b      	ldr	r3, [r7, #20]
 8003ffc:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004000:	2b00      	cmp	r3, #0
 8004002:	d00f      	beq.n	8004024 <HAL_I2C_ER_IRQHandler+0x6c>
 8004004:	693b      	ldr	r3, [r7, #16]
 8004006:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800400a:	2b00      	cmp	r3, #0
 800400c:	d00a      	beq.n	8004024 <HAL_I2C_ER_IRQHandler+0x6c>
 800400e:	687b      	ldr	r3, [r7, #4]
 8004010:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004012:	f043 0208 	orr.w	r2, r3, #8
 8004016:	687b      	ldr	r3, [r7, #4]
 8004018:	645a      	str	r2, [r3, #68]	; 0x44
 800401a:	687b      	ldr	r3, [r7, #4]
 800401c:	681b      	ldr	r3, [r3, #0]
 800401e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004022:	61da      	str	r2, [r3, #28]
 8004024:	697b      	ldr	r3, [r7, #20]
 8004026:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800402a:	2b00      	cmp	r3, #0
 800402c:	d00f      	beq.n	800404e <HAL_I2C_ER_IRQHandler+0x96>
 800402e:	693b      	ldr	r3, [r7, #16]
 8004030:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004034:	2b00      	cmp	r3, #0
 8004036:	d00a      	beq.n	800404e <HAL_I2C_ER_IRQHandler+0x96>
 8004038:	687b      	ldr	r3, [r7, #4]
 800403a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800403c:	f043 0202 	orr.w	r2, r3, #2
 8004040:	687b      	ldr	r3, [r7, #4]
 8004042:	645a      	str	r2, [r3, #68]	; 0x44
 8004044:	687b      	ldr	r3, [r7, #4]
 8004046:	681b      	ldr	r3, [r3, #0]
 8004048:	f44f 7200 	mov.w	r2, #512	; 0x200
 800404c:	61da      	str	r2, [r3, #28]
 800404e:	687b      	ldr	r3, [r7, #4]
 8004050:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004052:	60fb      	str	r3, [r7, #12]
 8004054:	68fb      	ldr	r3, [r7, #12]
 8004056:	f003 030b 	and.w	r3, r3, #11
 800405a:	2b00      	cmp	r3, #0
 800405c:	d003      	beq.n	8004066 <HAL_I2C_ER_IRQHandler+0xae>
 800405e:	68f9      	ldr	r1, [r7, #12]
 8004060:	6878      	ldr	r0, [r7, #4]
 8004062:	f000 fb77 	bl	8004754 <I2C_ITError>
 8004066:	bf00      	nop
 8004068:	3718      	adds	r7, #24
 800406a:	46bd      	mov	sp, r7
 800406c:	bd80      	pop	{r7, pc}

0800406e <HAL_I2C_SlaveTxCpltCallback>:
 800406e:	b480      	push	{r7}
 8004070:	b083      	sub	sp, #12
 8004072:	af00      	add	r7, sp, #0
 8004074:	6078      	str	r0, [r7, #4]
 8004076:	bf00      	nop
 8004078:	370c      	adds	r7, #12
 800407a:	46bd      	mov	sp, r7
 800407c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004080:	4770      	bx	lr

08004082 <HAL_I2C_SlaveRxCpltCallback>:
 8004082:	b480      	push	{r7}
 8004084:	b083      	sub	sp, #12
 8004086:	af00      	add	r7, sp, #0
 8004088:	6078      	str	r0, [r7, #4]
 800408a:	bf00      	nop
 800408c:	370c      	adds	r7, #12
 800408e:	46bd      	mov	sp, r7
 8004090:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004094:	4770      	bx	lr

08004096 <HAL_I2C_AddrCallback>:
 8004096:	b480      	push	{r7}
 8004098:	b083      	sub	sp, #12
 800409a:	af00      	add	r7, sp, #0
 800409c:	6078      	str	r0, [r7, #4]
 800409e:	460b      	mov	r3, r1
 80040a0:	70fb      	strb	r3, [r7, #3]
 80040a2:	4613      	mov	r3, r2
 80040a4:	803b      	strh	r3, [r7, #0]
 80040a6:	bf00      	nop
 80040a8:	370c      	adds	r7, #12
 80040aa:	46bd      	mov	sp, r7
 80040ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040b0:	4770      	bx	lr

080040b2 <HAL_I2C_ListenCpltCallback>:
 80040b2:	b480      	push	{r7}
 80040b4:	b083      	sub	sp, #12
 80040b6:	af00      	add	r7, sp, #0
 80040b8:	6078      	str	r0, [r7, #4]
 80040ba:	bf00      	nop
 80040bc:	370c      	adds	r7, #12
 80040be:	46bd      	mov	sp, r7
 80040c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040c4:	4770      	bx	lr

080040c6 <HAL_I2C_ErrorCallback>:
 80040c6:	b480      	push	{r7}
 80040c8:	b083      	sub	sp, #12
 80040ca:	af00      	add	r7, sp, #0
 80040cc:	6078      	str	r0, [r7, #4]
 80040ce:	bf00      	nop
 80040d0:	370c      	adds	r7, #12
 80040d2:	46bd      	mov	sp, r7
 80040d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040d8:	4770      	bx	lr

080040da <HAL_I2C_AbortCpltCallback>:
 80040da:	b480      	push	{r7}
 80040dc:	b083      	sub	sp, #12
 80040de:	af00      	add	r7, sp, #0
 80040e0:	6078      	str	r0, [r7, #4]
 80040e2:	bf00      	nop
 80040e4:	370c      	adds	r7, #12
 80040e6:	46bd      	mov	sp, r7
 80040e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040ec:	4770      	bx	lr

080040ee <I2C_Slave_ISR_IT>:
 80040ee:	b580      	push	{r7, lr}
 80040f0:	b086      	sub	sp, #24
 80040f2:	af00      	add	r7, sp, #0
 80040f4:	60f8      	str	r0, [r7, #12]
 80040f6:	60b9      	str	r1, [r7, #8]
 80040f8:	607a      	str	r2, [r7, #4]
 80040fa:	68fb      	ldr	r3, [r7, #12]
 80040fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80040fe:	617b      	str	r3, [r7, #20]
 8004100:	68bb      	ldr	r3, [r7, #8]
 8004102:	613b      	str	r3, [r7, #16]
 8004104:	68fb      	ldr	r3, [r7, #12]
 8004106:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800410a:	2b01      	cmp	r3, #1
 800410c:	d101      	bne.n	8004112 <I2C_Slave_ISR_IT+0x24>
 800410e:	2302      	movs	r3, #2
 8004110:	e0e1      	b.n	80042d6 <I2C_Slave_ISR_IT+0x1e8>
 8004112:	68fb      	ldr	r3, [r7, #12]
 8004114:	2201      	movs	r2, #1
 8004116:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800411a:	693b      	ldr	r3, [r7, #16]
 800411c:	f003 0320 	and.w	r3, r3, #32
 8004120:	2b00      	cmp	r3, #0
 8004122:	d008      	beq.n	8004136 <I2C_Slave_ISR_IT+0x48>
 8004124:	687b      	ldr	r3, [r7, #4]
 8004126:	f003 0320 	and.w	r3, r3, #32
 800412a:	2b00      	cmp	r3, #0
 800412c:	d003      	beq.n	8004136 <I2C_Slave_ISR_IT+0x48>
 800412e:	6939      	ldr	r1, [r7, #16]
 8004130:	68f8      	ldr	r0, [r7, #12]
 8004132:	f000 f9b5 	bl	80044a0 <I2C_ITSlaveCplt>
 8004136:	693b      	ldr	r3, [r7, #16]
 8004138:	f003 0310 	and.w	r3, r3, #16
 800413c:	2b00      	cmp	r3, #0
 800413e:	d04b      	beq.n	80041d8 <I2C_Slave_ISR_IT+0xea>
 8004140:	687b      	ldr	r3, [r7, #4]
 8004142:	f003 0310 	and.w	r3, r3, #16
 8004146:	2b00      	cmp	r3, #0
 8004148:	d046      	beq.n	80041d8 <I2C_Slave_ISR_IT+0xea>
 800414a:	68fb      	ldr	r3, [r7, #12]
 800414c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800414e:	b29b      	uxth	r3, r3
 8004150:	2b00      	cmp	r3, #0
 8004152:	d128      	bne.n	80041a6 <I2C_Slave_ISR_IT+0xb8>
 8004154:	68fb      	ldr	r3, [r7, #12]
 8004156:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800415a:	b2db      	uxtb	r3, r3
 800415c:	2b28      	cmp	r3, #40	; 0x28
 800415e:	d108      	bne.n	8004172 <I2C_Slave_ISR_IT+0x84>
 8004160:	697b      	ldr	r3, [r7, #20]
 8004162:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8004166:	d104      	bne.n	8004172 <I2C_Slave_ISR_IT+0x84>
 8004168:	6939      	ldr	r1, [r7, #16]
 800416a:	68f8      	ldr	r0, [r7, #12]
 800416c:	f000 fa9e 	bl	80046ac <I2C_ITListenCplt>
 8004170:	e031      	b.n	80041d6 <I2C_Slave_ISR_IT+0xe8>
 8004172:	68fb      	ldr	r3, [r7, #12]
 8004174:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004178:	b2db      	uxtb	r3, r3
 800417a:	2b29      	cmp	r3, #41	; 0x29
 800417c:	d10e      	bne.n	800419c <I2C_Slave_ISR_IT+0xae>
 800417e:	697b      	ldr	r3, [r7, #20]
 8004180:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8004184:	d00a      	beq.n	800419c <I2C_Slave_ISR_IT+0xae>
 8004186:	68fb      	ldr	r3, [r7, #12]
 8004188:	681b      	ldr	r3, [r3, #0]
 800418a:	2210      	movs	r2, #16
 800418c:	61da      	str	r2, [r3, #28]
 800418e:	68f8      	ldr	r0, [r7, #12]
 8004190:	f000 fbd7 	bl	8004942 <I2C_Flush_TXDR>
 8004194:	68f8      	ldr	r0, [r7, #12]
 8004196:	f000 f926 	bl	80043e6 <I2C_ITSlaveSeqCplt>
 800419a:	e01c      	b.n	80041d6 <I2C_Slave_ISR_IT+0xe8>
 800419c:	68fb      	ldr	r3, [r7, #12]
 800419e:	681b      	ldr	r3, [r3, #0]
 80041a0:	2210      	movs	r2, #16
 80041a2:	61da      	str	r2, [r3, #28]
 80041a4:	e08f      	b.n	80042c6 <I2C_Slave_ISR_IT+0x1d8>
 80041a6:	68fb      	ldr	r3, [r7, #12]
 80041a8:	681b      	ldr	r3, [r3, #0]
 80041aa:	2210      	movs	r2, #16
 80041ac:	61da      	str	r2, [r3, #28]
 80041ae:	68fb      	ldr	r3, [r7, #12]
 80041b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80041b2:	f043 0204 	orr.w	r2, r3, #4
 80041b6:	68fb      	ldr	r3, [r7, #12]
 80041b8:	645a      	str	r2, [r3, #68]	; 0x44
 80041ba:	697b      	ldr	r3, [r7, #20]
 80041bc:	2b00      	cmp	r3, #0
 80041be:	d003      	beq.n	80041c8 <I2C_Slave_ISR_IT+0xda>
 80041c0:	697b      	ldr	r3, [r7, #20]
 80041c2:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80041c6:	d17e      	bne.n	80042c6 <I2C_Slave_ISR_IT+0x1d8>
 80041c8:	68fb      	ldr	r3, [r7, #12]
 80041ca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80041cc:	4619      	mov	r1, r3
 80041ce:	68f8      	ldr	r0, [r7, #12]
 80041d0:	f000 fac0 	bl	8004754 <I2C_ITError>
 80041d4:	e077      	b.n	80042c6 <I2C_Slave_ISR_IT+0x1d8>
 80041d6:	e076      	b.n	80042c6 <I2C_Slave_ISR_IT+0x1d8>
 80041d8:	693b      	ldr	r3, [r7, #16]
 80041da:	f003 0304 	and.w	r3, r3, #4
 80041de:	2b00      	cmp	r3, #0
 80041e0:	d02f      	beq.n	8004242 <I2C_Slave_ISR_IT+0x154>
 80041e2:	687b      	ldr	r3, [r7, #4]
 80041e4:	f003 0304 	and.w	r3, r3, #4
 80041e8:	2b00      	cmp	r3, #0
 80041ea:	d02a      	beq.n	8004242 <I2C_Slave_ISR_IT+0x154>
 80041ec:	68fb      	ldr	r3, [r7, #12]
 80041ee:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80041f0:	b29b      	uxth	r3, r3
 80041f2:	2b00      	cmp	r3, #0
 80041f4:	d018      	beq.n	8004228 <I2C_Slave_ISR_IT+0x13a>
 80041f6:	68fb      	ldr	r3, [r7, #12]
 80041f8:	681b      	ldr	r3, [r3, #0]
 80041fa:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80041fc:	68fb      	ldr	r3, [r7, #12]
 80041fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004200:	b2d2      	uxtb	r2, r2
 8004202:	701a      	strb	r2, [r3, #0]
 8004204:	68fb      	ldr	r3, [r7, #12]
 8004206:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004208:	1c5a      	adds	r2, r3, #1
 800420a:	68fb      	ldr	r3, [r7, #12]
 800420c:	625a      	str	r2, [r3, #36]	; 0x24
 800420e:	68fb      	ldr	r3, [r7, #12]
 8004210:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004212:	3b01      	subs	r3, #1
 8004214:	b29a      	uxth	r2, r3
 8004216:	68fb      	ldr	r3, [r7, #12]
 8004218:	851a      	strh	r2, [r3, #40]	; 0x28
 800421a:	68fb      	ldr	r3, [r7, #12]
 800421c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800421e:	b29b      	uxth	r3, r3
 8004220:	3b01      	subs	r3, #1
 8004222:	b29a      	uxth	r2, r3
 8004224:	68fb      	ldr	r3, [r7, #12]
 8004226:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004228:	68fb      	ldr	r3, [r7, #12]
 800422a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800422c:	b29b      	uxth	r3, r3
 800422e:	2b00      	cmp	r3, #0
 8004230:	d14b      	bne.n	80042ca <I2C_Slave_ISR_IT+0x1dc>
 8004232:	697b      	ldr	r3, [r7, #20]
 8004234:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8004238:	d047      	beq.n	80042ca <I2C_Slave_ISR_IT+0x1dc>
 800423a:	68f8      	ldr	r0, [r7, #12]
 800423c:	f000 f8d3 	bl	80043e6 <I2C_ITSlaveSeqCplt>
 8004240:	e043      	b.n	80042ca <I2C_Slave_ISR_IT+0x1dc>
 8004242:	693b      	ldr	r3, [r7, #16]
 8004244:	f003 0308 	and.w	r3, r3, #8
 8004248:	2b00      	cmp	r3, #0
 800424a:	d009      	beq.n	8004260 <I2C_Slave_ISR_IT+0x172>
 800424c:	687b      	ldr	r3, [r7, #4]
 800424e:	f003 0308 	and.w	r3, r3, #8
 8004252:	2b00      	cmp	r3, #0
 8004254:	d004      	beq.n	8004260 <I2C_Slave_ISR_IT+0x172>
 8004256:	6939      	ldr	r1, [r7, #16]
 8004258:	68f8      	ldr	r0, [r7, #12]
 800425a:	f000 f840 	bl	80042de <I2C_ITAddrCplt>
 800425e:	e035      	b.n	80042cc <I2C_Slave_ISR_IT+0x1de>
 8004260:	693b      	ldr	r3, [r7, #16]
 8004262:	f003 0302 	and.w	r3, r3, #2
 8004266:	2b00      	cmp	r3, #0
 8004268:	d030      	beq.n	80042cc <I2C_Slave_ISR_IT+0x1de>
 800426a:	687b      	ldr	r3, [r7, #4]
 800426c:	f003 0302 	and.w	r3, r3, #2
 8004270:	2b00      	cmp	r3, #0
 8004272:	d02b      	beq.n	80042cc <I2C_Slave_ISR_IT+0x1de>
 8004274:	68fb      	ldr	r3, [r7, #12]
 8004276:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004278:	b29b      	uxth	r3, r3
 800427a:	2b00      	cmp	r3, #0
 800427c:	d018      	beq.n	80042b0 <I2C_Slave_ISR_IT+0x1c2>
 800427e:	68fb      	ldr	r3, [r7, #12]
 8004280:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004282:	781a      	ldrb	r2, [r3, #0]
 8004284:	68fb      	ldr	r3, [r7, #12]
 8004286:	681b      	ldr	r3, [r3, #0]
 8004288:	629a      	str	r2, [r3, #40]	; 0x28
 800428a:	68fb      	ldr	r3, [r7, #12]
 800428c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800428e:	1c5a      	adds	r2, r3, #1
 8004290:	68fb      	ldr	r3, [r7, #12]
 8004292:	625a      	str	r2, [r3, #36]	; 0x24
 8004294:	68fb      	ldr	r3, [r7, #12]
 8004296:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004298:	b29b      	uxth	r3, r3
 800429a:	3b01      	subs	r3, #1
 800429c:	b29a      	uxth	r2, r3
 800429e:	68fb      	ldr	r3, [r7, #12]
 80042a0:	855a      	strh	r2, [r3, #42]	; 0x2a
 80042a2:	68fb      	ldr	r3, [r7, #12]
 80042a4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80042a6:	3b01      	subs	r3, #1
 80042a8:	b29a      	uxth	r2, r3
 80042aa:	68fb      	ldr	r3, [r7, #12]
 80042ac:	851a      	strh	r2, [r3, #40]	; 0x28
 80042ae:	e00d      	b.n	80042cc <I2C_Slave_ISR_IT+0x1de>
 80042b0:	697b      	ldr	r3, [r7, #20]
 80042b2:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80042b6:	d002      	beq.n	80042be <I2C_Slave_ISR_IT+0x1d0>
 80042b8:	697b      	ldr	r3, [r7, #20]
 80042ba:	2b00      	cmp	r3, #0
 80042bc:	d106      	bne.n	80042cc <I2C_Slave_ISR_IT+0x1de>
 80042be:	68f8      	ldr	r0, [r7, #12]
 80042c0:	f000 f891 	bl	80043e6 <I2C_ITSlaveSeqCplt>
 80042c4:	e002      	b.n	80042cc <I2C_Slave_ISR_IT+0x1de>
 80042c6:	bf00      	nop
 80042c8:	e000      	b.n	80042cc <I2C_Slave_ISR_IT+0x1de>
 80042ca:	bf00      	nop
 80042cc:	68fb      	ldr	r3, [r7, #12]
 80042ce:	2200      	movs	r2, #0
 80042d0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80042d4:	2300      	movs	r3, #0
 80042d6:	4618      	mov	r0, r3
 80042d8:	3718      	adds	r7, #24
 80042da:	46bd      	mov	sp, r7
 80042dc:	bd80      	pop	{r7, pc}

080042de <I2C_ITAddrCplt>:
 80042de:	b580      	push	{r7, lr}
 80042e0:	b084      	sub	sp, #16
 80042e2:	af00      	add	r7, sp, #0
 80042e4:	6078      	str	r0, [r7, #4]
 80042e6:	6039      	str	r1, [r7, #0]
 80042e8:	687b      	ldr	r3, [r7, #4]
 80042ea:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80042ee:	b2db      	uxtb	r3, r3
 80042f0:	f003 0328 	and.w	r3, r3, #40	; 0x28
 80042f4:	2b28      	cmp	r3, #40	; 0x28
 80042f6:	d16a      	bne.n	80043ce <I2C_ITAddrCplt+0xf0>
 80042f8:	687b      	ldr	r3, [r7, #4]
 80042fa:	681b      	ldr	r3, [r3, #0]
 80042fc:	699b      	ldr	r3, [r3, #24]
 80042fe:	0c1b      	lsrs	r3, r3, #16
 8004300:	b2db      	uxtb	r3, r3
 8004302:	f003 0301 	and.w	r3, r3, #1
 8004306:	73fb      	strb	r3, [r7, #15]
 8004308:	687b      	ldr	r3, [r7, #4]
 800430a:	681b      	ldr	r3, [r3, #0]
 800430c:	699b      	ldr	r3, [r3, #24]
 800430e:	0c1b      	lsrs	r3, r3, #16
 8004310:	b29b      	uxth	r3, r3
 8004312:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 8004316:	81bb      	strh	r3, [r7, #12]
 8004318:	687b      	ldr	r3, [r7, #4]
 800431a:	681b      	ldr	r3, [r3, #0]
 800431c:	689b      	ldr	r3, [r3, #8]
 800431e:	b29b      	uxth	r3, r3
 8004320:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8004324:	817b      	strh	r3, [r7, #10]
 8004326:	687b      	ldr	r3, [r7, #4]
 8004328:	681b      	ldr	r3, [r3, #0]
 800432a:	68db      	ldr	r3, [r3, #12]
 800432c:	b29b      	uxth	r3, r3
 800432e:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 8004332:	813b      	strh	r3, [r7, #8]
 8004334:	687b      	ldr	r3, [r7, #4]
 8004336:	68db      	ldr	r3, [r3, #12]
 8004338:	2b02      	cmp	r3, #2
 800433a:	d138      	bne.n	80043ae <I2C_ITAddrCplt+0xd0>
 800433c:	897b      	ldrh	r3, [r7, #10]
 800433e:	09db      	lsrs	r3, r3, #7
 8004340:	b29a      	uxth	r2, r3
 8004342:	89bb      	ldrh	r3, [r7, #12]
 8004344:	4053      	eors	r3, r2
 8004346:	b29b      	uxth	r3, r3
 8004348:	f003 0306 	and.w	r3, r3, #6
 800434c:	2b00      	cmp	r3, #0
 800434e:	d11c      	bne.n	800438a <I2C_ITAddrCplt+0xac>
 8004350:	897b      	ldrh	r3, [r7, #10]
 8004352:	81bb      	strh	r3, [r7, #12]
 8004354:	687b      	ldr	r3, [r7, #4]
 8004356:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004358:	1c5a      	adds	r2, r3, #1
 800435a:	687b      	ldr	r3, [r7, #4]
 800435c:	649a      	str	r2, [r3, #72]	; 0x48
 800435e:	687b      	ldr	r3, [r7, #4]
 8004360:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004362:	2b02      	cmp	r3, #2
 8004364:	d13b      	bne.n	80043de <I2C_ITAddrCplt+0x100>
 8004366:	687b      	ldr	r3, [r7, #4]
 8004368:	2200      	movs	r2, #0
 800436a:	649a      	str	r2, [r3, #72]	; 0x48
 800436c:	687b      	ldr	r3, [r7, #4]
 800436e:	681b      	ldr	r3, [r3, #0]
 8004370:	2208      	movs	r2, #8
 8004372:	61da      	str	r2, [r3, #28]
 8004374:	687b      	ldr	r3, [r7, #4]
 8004376:	2200      	movs	r2, #0
 8004378:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800437c:	89ba      	ldrh	r2, [r7, #12]
 800437e:	7bfb      	ldrb	r3, [r7, #15]
 8004380:	4619      	mov	r1, r3
 8004382:	6878      	ldr	r0, [r7, #4]
 8004384:	f7ff fe87 	bl	8004096 <HAL_I2C_AddrCallback>
 8004388:	e029      	b.n	80043de <I2C_ITAddrCplt+0x100>
 800438a:	893b      	ldrh	r3, [r7, #8]
 800438c:	81bb      	strh	r3, [r7, #12]
 800438e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004392:	6878      	ldr	r0, [r7, #4]
 8004394:	f000 fce6 	bl	8004d64 <I2C_Disable_IRQ>
 8004398:	687b      	ldr	r3, [r7, #4]
 800439a:	2200      	movs	r2, #0
 800439c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80043a0:	89ba      	ldrh	r2, [r7, #12]
 80043a2:	7bfb      	ldrb	r3, [r7, #15]
 80043a4:	4619      	mov	r1, r3
 80043a6:	6878      	ldr	r0, [r7, #4]
 80043a8:	f7ff fe75 	bl	8004096 <HAL_I2C_AddrCallback>
 80043ac:	e017      	b.n	80043de <I2C_ITAddrCplt+0x100>
 80043ae:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80043b2:	6878      	ldr	r0, [r7, #4]
 80043b4:	f000 fcd6 	bl	8004d64 <I2C_Disable_IRQ>
 80043b8:	687b      	ldr	r3, [r7, #4]
 80043ba:	2200      	movs	r2, #0
 80043bc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80043c0:	89ba      	ldrh	r2, [r7, #12]
 80043c2:	7bfb      	ldrb	r3, [r7, #15]
 80043c4:	4619      	mov	r1, r3
 80043c6:	6878      	ldr	r0, [r7, #4]
 80043c8:	f7ff fe65 	bl	8004096 <HAL_I2C_AddrCallback>
 80043cc:	e007      	b.n	80043de <I2C_ITAddrCplt+0x100>
 80043ce:	687b      	ldr	r3, [r7, #4]
 80043d0:	681b      	ldr	r3, [r3, #0]
 80043d2:	2208      	movs	r2, #8
 80043d4:	61da      	str	r2, [r3, #28]
 80043d6:	687b      	ldr	r3, [r7, #4]
 80043d8:	2200      	movs	r2, #0
 80043da:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80043de:	bf00      	nop
 80043e0:	3710      	adds	r7, #16
 80043e2:	46bd      	mov	sp, r7
 80043e4:	bd80      	pop	{r7, pc}

080043e6 <I2C_ITSlaveSeqCplt>:
 80043e6:	b580      	push	{r7, lr}
 80043e8:	b084      	sub	sp, #16
 80043ea:	af00      	add	r7, sp, #0
 80043ec:	6078      	str	r0, [r7, #4]
 80043ee:	687b      	ldr	r3, [r7, #4]
 80043f0:	681b      	ldr	r3, [r3, #0]
 80043f2:	681b      	ldr	r3, [r3, #0]
 80043f4:	60fb      	str	r3, [r7, #12]
 80043f6:	687b      	ldr	r3, [r7, #4]
 80043f8:	2200      	movs	r2, #0
 80043fa:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80043fe:	68fb      	ldr	r3, [r7, #12]
 8004400:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004404:	2b00      	cmp	r3, #0
 8004406:	d008      	beq.n	800441a <I2C_ITSlaveSeqCplt+0x34>
 8004408:	687b      	ldr	r3, [r7, #4]
 800440a:	681b      	ldr	r3, [r3, #0]
 800440c:	681a      	ldr	r2, [r3, #0]
 800440e:	687b      	ldr	r3, [r7, #4]
 8004410:	681b      	ldr	r3, [r3, #0]
 8004412:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8004416:	601a      	str	r2, [r3, #0]
 8004418:	e00c      	b.n	8004434 <I2C_ITSlaveSeqCplt+0x4e>
 800441a:	68fb      	ldr	r3, [r7, #12]
 800441c:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8004420:	2b00      	cmp	r3, #0
 8004422:	d007      	beq.n	8004434 <I2C_ITSlaveSeqCplt+0x4e>
 8004424:	687b      	ldr	r3, [r7, #4]
 8004426:	681b      	ldr	r3, [r3, #0]
 8004428:	681a      	ldr	r2, [r3, #0]
 800442a:	687b      	ldr	r3, [r7, #4]
 800442c:	681b      	ldr	r3, [r3, #0]
 800442e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004432:	601a      	str	r2, [r3, #0]
 8004434:	687b      	ldr	r3, [r7, #4]
 8004436:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800443a:	b2db      	uxtb	r3, r3
 800443c:	2b29      	cmp	r3, #41	; 0x29
 800443e:	d112      	bne.n	8004466 <I2C_ITSlaveSeqCplt+0x80>
 8004440:	687b      	ldr	r3, [r7, #4]
 8004442:	2228      	movs	r2, #40	; 0x28
 8004444:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004448:	687b      	ldr	r3, [r7, #4]
 800444a:	2221      	movs	r2, #33	; 0x21
 800444c:	631a      	str	r2, [r3, #48]	; 0x30
 800444e:	2101      	movs	r1, #1
 8004450:	6878      	ldr	r0, [r7, #4]
 8004452:	f000 fc87 	bl	8004d64 <I2C_Disable_IRQ>
 8004456:	687b      	ldr	r3, [r7, #4]
 8004458:	2200      	movs	r2, #0
 800445a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800445e:	6878      	ldr	r0, [r7, #4]
 8004460:	f7ff fe05 	bl	800406e <HAL_I2C_SlaveTxCpltCallback>
 8004464:	e017      	b.n	8004496 <I2C_ITSlaveSeqCplt+0xb0>
 8004466:	687b      	ldr	r3, [r7, #4]
 8004468:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800446c:	b2db      	uxtb	r3, r3
 800446e:	2b2a      	cmp	r3, #42	; 0x2a
 8004470:	d111      	bne.n	8004496 <I2C_ITSlaveSeqCplt+0xb0>
 8004472:	687b      	ldr	r3, [r7, #4]
 8004474:	2228      	movs	r2, #40	; 0x28
 8004476:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800447a:	687b      	ldr	r3, [r7, #4]
 800447c:	2222      	movs	r2, #34	; 0x22
 800447e:	631a      	str	r2, [r3, #48]	; 0x30
 8004480:	2102      	movs	r1, #2
 8004482:	6878      	ldr	r0, [r7, #4]
 8004484:	f000 fc6e 	bl	8004d64 <I2C_Disable_IRQ>
 8004488:	687b      	ldr	r3, [r7, #4]
 800448a:	2200      	movs	r2, #0
 800448c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004490:	6878      	ldr	r0, [r7, #4]
 8004492:	f7ff fdf6 	bl	8004082 <HAL_I2C_SlaveRxCpltCallback>
 8004496:	bf00      	nop
 8004498:	3710      	adds	r7, #16
 800449a:	46bd      	mov	sp, r7
 800449c:	bd80      	pop	{r7, pc}
	...

080044a0 <I2C_ITSlaveCplt>:
 80044a0:	b580      	push	{r7, lr}
 80044a2:	b086      	sub	sp, #24
 80044a4:	af00      	add	r7, sp, #0
 80044a6:	6078      	str	r0, [r7, #4]
 80044a8:	6039      	str	r1, [r7, #0]
 80044aa:	687b      	ldr	r3, [r7, #4]
 80044ac:	681b      	ldr	r3, [r3, #0]
 80044ae:	681b      	ldr	r3, [r3, #0]
 80044b0:	613b      	str	r3, [r7, #16]
 80044b2:	683b      	ldr	r3, [r7, #0]
 80044b4:	617b      	str	r3, [r7, #20]
 80044b6:	687b      	ldr	r3, [r7, #4]
 80044b8:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80044bc:	73fb      	strb	r3, [r7, #15]
 80044be:	687b      	ldr	r3, [r7, #4]
 80044c0:	681b      	ldr	r3, [r3, #0]
 80044c2:	2220      	movs	r2, #32
 80044c4:	61da      	str	r2, [r3, #28]
 80044c6:	7bfb      	ldrb	r3, [r7, #15]
 80044c8:	2b21      	cmp	r3, #33	; 0x21
 80044ca:	d002      	beq.n	80044d2 <I2C_ITSlaveCplt+0x32>
 80044cc:	7bfb      	ldrb	r3, [r7, #15]
 80044ce:	2b29      	cmp	r3, #41	; 0x29
 80044d0:	d108      	bne.n	80044e4 <I2C_ITSlaveCplt+0x44>
 80044d2:	f248 0101 	movw	r1, #32769	; 0x8001
 80044d6:	6878      	ldr	r0, [r7, #4]
 80044d8:	f000 fc44 	bl	8004d64 <I2C_Disable_IRQ>
 80044dc:	687b      	ldr	r3, [r7, #4]
 80044de:	2221      	movs	r2, #33	; 0x21
 80044e0:	631a      	str	r2, [r3, #48]	; 0x30
 80044e2:	e00d      	b.n	8004500 <I2C_ITSlaveCplt+0x60>
 80044e4:	7bfb      	ldrb	r3, [r7, #15]
 80044e6:	2b22      	cmp	r3, #34	; 0x22
 80044e8:	d002      	beq.n	80044f0 <I2C_ITSlaveCplt+0x50>
 80044ea:	7bfb      	ldrb	r3, [r7, #15]
 80044ec:	2b2a      	cmp	r3, #42	; 0x2a
 80044ee:	d107      	bne.n	8004500 <I2C_ITSlaveCplt+0x60>
 80044f0:	f248 0102 	movw	r1, #32770	; 0x8002
 80044f4:	6878      	ldr	r0, [r7, #4]
 80044f6:	f000 fc35 	bl	8004d64 <I2C_Disable_IRQ>
 80044fa:	687b      	ldr	r3, [r7, #4]
 80044fc:	2222      	movs	r2, #34	; 0x22
 80044fe:	631a      	str	r2, [r3, #48]	; 0x30
 8004500:	687b      	ldr	r3, [r7, #4]
 8004502:	681b      	ldr	r3, [r3, #0]
 8004504:	685a      	ldr	r2, [r3, #4]
 8004506:	687b      	ldr	r3, [r7, #4]
 8004508:	681b      	ldr	r3, [r3, #0]
 800450a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800450e:	605a      	str	r2, [r3, #4]
 8004510:	687b      	ldr	r3, [r7, #4]
 8004512:	681b      	ldr	r3, [r3, #0]
 8004514:	6859      	ldr	r1, [r3, #4]
 8004516:	687b      	ldr	r3, [r7, #4]
 8004518:	681a      	ldr	r2, [r3, #0]
 800451a:	4b62      	ldr	r3, [pc, #392]	; (80046a4 <I2C_ITSlaveCplt+0x204>)
 800451c:	400b      	ands	r3, r1
 800451e:	6053      	str	r3, [r2, #4]
 8004520:	6878      	ldr	r0, [r7, #4]
 8004522:	f000 fa0e 	bl	8004942 <I2C_Flush_TXDR>
 8004526:	693b      	ldr	r3, [r7, #16]
 8004528:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800452c:	2b00      	cmp	r3, #0
 800452e:	d013      	beq.n	8004558 <I2C_ITSlaveCplt+0xb8>
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	681b      	ldr	r3, [r3, #0]
 8004534:	681a      	ldr	r2, [r3, #0]
 8004536:	687b      	ldr	r3, [r7, #4]
 8004538:	681b      	ldr	r3, [r3, #0]
 800453a:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800453e:	601a      	str	r2, [r3, #0]
 8004540:	687b      	ldr	r3, [r7, #4]
 8004542:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004544:	2b00      	cmp	r3, #0
 8004546:	d01f      	beq.n	8004588 <I2C_ITSlaveCplt+0xe8>
 8004548:	687b      	ldr	r3, [r7, #4]
 800454a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800454c:	681b      	ldr	r3, [r3, #0]
 800454e:	685b      	ldr	r3, [r3, #4]
 8004550:	b29a      	uxth	r2, r3
 8004552:	687b      	ldr	r3, [r7, #4]
 8004554:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004556:	e017      	b.n	8004588 <I2C_ITSlaveCplt+0xe8>
 8004558:	693b      	ldr	r3, [r7, #16]
 800455a:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800455e:	2b00      	cmp	r3, #0
 8004560:	d012      	beq.n	8004588 <I2C_ITSlaveCplt+0xe8>
 8004562:	687b      	ldr	r3, [r7, #4]
 8004564:	681b      	ldr	r3, [r3, #0]
 8004566:	681a      	ldr	r2, [r3, #0]
 8004568:	687b      	ldr	r3, [r7, #4]
 800456a:	681b      	ldr	r3, [r3, #0]
 800456c:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004570:	601a      	str	r2, [r3, #0]
 8004572:	687b      	ldr	r3, [r7, #4]
 8004574:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004576:	2b00      	cmp	r3, #0
 8004578:	d006      	beq.n	8004588 <I2C_ITSlaveCplt+0xe8>
 800457a:	687b      	ldr	r3, [r7, #4]
 800457c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800457e:	681b      	ldr	r3, [r3, #0]
 8004580:	685b      	ldr	r3, [r3, #4]
 8004582:	b29a      	uxth	r2, r3
 8004584:	687b      	ldr	r3, [r7, #4]
 8004586:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004588:	697b      	ldr	r3, [r7, #20]
 800458a:	f003 0304 	and.w	r3, r3, #4
 800458e:	2b00      	cmp	r3, #0
 8004590:	d020      	beq.n	80045d4 <I2C_ITSlaveCplt+0x134>
 8004592:	697b      	ldr	r3, [r7, #20]
 8004594:	f023 0304 	bic.w	r3, r3, #4
 8004598:	617b      	str	r3, [r7, #20]
 800459a:	687b      	ldr	r3, [r7, #4]
 800459c:	681b      	ldr	r3, [r3, #0]
 800459e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80045a0:	687b      	ldr	r3, [r7, #4]
 80045a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045a4:	b2d2      	uxtb	r2, r2
 80045a6:	701a      	strb	r2, [r3, #0]
 80045a8:	687b      	ldr	r3, [r7, #4]
 80045aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045ac:	1c5a      	adds	r2, r3, #1
 80045ae:	687b      	ldr	r3, [r7, #4]
 80045b0:	625a      	str	r2, [r3, #36]	; 0x24
 80045b2:	687b      	ldr	r3, [r7, #4]
 80045b4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80045b6:	2b00      	cmp	r3, #0
 80045b8:	d00c      	beq.n	80045d4 <I2C_ITSlaveCplt+0x134>
 80045ba:	687b      	ldr	r3, [r7, #4]
 80045bc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80045be:	3b01      	subs	r3, #1
 80045c0:	b29a      	uxth	r2, r3
 80045c2:	687b      	ldr	r3, [r7, #4]
 80045c4:	851a      	strh	r2, [r3, #40]	; 0x28
 80045c6:	687b      	ldr	r3, [r7, #4]
 80045c8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80045ca:	b29b      	uxth	r3, r3
 80045cc:	3b01      	subs	r3, #1
 80045ce:	b29a      	uxth	r2, r3
 80045d0:	687b      	ldr	r3, [r7, #4]
 80045d2:	855a      	strh	r2, [r3, #42]	; 0x2a
 80045d4:	687b      	ldr	r3, [r7, #4]
 80045d6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80045d8:	b29b      	uxth	r3, r3
 80045da:	2b00      	cmp	r3, #0
 80045dc:	d005      	beq.n	80045ea <I2C_ITSlaveCplt+0x14a>
 80045de:	687b      	ldr	r3, [r7, #4]
 80045e0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80045e2:	f043 0204 	orr.w	r2, r3, #4
 80045e6:	687b      	ldr	r3, [r7, #4]
 80045e8:	645a      	str	r2, [r3, #68]	; 0x44
 80045ea:	687b      	ldr	r3, [r7, #4]
 80045ec:	2200      	movs	r2, #0
 80045ee:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80045f2:	687b      	ldr	r3, [r7, #4]
 80045f4:	2200      	movs	r2, #0
 80045f6:	635a      	str	r2, [r3, #52]	; 0x34
 80045f8:	687b      	ldr	r3, [r7, #4]
 80045fa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80045fc:	2b00      	cmp	r3, #0
 80045fe:	d010      	beq.n	8004622 <I2C_ITSlaveCplt+0x182>
 8004600:	687b      	ldr	r3, [r7, #4]
 8004602:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004604:	4619      	mov	r1, r3
 8004606:	6878      	ldr	r0, [r7, #4]
 8004608:	f000 f8a4 	bl	8004754 <I2C_ITError>
 800460c:	687b      	ldr	r3, [r7, #4]
 800460e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004612:	b2db      	uxtb	r3, r3
 8004614:	2b28      	cmp	r3, #40	; 0x28
 8004616:	d141      	bne.n	800469c <I2C_ITSlaveCplt+0x1fc>
 8004618:	6979      	ldr	r1, [r7, #20]
 800461a:	6878      	ldr	r0, [r7, #4]
 800461c:	f000 f846 	bl	80046ac <I2C_ITListenCplt>
 8004620:	e03c      	b.n	800469c <I2C_ITSlaveCplt+0x1fc>
 8004622:	687b      	ldr	r3, [r7, #4]
 8004624:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004626:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800462a:	d014      	beq.n	8004656 <I2C_ITSlaveCplt+0x1b6>
 800462c:	6878      	ldr	r0, [r7, #4]
 800462e:	f7ff feda 	bl	80043e6 <I2C_ITSlaveSeqCplt>
 8004632:	687b      	ldr	r3, [r7, #4]
 8004634:	4a1c      	ldr	r2, [pc, #112]	; (80046a8 <I2C_ITSlaveCplt+0x208>)
 8004636:	62da      	str	r2, [r3, #44]	; 0x2c
 8004638:	687b      	ldr	r3, [r7, #4]
 800463a:	2220      	movs	r2, #32
 800463c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004640:	687b      	ldr	r3, [r7, #4]
 8004642:	2200      	movs	r2, #0
 8004644:	631a      	str	r2, [r3, #48]	; 0x30
 8004646:	687b      	ldr	r3, [r7, #4]
 8004648:	2200      	movs	r2, #0
 800464a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800464e:	6878      	ldr	r0, [r7, #4]
 8004650:	f7ff fd2f 	bl	80040b2 <HAL_I2C_ListenCpltCallback>
 8004654:	e022      	b.n	800469c <I2C_ITSlaveCplt+0x1fc>
 8004656:	687b      	ldr	r3, [r7, #4]
 8004658:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800465c:	b2db      	uxtb	r3, r3
 800465e:	2b22      	cmp	r3, #34	; 0x22
 8004660:	d10e      	bne.n	8004680 <I2C_ITSlaveCplt+0x1e0>
 8004662:	687b      	ldr	r3, [r7, #4]
 8004664:	2220      	movs	r2, #32
 8004666:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800466a:	687b      	ldr	r3, [r7, #4]
 800466c:	2200      	movs	r2, #0
 800466e:	631a      	str	r2, [r3, #48]	; 0x30
 8004670:	687b      	ldr	r3, [r7, #4]
 8004672:	2200      	movs	r2, #0
 8004674:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004678:	6878      	ldr	r0, [r7, #4]
 800467a:	f7ff fd02 	bl	8004082 <HAL_I2C_SlaveRxCpltCallback>
 800467e:	e00d      	b.n	800469c <I2C_ITSlaveCplt+0x1fc>
 8004680:	687b      	ldr	r3, [r7, #4]
 8004682:	2220      	movs	r2, #32
 8004684:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004688:	687b      	ldr	r3, [r7, #4]
 800468a:	2200      	movs	r2, #0
 800468c:	631a      	str	r2, [r3, #48]	; 0x30
 800468e:	687b      	ldr	r3, [r7, #4]
 8004690:	2200      	movs	r2, #0
 8004692:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004696:	6878      	ldr	r0, [r7, #4]
 8004698:	f7ff fce9 	bl	800406e <HAL_I2C_SlaveTxCpltCallback>
 800469c:	bf00      	nop
 800469e:	3718      	adds	r7, #24
 80046a0:	46bd      	mov	sp, r7
 80046a2:	bd80      	pop	{r7, pc}
 80046a4:	fe00e800 	.word	0xfe00e800
 80046a8:	ffff0000 	.word	0xffff0000

080046ac <I2C_ITListenCplt>:
 80046ac:	b580      	push	{r7, lr}
 80046ae:	b082      	sub	sp, #8
 80046b0:	af00      	add	r7, sp, #0
 80046b2:	6078      	str	r0, [r7, #4]
 80046b4:	6039      	str	r1, [r7, #0]
 80046b6:	687b      	ldr	r3, [r7, #4]
 80046b8:	4a25      	ldr	r2, [pc, #148]	; (8004750 <I2C_ITListenCplt+0xa4>)
 80046ba:	62da      	str	r2, [r3, #44]	; 0x2c
 80046bc:	687b      	ldr	r3, [r7, #4]
 80046be:	2200      	movs	r2, #0
 80046c0:	631a      	str	r2, [r3, #48]	; 0x30
 80046c2:	687b      	ldr	r3, [r7, #4]
 80046c4:	2220      	movs	r2, #32
 80046c6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80046ca:	687b      	ldr	r3, [r7, #4]
 80046cc:	2200      	movs	r2, #0
 80046ce:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80046d2:	687b      	ldr	r3, [r7, #4]
 80046d4:	2200      	movs	r2, #0
 80046d6:	635a      	str	r2, [r3, #52]	; 0x34
 80046d8:	683b      	ldr	r3, [r7, #0]
 80046da:	f003 0304 	and.w	r3, r3, #4
 80046de:	2b00      	cmp	r3, #0
 80046e0:	d022      	beq.n	8004728 <I2C_ITListenCplt+0x7c>
 80046e2:	687b      	ldr	r3, [r7, #4]
 80046e4:	681b      	ldr	r3, [r3, #0]
 80046e6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80046e8:	687b      	ldr	r3, [r7, #4]
 80046ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046ec:	b2d2      	uxtb	r2, r2
 80046ee:	701a      	strb	r2, [r3, #0]
 80046f0:	687b      	ldr	r3, [r7, #4]
 80046f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046f4:	1c5a      	adds	r2, r3, #1
 80046f6:	687b      	ldr	r3, [r7, #4]
 80046f8:	625a      	str	r2, [r3, #36]	; 0x24
 80046fa:	687b      	ldr	r3, [r7, #4]
 80046fc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80046fe:	2b00      	cmp	r3, #0
 8004700:	d012      	beq.n	8004728 <I2C_ITListenCplt+0x7c>
 8004702:	687b      	ldr	r3, [r7, #4]
 8004704:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004706:	3b01      	subs	r3, #1
 8004708:	b29a      	uxth	r2, r3
 800470a:	687b      	ldr	r3, [r7, #4]
 800470c:	851a      	strh	r2, [r3, #40]	; 0x28
 800470e:	687b      	ldr	r3, [r7, #4]
 8004710:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004712:	b29b      	uxth	r3, r3
 8004714:	3b01      	subs	r3, #1
 8004716:	b29a      	uxth	r2, r3
 8004718:	687b      	ldr	r3, [r7, #4]
 800471a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004720:	f043 0204 	orr.w	r2, r3, #4
 8004724:	687b      	ldr	r3, [r7, #4]
 8004726:	645a      	str	r2, [r3, #68]	; 0x44
 8004728:	f248 0103 	movw	r1, #32771	; 0x8003
 800472c:	6878      	ldr	r0, [r7, #4]
 800472e:	f000 fb19 	bl	8004d64 <I2C_Disable_IRQ>
 8004732:	687b      	ldr	r3, [r7, #4]
 8004734:	681b      	ldr	r3, [r3, #0]
 8004736:	2210      	movs	r2, #16
 8004738:	61da      	str	r2, [r3, #28]
 800473a:	687b      	ldr	r3, [r7, #4]
 800473c:	2200      	movs	r2, #0
 800473e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004742:	6878      	ldr	r0, [r7, #4]
 8004744:	f7ff fcb5 	bl	80040b2 <HAL_I2C_ListenCpltCallback>
 8004748:	bf00      	nop
 800474a:	3708      	adds	r7, #8
 800474c:	46bd      	mov	sp, r7
 800474e:	bd80      	pop	{r7, pc}
 8004750:	ffff0000 	.word	0xffff0000

08004754 <I2C_ITError>:
 8004754:	b580      	push	{r7, lr}
 8004756:	b084      	sub	sp, #16
 8004758:	af00      	add	r7, sp, #0
 800475a:	6078      	str	r0, [r7, #4]
 800475c:	6039      	str	r1, [r7, #0]
 800475e:	687b      	ldr	r3, [r7, #4]
 8004760:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004764:	73fb      	strb	r3, [r7, #15]
 8004766:	687b      	ldr	r3, [r7, #4]
 8004768:	2200      	movs	r2, #0
 800476a:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800476e:	687b      	ldr	r3, [r7, #4]
 8004770:	4a5d      	ldr	r2, [pc, #372]	; (80048e8 <I2C_ITError+0x194>)
 8004772:	62da      	str	r2, [r3, #44]	; 0x2c
 8004774:	687b      	ldr	r3, [r7, #4]
 8004776:	2200      	movs	r2, #0
 8004778:	855a      	strh	r2, [r3, #42]	; 0x2a
 800477a:	687b      	ldr	r3, [r7, #4]
 800477c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800477e:	683b      	ldr	r3, [r7, #0]
 8004780:	431a      	orrs	r2, r3
 8004782:	687b      	ldr	r3, [r7, #4]
 8004784:	645a      	str	r2, [r3, #68]	; 0x44
 8004786:	7bfb      	ldrb	r3, [r7, #15]
 8004788:	2b28      	cmp	r3, #40	; 0x28
 800478a:	d005      	beq.n	8004798 <I2C_ITError+0x44>
 800478c:	7bfb      	ldrb	r3, [r7, #15]
 800478e:	2b29      	cmp	r3, #41	; 0x29
 8004790:	d002      	beq.n	8004798 <I2C_ITError+0x44>
 8004792:	7bfb      	ldrb	r3, [r7, #15]
 8004794:	2b2a      	cmp	r3, #42	; 0x2a
 8004796:	d10b      	bne.n	80047b0 <I2C_ITError+0x5c>
 8004798:	2103      	movs	r1, #3
 800479a:	6878      	ldr	r0, [r7, #4]
 800479c:	f000 fae2 	bl	8004d64 <I2C_Disable_IRQ>
 80047a0:	687b      	ldr	r3, [r7, #4]
 80047a2:	2228      	movs	r2, #40	; 0x28
 80047a4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80047a8:	687b      	ldr	r3, [r7, #4]
 80047aa:	4a50      	ldr	r2, [pc, #320]	; (80048ec <I2C_ITError+0x198>)
 80047ac:	635a      	str	r2, [r3, #52]	; 0x34
 80047ae:	e011      	b.n	80047d4 <I2C_ITError+0x80>
 80047b0:	f248 0103 	movw	r1, #32771	; 0x8003
 80047b4:	6878      	ldr	r0, [r7, #4]
 80047b6:	f000 fad5 	bl	8004d64 <I2C_Disable_IRQ>
 80047ba:	687b      	ldr	r3, [r7, #4]
 80047bc:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80047c0:	b2db      	uxtb	r3, r3
 80047c2:	2b60      	cmp	r3, #96	; 0x60
 80047c4:	d003      	beq.n	80047ce <I2C_ITError+0x7a>
 80047c6:	687b      	ldr	r3, [r7, #4]
 80047c8:	2220      	movs	r2, #32
 80047ca:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80047ce:	687b      	ldr	r3, [r7, #4]
 80047d0:	2200      	movs	r2, #0
 80047d2:	635a      	str	r2, [r3, #52]	; 0x34
 80047d4:	687b      	ldr	r3, [r7, #4]
 80047d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80047d8:	60bb      	str	r3, [r7, #8]
 80047da:	687b      	ldr	r3, [r7, #4]
 80047dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80047de:	2b00      	cmp	r3, #0
 80047e0:	d039      	beq.n	8004856 <I2C_ITError+0x102>
 80047e2:	68bb      	ldr	r3, [r7, #8]
 80047e4:	2b11      	cmp	r3, #17
 80047e6:	d002      	beq.n	80047ee <I2C_ITError+0x9a>
 80047e8:	68bb      	ldr	r3, [r7, #8]
 80047ea:	2b21      	cmp	r3, #33	; 0x21
 80047ec:	d133      	bne.n	8004856 <I2C_ITError+0x102>
 80047ee:	687b      	ldr	r3, [r7, #4]
 80047f0:	681b      	ldr	r3, [r3, #0]
 80047f2:	681b      	ldr	r3, [r3, #0]
 80047f4:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80047f8:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80047fc:	d107      	bne.n	800480e <I2C_ITError+0xba>
 80047fe:	687b      	ldr	r3, [r7, #4]
 8004800:	681b      	ldr	r3, [r3, #0]
 8004802:	681a      	ldr	r2, [r3, #0]
 8004804:	687b      	ldr	r3, [r7, #4]
 8004806:	681b      	ldr	r3, [r3, #0]
 8004808:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800480c:	601a      	str	r2, [r3, #0]
 800480e:	687b      	ldr	r3, [r7, #4]
 8004810:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004812:	4618      	mov	r0, r3
 8004814:	f7ff f839 	bl	800388a <HAL_DMA_GetState>
 8004818:	4603      	mov	r3, r0
 800481a:	2b01      	cmp	r3, #1
 800481c:	d017      	beq.n	800484e <I2C_ITError+0xfa>
 800481e:	687b      	ldr	r3, [r7, #4]
 8004820:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004822:	4a33      	ldr	r2, [pc, #204]	; (80048f0 <I2C_ITError+0x19c>)
 8004824:	651a      	str	r2, [r3, #80]	; 0x50
 8004826:	687b      	ldr	r3, [r7, #4]
 8004828:	2200      	movs	r2, #0
 800482a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800482e:	687b      	ldr	r3, [r7, #4]
 8004830:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004832:	4618      	mov	r0, r3
 8004834:	f7ff f807 	bl	8003846 <HAL_DMA_Abort_IT>
 8004838:	4603      	mov	r3, r0
 800483a:	2b00      	cmp	r3, #0
 800483c:	d04d      	beq.n	80048da <I2C_ITError+0x186>
 800483e:	687b      	ldr	r3, [r7, #4]
 8004840:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004842:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004844:	687a      	ldr	r2, [r7, #4]
 8004846:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8004848:	4610      	mov	r0, r2
 800484a:	4798      	blx	r3
 800484c:	e045      	b.n	80048da <I2C_ITError+0x186>
 800484e:	6878      	ldr	r0, [r7, #4]
 8004850:	f000 f850 	bl	80048f4 <I2C_TreatErrorCallback>
 8004854:	e041      	b.n	80048da <I2C_ITError+0x186>
 8004856:	687b      	ldr	r3, [r7, #4]
 8004858:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800485a:	2b00      	cmp	r3, #0
 800485c:	d039      	beq.n	80048d2 <I2C_ITError+0x17e>
 800485e:	68bb      	ldr	r3, [r7, #8]
 8004860:	2b12      	cmp	r3, #18
 8004862:	d002      	beq.n	800486a <I2C_ITError+0x116>
 8004864:	68bb      	ldr	r3, [r7, #8]
 8004866:	2b22      	cmp	r3, #34	; 0x22
 8004868:	d133      	bne.n	80048d2 <I2C_ITError+0x17e>
 800486a:	687b      	ldr	r3, [r7, #4]
 800486c:	681b      	ldr	r3, [r3, #0]
 800486e:	681b      	ldr	r3, [r3, #0]
 8004870:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8004874:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004878:	d107      	bne.n	800488a <I2C_ITError+0x136>
 800487a:	687b      	ldr	r3, [r7, #4]
 800487c:	681b      	ldr	r3, [r3, #0]
 800487e:	681a      	ldr	r2, [r3, #0]
 8004880:	687b      	ldr	r3, [r7, #4]
 8004882:	681b      	ldr	r3, [r3, #0]
 8004884:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004888:	601a      	str	r2, [r3, #0]
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800488e:	4618      	mov	r0, r3
 8004890:	f7fe fffb 	bl	800388a <HAL_DMA_GetState>
 8004894:	4603      	mov	r3, r0
 8004896:	2b01      	cmp	r3, #1
 8004898:	d017      	beq.n	80048ca <I2C_ITError+0x176>
 800489a:	687b      	ldr	r3, [r7, #4]
 800489c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800489e:	4a14      	ldr	r2, [pc, #80]	; (80048f0 <I2C_ITError+0x19c>)
 80048a0:	651a      	str	r2, [r3, #80]	; 0x50
 80048a2:	687b      	ldr	r3, [r7, #4]
 80048a4:	2200      	movs	r2, #0
 80048a6:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80048aa:	687b      	ldr	r3, [r7, #4]
 80048ac:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80048ae:	4618      	mov	r0, r3
 80048b0:	f7fe ffc9 	bl	8003846 <HAL_DMA_Abort_IT>
 80048b4:	4603      	mov	r3, r0
 80048b6:	2b00      	cmp	r3, #0
 80048b8:	d011      	beq.n	80048de <I2C_ITError+0x18a>
 80048ba:	687b      	ldr	r3, [r7, #4]
 80048bc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80048be:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80048c0:	687a      	ldr	r2, [r7, #4]
 80048c2:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 80048c4:	4610      	mov	r0, r2
 80048c6:	4798      	blx	r3
 80048c8:	e009      	b.n	80048de <I2C_ITError+0x18a>
 80048ca:	6878      	ldr	r0, [r7, #4]
 80048cc:	f000 f812 	bl	80048f4 <I2C_TreatErrorCallback>
 80048d0:	e005      	b.n	80048de <I2C_ITError+0x18a>
 80048d2:	6878      	ldr	r0, [r7, #4]
 80048d4:	f000 f80e 	bl	80048f4 <I2C_TreatErrorCallback>
 80048d8:	e002      	b.n	80048e0 <I2C_ITError+0x18c>
 80048da:	bf00      	nop
 80048dc:	e000      	b.n	80048e0 <I2C_ITError+0x18c>
 80048de:	bf00      	nop
 80048e0:	bf00      	nop
 80048e2:	3710      	adds	r7, #16
 80048e4:	46bd      	mov	sp, r7
 80048e6:	bd80      	pop	{r7, pc}
 80048e8:	ffff0000 	.word	0xffff0000
 80048ec:	080040ef 	.word	0x080040ef
 80048f0:	0800498b 	.word	0x0800498b

080048f4 <I2C_TreatErrorCallback>:
 80048f4:	b580      	push	{r7, lr}
 80048f6:	b082      	sub	sp, #8
 80048f8:	af00      	add	r7, sp, #0
 80048fa:	6078      	str	r0, [r7, #4]
 80048fc:	687b      	ldr	r3, [r7, #4]
 80048fe:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004902:	b2db      	uxtb	r3, r3
 8004904:	2b60      	cmp	r3, #96	; 0x60
 8004906:	d10e      	bne.n	8004926 <I2C_TreatErrorCallback+0x32>
 8004908:	687b      	ldr	r3, [r7, #4]
 800490a:	2220      	movs	r2, #32
 800490c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004910:	687b      	ldr	r3, [r7, #4]
 8004912:	2200      	movs	r2, #0
 8004914:	631a      	str	r2, [r3, #48]	; 0x30
 8004916:	687b      	ldr	r3, [r7, #4]
 8004918:	2200      	movs	r2, #0
 800491a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800491e:	6878      	ldr	r0, [r7, #4]
 8004920:	f7ff fbdb 	bl	80040da <HAL_I2C_AbortCpltCallback>
 8004924:	e009      	b.n	800493a <I2C_TreatErrorCallback+0x46>
 8004926:	687b      	ldr	r3, [r7, #4]
 8004928:	2200      	movs	r2, #0
 800492a:	631a      	str	r2, [r3, #48]	; 0x30
 800492c:	687b      	ldr	r3, [r7, #4]
 800492e:	2200      	movs	r2, #0
 8004930:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004934:	6878      	ldr	r0, [r7, #4]
 8004936:	f7ff fbc6 	bl	80040c6 <HAL_I2C_ErrorCallback>
 800493a:	bf00      	nop
 800493c:	3708      	adds	r7, #8
 800493e:	46bd      	mov	sp, r7
 8004940:	bd80      	pop	{r7, pc}

08004942 <I2C_Flush_TXDR>:
 8004942:	b480      	push	{r7}
 8004944:	b083      	sub	sp, #12
 8004946:	af00      	add	r7, sp, #0
 8004948:	6078      	str	r0, [r7, #4]
 800494a:	687b      	ldr	r3, [r7, #4]
 800494c:	681b      	ldr	r3, [r3, #0]
 800494e:	699b      	ldr	r3, [r3, #24]
 8004950:	f003 0302 	and.w	r3, r3, #2
 8004954:	2b02      	cmp	r3, #2
 8004956:	d103      	bne.n	8004960 <I2C_Flush_TXDR+0x1e>
 8004958:	687b      	ldr	r3, [r7, #4]
 800495a:	681b      	ldr	r3, [r3, #0]
 800495c:	2200      	movs	r2, #0
 800495e:	629a      	str	r2, [r3, #40]	; 0x28
 8004960:	687b      	ldr	r3, [r7, #4]
 8004962:	681b      	ldr	r3, [r3, #0]
 8004964:	699b      	ldr	r3, [r3, #24]
 8004966:	f003 0301 	and.w	r3, r3, #1
 800496a:	2b01      	cmp	r3, #1
 800496c:	d007      	beq.n	800497e <I2C_Flush_TXDR+0x3c>
 800496e:	687b      	ldr	r3, [r7, #4]
 8004970:	681b      	ldr	r3, [r3, #0]
 8004972:	699a      	ldr	r2, [r3, #24]
 8004974:	687b      	ldr	r3, [r7, #4]
 8004976:	681b      	ldr	r3, [r3, #0]
 8004978:	f042 0201 	orr.w	r2, r2, #1
 800497c:	619a      	str	r2, [r3, #24]
 800497e:	bf00      	nop
 8004980:	370c      	adds	r7, #12
 8004982:	46bd      	mov	sp, r7
 8004984:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004988:	4770      	bx	lr

0800498a <I2C_DMAAbort>:
 800498a:	b580      	push	{r7, lr}
 800498c:	b084      	sub	sp, #16
 800498e:	af00      	add	r7, sp, #0
 8004990:	6078      	str	r0, [r7, #4]
 8004992:	687b      	ldr	r3, [r7, #4]
 8004994:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004996:	60fb      	str	r3, [r7, #12]
 8004998:	68fb      	ldr	r3, [r7, #12]
 800499a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800499c:	2b00      	cmp	r3, #0
 800499e:	d003      	beq.n	80049a8 <I2C_DMAAbort+0x1e>
 80049a0:	68fb      	ldr	r3, [r7, #12]
 80049a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80049a4:	2200      	movs	r2, #0
 80049a6:	651a      	str	r2, [r3, #80]	; 0x50
 80049a8:	68fb      	ldr	r3, [r7, #12]
 80049aa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80049ac:	2b00      	cmp	r3, #0
 80049ae:	d003      	beq.n	80049b8 <I2C_DMAAbort+0x2e>
 80049b0:	68fb      	ldr	r3, [r7, #12]
 80049b2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80049b4:	2200      	movs	r2, #0
 80049b6:	651a      	str	r2, [r3, #80]	; 0x50
 80049b8:	68f8      	ldr	r0, [r7, #12]
 80049ba:	f7ff ff9b 	bl	80048f4 <I2C_TreatErrorCallback>
 80049be:	bf00      	nop
 80049c0:	3710      	adds	r7, #16
 80049c2:	46bd      	mov	sp, r7
 80049c4:	bd80      	pop	{r7, pc}

080049c6 <I2C_WaitOnFlagUntilTimeout>:
 80049c6:	b580      	push	{r7, lr}
 80049c8:	b084      	sub	sp, #16
 80049ca:	af00      	add	r7, sp, #0
 80049cc:	60f8      	str	r0, [r7, #12]
 80049ce:	60b9      	str	r1, [r7, #8]
 80049d0:	603b      	str	r3, [r7, #0]
 80049d2:	4613      	mov	r3, r2
 80049d4:	71fb      	strb	r3, [r7, #7]
 80049d6:	e022      	b.n	8004a1e <I2C_WaitOnFlagUntilTimeout+0x58>
 80049d8:	683b      	ldr	r3, [r7, #0]
 80049da:	f1b3 3fff 	cmp.w	r3, #4294967295
 80049de:	d01e      	beq.n	8004a1e <I2C_WaitOnFlagUntilTimeout+0x58>
 80049e0:	f7fe fd80 	bl	80034e4 <HAL_GetTick>
 80049e4:	4602      	mov	r2, r0
 80049e6:	69bb      	ldr	r3, [r7, #24]
 80049e8:	1ad3      	subs	r3, r2, r3
 80049ea:	683a      	ldr	r2, [r7, #0]
 80049ec:	429a      	cmp	r2, r3
 80049ee:	d302      	bcc.n	80049f6 <I2C_WaitOnFlagUntilTimeout+0x30>
 80049f0:	683b      	ldr	r3, [r7, #0]
 80049f2:	2b00      	cmp	r3, #0
 80049f4:	d113      	bne.n	8004a1e <I2C_WaitOnFlagUntilTimeout+0x58>
 80049f6:	68fb      	ldr	r3, [r7, #12]
 80049f8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80049fa:	f043 0220 	orr.w	r2, r3, #32
 80049fe:	68fb      	ldr	r3, [r7, #12]
 8004a00:	645a      	str	r2, [r3, #68]	; 0x44
 8004a02:	68fb      	ldr	r3, [r7, #12]
 8004a04:	2220      	movs	r2, #32
 8004a06:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004a0a:	68fb      	ldr	r3, [r7, #12]
 8004a0c:	2200      	movs	r2, #0
 8004a0e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004a12:	68fb      	ldr	r3, [r7, #12]
 8004a14:	2200      	movs	r2, #0
 8004a16:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004a1a:	2301      	movs	r3, #1
 8004a1c:	e00f      	b.n	8004a3e <I2C_WaitOnFlagUntilTimeout+0x78>
 8004a1e:	68fb      	ldr	r3, [r7, #12]
 8004a20:	681b      	ldr	r3, [r3, #0]
 8004a22:	699a      	ldr	r2, [r3, #24]
 8004a24:	68bb      	ldr	r3, [r7, #8]
 8004a26:	4013      	ands	r3, r2
 8004a28:	68ba      	ldr	r2, [r7, #8]
 8004a2a:	429a      	cmp	r2, r3
 8004a2c:	bf0c      	ite	eq
 8004a2e:	2301      	moveq	r3, #1
 8004a30:	2300      	movne	r3, #0
 8004a32:	b2db      	uxtb	r3, r3
 8004a34:	461a      	mov	r2, r3
 8004a36:	79fb      	ldrb	r3, [r7, #7]
 8004a38:	429a      	cmp	r2, r3
 8004a3a:	d0cd      	beq.n	80049d8 <I2C_WaitOnFlagUntilTimeout+0x12>
 8004a3c:	2300      	movs	r3, #0
 8004a3e:	4618      	mov	r0, r3
 8004a40:	3710      	adds	r7, #16
 8004a42:	46bd      	mov	sp, r7
 8004a44:	bd80      	pop	{r7, pc}

08004a46 <I2C_WaitOnTXISFlagUntilTimeout>:
 8004a46:	b580      	push	{r7, lr}
 8004a48:	b084      	sub	sp, #16
 8004a4a:	af00      	add	r7, sp, #0
 8004a4c:	60f8      	str	r0, [r7, #12]
 8004a4e:	60b9      	str	r1, [r7, #8]
 8004a50:	607a      	str	r2, [r7, #4]
 8004a52:	e02c      	b.n	8004aae <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 8004a54:	687a      	ldr	r2, [r7, #4]
 8004a56:	68b9      	ldr	r1, [r7, #8]
 8004a58:	68f8      	ldr	r0, [r7, #12]
 8004a5a:	f000 f871 	bl	8004b40 <I2C_IsErrorOccurred>
 8004a5e:	4603      	mov	r3, r0
 8004a60:	2b00      	cmp	r3, #0
 8004a62:	d001      	beq.n	8004a68 <I2C_WaitOnTXISFlagUntilTimeout+0x22>
 8004a64:	2301      	movs	r3, #1
 8004a66:	e02a      	b.n	8004abe <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 8004a68:	68bb      	ldr	r3, [r7, #8]
 8004a6a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004a6e:	d01e      	beq.n	8004aae <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 8004a70:	f7fe fd38 	bl	80034e4 <HAL_GetTick>
 8004a74:	4602      	mov	r2, r0
 8004a76:	687b      	ldr	r3, [r7, #4]
 8004a78:	1ad3      	subs	r3, r2, r3
 8004a7a:	68ba      	ldr	r2, [r7, #8]
 8004a7c:	429a      	cmp	r2, r3
 8004a7e:	d302      	bcc.n	8004a86 <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 8004a80:	68bb      	ldr	r3, [r7, #8]
 8004a82:	2b00      	cmp	r3, #0
 8004a84:	d113      	bne.n	8004aae <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 8004a86:	68fb      	ldr	r3, [r7, #12]
 8004a88:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004a8a:	f043 0220 	orr.w	r2, r3, #32
 8004a8e:	68fb      	ldr	r3, [r7, #12]
 8004a90:	645a      	str	r2, [r3, #68]	; 0x44
 8004a92:	68fb      	ldr	r3, [r7, #12]
 8004a94:	2220      	movs	r2, #32
 8004a96:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004a9a:	68fb      	ldr	r3, [r7, #12]
 8004a9c:	2200      	movs	r2, #0
 8004a9e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004aa2:	68fb      	ldr	r3, [r7, #12]
 8004aa4:	2200      	movs	r2, #0
 8004aa6:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004aaa:	2301      	movs	r3, #1
 8004aac:	e007      	b.n	8004abe <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 8004aae:	68fb      	ldr	r3, [r7, #12]
 8004ab0:	681b      	ldr	r3, [r3, #0]
 8004ab2:	699b      	ldr	r3, [r3, #24]
 8004ab4:	f003 0302 	and.w	r3, r3, #2
 8004ab8:	2b02      	cmp	r3, #2
 8004aba:	d1cb      	bne.n	8004a54 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 8004abc:	2300      	movs	r3, #0
 8004abe:	4618      	mov	r0, r3
 8004ac0:	3710      	adds	r7, #16
 8004ac2:	46bd      	mov	sp, r7
 8004ac4:	bd80      	pop	{r7, pc}

08004ac6 <I2C_WaitOnSTOPFlagUntilTimeout>:
 8004ac6:	b580      	push	{r7, lr}
 8004ac8:	b084      	sub	sp, #16
 8004aca:	af00      	add	r7, sp, #0
 8004acc:	60f8      	str	r0, [r7, #12]
 8004ace:	60b9      	str	r1, [r7, #8]
 8004ad0:	607a      	str	r2, [r7, #4]
 8004ad2:	e028      	b.n	8004b26 <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
 8004ad4:	687a      	ldr	r2, [r7, #4]
 8004ad6:	68b9      	ldr	r1, [r7, #8]
 8004ad8:	68f8      	ldr	r0, [r7, #12]
 8004ada:	f000 f831 	bl	8004b40 <I2C_IsErrorOccurred>
 8004ade:	4603      	mov	r3, r0
 8004ae0:	2b00      	cmp	r3, #0
 8004ae2:	d001      	beq.n	8004ae8 <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
 8004ae4:	2301      	movs	r3, #1
 8004ae6:	e026      	b.n	8004b36 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
 8004ae8:	f7fe fcfc 	bl	80034e4 <HAL_GetTick>
 8004aec:	4602      	mov	r2, r0
 8004aee:	687b      	ldr	r3, [r7, #4]
 8004af0:	1ad3      	subs	r3, r2, r3
 8004af2:	68ba      	ldr	r2, [r7, #8]
 8004af4:	429a      	cmp	r2, r3
 8004af6:	d302      	bcc.n	8004afe <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 8004af8:	68bb      	ldr	r3, [r7, #8]
 8004afa:	2b00      	cmp	r3, #0
 8004afc:	d113      	bne.n	8004b26 <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
 8004afe:	68fb      	ldr	r3, [r7, #12]
 8004b00:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004b02:	f043 0220 	orr.w	r2, r3, #32
 8004b06:	68fb      	ldr	r3, [r7, #12]
 8004b08:	645a      	str	r2, [r3, #68]	; 0x44
 8004b0a:	68fb      	ldr	r3, [r7, #12]
 8004b0c:	2220      	movs	r2, #32
 8004b0e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004b12:	68fb      	ldr	r3, [r7, #12]
 8004b14:	2200      	movs	r2, #0
 8004b16:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004b1a:	68fb      	ldr	r3, [r7, #12]
 8004b1c:	2200      	movs	r2, #0
 8004b1e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004b22:	2301      	movs	r3, #1
 8004b24:	e007      	b.n	8004b36 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
 8004b26:	68fb      	ldr	r3, [r7, #12]
 8004b28:	681b      	ldr	r3, [r3, #0]
 8004b2a:	699b      	ldr	r3, [r3, #24]
 8004b2c:	f003 0320 	and.w	r3, r3, #32
 8004b30:	2b20      	cmp	r3, #32
 8004b32:	d1cf      	bne.n	8004ad4 <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
 8004b34:	2300      	movs	r3, #0
 8004b36:	4618      	mov	r0, r3
 8004b38:	3710      	adds	r7, #16
 8004b3a:	46bd      	mov	sp, r7
 8004b3c:	bd80      	pop	{r7, pc}
	...

08004b40 <I2C_IsErrorOccurred>:
 8004b40:	b580      	push	{r7, lr}
 8004b42:	b08a      	sub	sp, #40	; 0x28
 8004b44:	af00      	add	r7, sp, #0
 8004b46:	60f8      	str	r0, [r7, #12]
 8004b48:	60b9      	str	r1, [r7, #8]
 8004b4a:	607a      	str	r2, [r7, #4]
 8004b4c:	2300      	movs	r3, #0
 8004b4e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8004b52:	68fb      	ldr	r3, [r7, #12]
 8004b54:	681b      	ldr	r3, [r3, #0]
 8004b56:	699b      	ldr	r3, [r3, #24]
 8004b58:	61bb      	str	r3, [r7, #24]
 8004b5a:	2300      	movs	r3, #0
 8004b5c:	623b      	str	r3, [r7, #32]
 8004b5e:	687b      	ldr	r3, [r7, #4]
 8004b60:	61fb      	str	r3, [r7, #28]
 8004b62:	69bb      	ldr	r3, [r7, #24]
 8004b64:	f003 0310 	and.w	r3, r3, #16
 8004b68:	2b00      	cmp	r3, #0
 8004b6a:	d068      	beq.n	8004c3e <I2C_IsErrorOccurred+0xfe>
 8004b6c:	68fb      	ldr	r3, [r7, #12]
 8004b6e:	681b      	ldr	r3, [r3, #0]
 8004b70:	2210      	movs	r2, #16
 8004b72:	61da      	str	r2, [r3, #28]
 8004b74:	e049      	b.n	8004c0a <I2C_IsErrorOccurred+0xca>
 8004b76:	68bb      	ldr	r3, [r7, #8]
 8004b78:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004b7c:	d045      	beq.n	8004c0a <I2C_IsErrorOccurred+0xca>
 8004b7e:	f7fe fcb1 	bl	80034e4 <HAL_GetTick>
 8004b82:	4602      	mov	r2, r0
 8004b84:	69fb      	ldr	r3, [r7, #28]
 8004b86:	1ad3      	subs	r3, r2, r3
 8004b88:	68ba      	ldr	r2, [r7, #8]
 8004b8a:	429a      	cmp	r2, r3
 8004b8c:	d302      	bcc.n	8004b94 <I2C_IsErrorOccurred+0x54>
 8004b8e:	68bb      	ldr	r3, [r7, #8]
 8004b90:	2b00      	cmp	r3, #0
 8004b92:	d13a      	bne.n	8004c0a <I2C_IsErrorOccurred+0xca>
 8004b94:	68fb      	ldr	r3, [r7, #12]
 8004b96:	681b      	ldr	r3, [r3, #0]
 8004b98:	685b      	ldr	r3, [r3, #4]
 8004b9a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004b9e:	617b      	str	r3, [r7, #20]
 8004ba0:	68fb      	ldr	r3, [r7, #12]
 8004ba2:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8004ba6:	74fb      	strb	r3, [r7, #19]
 8004ba8:	68fb      	ldr	r3, [r7, #12]
 8004baa:	681b      	ldr	r3, [r3, #0]
 8004bac:	699b      	ldr	r3, [r3, #24]
 8004bae:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8004bb2:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004bb6:	d121      	bne.n	8004bfc <I2C_IsErrorOccurred+0xbc>
 8004bb8:	697b      	ldr	r3, [r7, #20]
 8004bba:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8004bbe:	d01d      	beq.n	8004bfc <I2C_IsErrorOccurred+0xbc>
 8004bc0:	7cfb      	ldrb	r3, [r7, #19]
 8004bc2:	2b20      	cmp	r3, #32
 8004bc4:	d01a      	beq.n	8004bfc <I2C_IsErrorOccurred+0xbc>
 8004bc6:	68fb      	ldr	r3, [r7, #12]
 8004bc8:	681b      	ldr	r3, [r3, #0]
 8004bca:	685a      	ldr	r2, [r3, #4]
 8004bcc:	68fb      	ldr	r3, [r7, #12]
 8004bce:	681b      	ldr	r3, [r3, #0]
 8004bd0:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8004bd4:	605a      	str	r2, [r3, #4]
 8004bd6:	f7fe fc85 	bl	80034e4 <HAL_GetTick>
 8004bda:	61f8      	str	r0, [r7, #28]
 8004bdc:	e00e      	b.n	8004bfc <I2C_IsErrorOccurred+0xbc>
 8004bde:	f7fe fc81 	bl	80034e4 <HAL_GetTick>
 8004be2:	4602      	mov	r2, r0
 8004be4:	69fb      	ldr	r3, [r7, #28]
 8004be6:	1ad3      	subs	r3, r2, r3
 8004be8:	2b19      	cmp	r3, #25
 8004bea:	d907      	bls.n	8004bfc <I2C_IsErrorOccurred+0xbc>
 8004bec:	6a3b      	ldr	r3, [r7, #32]
 8004bee:	f043 0320 	orr.w	r3, r3, #32
 8004bf2:	623b      	str	r3, [r7, #32]
 8004bf4:	2301      	movs	r3, #1
 8004bf6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8004bfa:	e006      	b.n	8004c0a <I2C_IsErrorOccurred+0xca>
 8004bfc:	68fb      	ldr	r3, [r7, #12]
 8004bfe:	681b      	ldr	r3, [r3, #0]
 8004c00:	699b      	ldr	r3, [r3, #24]
 8004c02:	f003 0320 	and.w	r3, r3, #32
 8004c06:	2b20      	cmp	r3, #32
 8004c08:	d1e9      	bne.n	8004bde <I2C_IsErrorOccurred+0x9e>
 8004c0a:	68fb      	ldr	r3, [r7, #12]
 8004c0c:	681b      	ldr	r3, [r3, #0]
 8004c0e:	699b      	ldr	r3, [r3, #24]
 8004c10:	f003 0320 	and.w	r3, r3, #32
 8004c14:	2b20      	cmp	r3, #32
 8004c16:	d003      	beq.n	8004c20 <I2C_IsErrorOccurred+0xe0>
 8004c18:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8004c1c:	2b00      	cmp	r3, #0
 8004c1e:	d0aa      	beq.n	8004b76 <I2C_IsErrorOccurred+0x36>
 8004c20:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8004c24:	2b00      	cmp	r3, #0
 8004c26:	d103      	bne.n	8004c30 <I2C_IsErrorOccurred+0xf0>
 8004c28:	68fb      	ldr	r3, [r7, #12]
 8004c2a:	681b      	ldr	r3, [r3, #0]
 8004c2c:	2220      	movs	r2, #32
 8004c2e:	61da      	str	r2, [r3, #28]
 8004c30:	6a3b      	ldr	r3, [r7, #32]
 8004c32:	f043 0304 	orr.w	r3, r3, #4
 8004c36:	623b      	str	r3, [r7, #32]
 8004c38:	2301      	movs	r3, #1
 8004c3a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8004c3e:	68fb      	ldr	r3, [r7, #12]
 8004c40:	681b      	ldr	r3, [r3, #0]
 8004c42:	699b      	ldr	r3, [r3, #24]
 8004c44:	61bb      	str	r3, [r7, #24]
 8004c46:	69bb      	ldr	r3, [r7, #24]
 8004c48:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004c4c:	2b00      	cmp	r3, #0
 8004c4e:	d00b      	beq.n	8004c68 <I2C_IsErrorOccurred+0x128>
 8004c50:	6a3b      	ldr	r3, [r7, #32]
 8004c52:	f043 0301 	orr.w	r3, r3, #1
 8004c56:	623b      	str	r3, [r7, #32]
 8004c58:	68fb      	ldr	r3, [r7, #12]
 8004c5a:	681b      	ldr	r3, [r3, #0]
 8004c5c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004c60:	61da      	str	r2, [r3, #28]
 8004c62:	2301      	movs	r3, #1
 8004c64:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8004c68:	69bb      	ldr	r3, [r7, #24]
 8004c6a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004c6e:	2b00      	cmp	r3, #0
 8004c70:	d00b      	beq.n	8004c8a <I2C_IsErrorOccurred+0x14a>
 8004c72:	6a3b      	ldr	r3, [r7, #32]
 8004c74:	f043 0308 	orr.w	r3, r3, #8
 8004c78:	623b      	str	r3, [r7, #32]
 8004c7a:	68fb      	ldr	r3, [r7, #12]
 8004c7c:	681b      	ldr	r3, [r3, #0]
 8004c7e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004c82:	61da      	str	r2, [r3, #28]
 8004c84:	2301      	movs	r3, #1
 8004c86:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8004c8a:	69bb      	ldr	r3, [r7, #24]
 8004c8c:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8004c90:	2b00      	cmp	r3, #0
 8004c92:	d00b      	beq.n	8004cac <I2C_IsErrorOccurred+0x16c>
 8004c94:	6a3b      	ldr	r3, [r7, #32]
 8004c96:	f043 0302 	orr.w	r3, r3, #2
 8004c9a:	623b      	str	r3, [r7, #32]
 8004c9c:	68fb      	ldr	r3, [r7, #12]
 8004c9e:	681b      	ldr	r3, [r3, #0]
 8004ca0:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004ca4:	61da      	str	r2, [r3, #28]
 8004ca6:	2301      	movs	r3, #1
 8004ca8:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8004cac:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8004cb0:	2b00      	cmp	r3, #0
 8004cb2:	d01c      	beq.n	8004cee <I2C_IsErrorOccurred+0x1ae>
 8004cb4:	68f8      	ldr	r0, [r7, #12]
 8004cb6:	f7ff fe44 	bl	8004942 <I2C_Flush_TXDR>
 8004cba:	68fb      	ldr	r3, [r7, #12]
 8004cbc:	681b      	ldr	r3, [r3, #0]
 8004cbe:	6859      	ldr	r1, [r3, #4]
 8004cc0:	68fb      	ldr	r3, [r7, #12]
 8004cc2:	681a      	ldr	r2, [r3, #0]
 8004cc4:	4b0d      	ldr	r3, [pc, #52]	; (8004cfc <I2C_IsErrorOccurred+0x1bc>)
 8004cc6:	400b      	ands	r3, r1
 8004cc8:	6053      	str	r3, [r2, #4]
 8004cca:	68fb      	ldr	r3, [r7, #12]
 8004ccc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004cce:	6a3b      	ldr	r3, [r7, #32]
 8004cd0:	431a      	orrs	r2, r3
 8004cd2:	68fb      	ldr	r3, [r7, #12]
 8004cd4:	645a      	str	r2, [r3, #68]	; 0x44
 8004cd6:	68fb      	ldr	r3, [r7, #12]
 8004cd8:	2220      	movs	r2, #32
 8004cda:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004cde:	68fb      	ldr	r3, [r7, #12]
 8004ce0:	2200      	movs	r2, #0
 8004ce2:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004ce6:	68fb      	ldr	r3, [r7, #12]
 8004ce8:	2200      	movs	r2, #0
 8004cea:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004cee:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8004cf2:	4618      	mov	r0, r3
 8004cf4:	3728      	adds	r7, #40	; 0x28
 8004cf6:	46bd      	mov	sp, r7
 8004cf8:	bd80      	pop	{r7, pc}
 8004cfa:	bf00      	nop
 8004cfc:	fe00e800 	.word	0xfe00e800

08004d00 <I2C_TransferConfig>:
 8004d00:	b480      	push	{r7}
 8004d02:	b087      	sub	sp, #28
 8004d04:	af00      	add	r7, sp, #0
 8004d06:	60f8      	str	r0, [r7, #12]
 8004d08:	607b      	str	r3, [r7, #4]
 8004d0a:	460b      	mov	r3, r1
 8004d0c:	817b      	strh	r3, [r7, #10]
 8004d0e:	4613      	mov	r3, r2
 8004d10:	727b      	strb	r3, [r7, #9]
 8004d12:	897b      	ldrh	r3, [r7, #10]
 8004d14:	f3c3 0209 	ubfx	r2, r3, #0, #10
 8004d18:	7a7b      	ldrb	r3, [r7, #9]
 8004d1a:	041b      	lsls	r3, r3, #16
 8004d1c:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8004d20:	431a      	orrs	r2, r3
 8004d22:	687b      	ldr	r3, [r7, #4]
 8004d24:	431a      	orrs	r2, r3
 8004d26:	6a3b      	ldr	r3, [r7, #32]
 8004d28:	4313      	orrs	r3, r2
 8004d2a:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8004d2e:	617b      	str	r3, [r7, #20]
 8004d30:	68fb      	ldr	r3, [r7, #12]
 8004d32:	681b      	ldr	r3, [r3, #0]
 8004d34:	685a      	ldr	r2, [r3, #4]
 8004d36:	6a3b      	ldr	r3, [r7, #32]
 8004d38:	0d5b      	lsrs	r3, r3, #21
 8004d3a:	f403 6180 	and.w	r1, r3, #1024	; 0x400
 8004d3e:	4b08      	ldr	r3, [pc, #32]	; (8004d60 <I2C_TransferConfig+0x60>)
 8004d40:	430b      	orrs	r3, r1
 8004d42:	43db      	mvns	r3, r3
 8004d44:	ea02 0103 	and.w	r1, r2, r3
 8004d48:	68fb      	ldr	r3, [r7, #12]
 8004d4a:	681b      	ldr	r3, [r3, #0]
 8004d4c:	697a      	ldr	r2, [r7, #20]
 8004d4e:	430a      	orrs	r2, r1
 8004d50:	605a      	str	r2, [r3, #4]
 8004d52:	bf00      	nop
 8004d54:	371c      	adds	r7, #28
 8004d56:	46bd      	mov	sp, r7
 8004d58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d5c:	4770      	bx	lr
 8004d5e:	bf00      	nop
 8004d60:	03ff63ff 	.word	0x03ff63ff

08004d64 <I2C_Disable_IRQ>:
 8004d64:	b480      	push	{r7}
 8004d66:	b085      	sub	sp, #20
 8004d68:	af00      	add	r7, sp, #0
 8004d6a:	6078      	str	r0, [r7, #4]
 8004d6c:	460b      	mov	r3, r1
 8004d6e:	807b      	strh	r3, [r7, #2]
 8004d70:	2300      	movs	r3, #0
 8004d72:	60fb      	str	r3, [r7, #12]
 8004d74:	887b      	ldrh	r3, [r7, #2]
 8004d76:	f003 0301 	and.w	r3, r3, #1
 8004d7a:	2b00      	cmp	r3, #0
 8004d7c:	d00f      	beq.n	8004d9e <I2C_Disable_IRQ+0x3a>
 8004d7e:	68fb      	ldr	r3, [r7, #12]
 8004d80:	f043 0342 	orr.w	r3, r3, #66	; 0x42
 8004d84:	60fb      	str	r3, [r7, #12]
 8004d86:	687b      	ldr	r3, [r7, #4]
 8004d88:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004d8c:	b2db      	uxtb	r3, r3
 8004d8e:	f003 0328 	and.w	r3, r3, #40	; 0x28
 8004d92:	2b28      	cmp	r3, #40	; 0x28
 8004d94:	d003      	beq.n	8004d9e <I2C_Disable_IRQ+0x3a>
 8004d96:	68fb      	ldr	r3, [r7, #12]
 8004d98:	f043 03b0 	orr.w	r3, r3, #176	; 0xb0
 8004d9c:	60fb      	str	r3, [r7, #12]
 8004d9e:	887b      	ldrh	r3, [r7, #2]
 8004da0:	f003 0302 	and.w	r3, r3, #2
 8004da4:	2b00      	cmp	r3, #0
 8004da6:	d00f      	beq.n	8004dc8 <I2C_Disable_IRQ+0x64>
 8004da8:	68fb      	ldr	r3, [r7, #12]
 8004daa:	f043 0344 	orr.w	r3, r3, #68	; 0x44
 8004dae:	60fb      	str	r3, [r7, #12]
 8004db0:	687b      	ldr	r3, [r7, #4]
 8004db2:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004db6:	b2db      	uxtb	r3, r3
 8004db8:	f003 0328 	and.w	r3, r3, #40	; 0x28
 8004dbc:	2b28      	cmp	r3, #40	; 0x28
 8004dbe:	d003      	beq.n	8004dc8 <I2C_Disable_IRQ+0x64>
 8004dc0:	68fb      	ldr	r3, [r7, #12]
 8004dc2:	f043 03b0 	orr.w	r3, r3, #176	; 0xb0
 8004dc6:	60fb      	str	r3, [r7, #12]
 8004dc8:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8004dcc:	2b00      	cmp	r3, #0
 8004dce:	da03      	bge.n	8004dd8 <I2C_Disable_IRQ+0x74>
 8004dd0:	68fb      	ldr	r3, [r7, #12]
 8004dd2:	f043 03b8 	orr.w	r3, r3, #184	; 0xb8
 8004dd6:	60fb      	str	r3, [r7, #12]
 8004dd8:	887b      	ldrh	r3, [r7, #2]
 8004dda:	2b10      	cmp	r3, #16
 8004ddc:	d103      	bne.n	8004de6 <I2C_Disable_IRQ+0x82>
 8004dde:	68fb      	ldr	r3, [r7, #12]
 8004de0:	f043 0390 	orr.w	r3, r3, #144	; 0x90
 8004de4:	60fb      	str	r3, [r7, #12]
 8004de6:	887b      	ldrh	r3, [r7, #2]
 8004de8:	2b20      	cmp	r3, #32
 8004dea:	d103      	bne.n	8004df4 <I2C_Disable_IRQ+0x90>
 8004dec:	68fb      	ldr	r3, [r7, #12]
 8004dee:	f043 0320 	orr.w	r3, r3, #32
 8004df2:	60fb      	str	r3, [r7, #12]
 8004df4:	887b      	ldrh	r3, [r7, #2]
 8004df6:	2b40      	cmp	r3, #64	; 0x40
 8004df8:	d103      	bne.n	8004e02 <I2C_Disable_IRQ+0x9e>
 8004dfa:	68fb      	ldr	r3, [r7, #12]
 8004dfc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004e00:	60fb      	str	r3, [r7, #12]
 8004e02:	687b      	ldr	r3, [r7, #4]
 8004e04:	681b      	ldr	r3, [r3, #0]
 8004e06:	6819      	ldr	r1, [r3, #0]
 8004e08:	68fb      	ldr	r3, [r7, #12]
 8004e0a:	43da      	mvns	r2, r3
 8004e0c:	687b      	ldr	r3, [r7, #4]
 8004e0e:	681b      	ldr	r3, [r3, #0]
 8004e10:	400a      	ands	r2, r1
 8004e12:	601a      	str	r2, [r3, #0]
 8004e14:	bf00      	nop
 8004e16:	3714      	adds	r7, #20
 8004e18:	46bd      	mov	sp, r7
 8004e1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e1e:	4770      	bx	lr

08004e20 <HAL_I2CEx_ConfigAnalogFilter>:
 8004e20:	b480      	push	{r7}
 8004e22:	b083      	sub	sp, #12
 8004e24:	af00      	add	r7, sp, #0
 8004e26:	6078      	str	r0, [r7, #4]
 8004e28:	6039      	str	r1, [r7, #0]
 8004e2a:	687b      	ldr	r3, [r7, #4]
 8004e2c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004e30:	b2db      	uxtb	r3, r3
 8004e32:	2b20      	cmp	r3, #32
 8004e34:	d138      	bne.n	8004ea8 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 8004e36:	687b      	ldr	r3, [r7, #4]
 8004e38:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8004e3c:	2b01      	cmp	r3, #1
 8004e3e:	d101      	bne.n	8004e44 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 8004e40:	2302      	movs	r3, #2
 8004e42:	e032      	b.n	8004eaa <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8004e44:	687b      	ldr	r3, [r7, #4]
 8004e46:	2201      	movs	r2, #1
 8004e48:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004e4c:	687b      	ldr	r3, [r7, #4]
 8004e4e:	2224      	movs	r2, #36	; 0x24
 8004e50:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004e54:	687b      	ldr	r3, [r7, #4]
 8004e56:	681b      	ldr	r3, [r3, #0]
 8004e58:	681a      	ldr	r2, [r3, #0]
 8004e5a:	687b      	ldr	r3, [r7, #4]
 8004e5c:	681b      	ldr	r3, [r3, #0]
 8004e5e:	f022 0201 	bic.w	r2, r2, #1
 8004e62:	601a      	str	r2, [r3, #0]
 8004e64:	687b      	ldr	r3, [r7, #4]
 8004e66:	681b      	ldr	r3, [r3, #0]
 8004e68:	681a      	ldr	r2, [r3, #0]
 8004e6a:	687b      	ldr	r3, [r7, #4]
 8004e6c:	681b      	ldr	r3, [r3, #0]
 8004e6e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8004e72:	601a      	str	r2, [r3, #0]
 8004e74:	687b      	ldr	r3, [r7, #4]
 8004e76:	681b      	ldr	r3, [r3, #0]
 8004e78:	6819      	ldr	r1, [r3, #0]
 8004e7a:	687b      	ldr	r3, [r7, #4]
 8004e7c:	681b      	ldr	r3, [r3, #0]
 8004e7e:	683a      	ldr	r2, [r7, #0]
 8004e80:	430a      	orrs	r2, r1
 8004e82:	601a      	str	r2, [r3, #0]
 8004e84:	687b      	ldr	r3, [r7, #4]
 8004e86:	681b      	ldr	r3, [r3, #0]
 8004e88:	681a      	ldr	r2, [r3, #0]
 8004e8a:	687b      	ldr	r3, [r7, #4]
 8004e8c:	681b      	ldr	r3, [r3, #0]
 8004e8e:	f042 0201 	orr.w	r2, r2, #1
 8004e92:	601a      	str	r2, [r3, #0]
 8004e94:	687b      	ldr	r3, [r7, #4]
 8004e96:	2220      	movs	r2, #32
 8004e98:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004e9c:	687b      	ldr	r3, [r7, #4]
 8004e9e:	2200      	movs	r2, #0
 8004ea0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004ea4:	2300      	movs	r3, #0
 8004ea6:	e000      	b.n	8004eaa <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8004ea8:	2302      	movs	r3, #2
 8004eaa:	4618      	mov	r0, r3
 8004eac:	370c      	adds	r7, #12
 8004eae:	46bd      	mov	sp, r7
 8004eb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004eb4:	4770      	bx	lr

08004eb6 <HAL_I2CEx_ConfigDigitalFilter>:
 8004eb6:	b480      	push	{r7}
 8004eb8:	b085      	sub	sp, #20
 8004eba:	af00      	add	r7, sp, #0
 8004ebc:	6078      	str	r0, [r7, #4]
 8004ebe:	6039      	str	r1, [r7, #0]
 8004ec0:	687b      	ldr	r3, [r7, #4]
 8004ec2:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004ec6:	b2db      	uxtb	r3, r3
 8004ec8:	2b20      	cmp	r3, #32
 8004eca:	d139      	bne.n	8004f40 <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 8004ecc:	687b      	ldr	r3, [r7, #4]
 8004ece:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8004ed2:	2b01      	cmp	r3, #1
 8004ed4:	d101      	bne.n	8004eda <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8004ed6:	2302      	movs	r3, #2
 8004ed8:	e033      	b.n	8004f42 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8004eda:	687b      	ldr	r3, [r7, #4]
 8004edc:	2201      	movs	r2, #1
 8004ede:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004ee2:	687b      	ldr	r3, [r7, #4]
 8004ee4:	2224      	movs	r2, #36	; 0x24
 8004ee6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004eea:	687b      	ldr	r3, [r7, #4]
 8004eec:	681b      	ldr	r3, [r3, #0]
 8004eee:	681a      	ldr	r2, [r3, #0]
 8004ef0:	687b      	ldr	r3, [r7, #4]
 8004ef2:	681b      	ldr	r3, [r3, #0]
 8004ef4:	f022 0201 	bic.w	r2, r2, #1
 8004ef8:	601a      	str	r2, [r3, #0]
 8004efa:	687b      	ldr	r3, [r7, #4]
 8004efc:	681b      	ldr	r3, [r3, #0]
 8004efe:	681b      	ldr	r3, [r3, #0]
 8004f00:	60fb      	str	r3, [r7, #12]
 8004f02:	68fb      	ldr	r3, [r7, #12]
 8004f04:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8004f08:	60fb      	str	r3, [r7, #12]
 8004f0a:	683b      	ldr	r3, [r7, #0]
 8004f0c:	021b      	lsls	r3, r3, #8
 8004f0e:	68fa      	ldr	r2, [r7, #12]
 8004f10:	4313      	orrs	r3, r2
 8004f12:	60fb      	str	r3, [r7, #12]
 8004f14:	687b      	ldr	r3, [r7, #4]
 8004f16:	681b      	ldr	r3, [r3, #0]
 8004f18:	68fa      	ldr	r2, [r7, #12]
 8004f1a:	601a      	str	r2, [r3, #0]
 8004f1c:	687b      	ldr	r3, [r7, #4]
 8004f1e:	681b      	ldr	r3, [r3, #0]
 8004f20:	681a      	ldr	r2, [r3, #0]
 8004f22:	687b      	ldr	r3, [r7, #4]
 8004f24:	681b      	ldr	r3, [r3, #0]
 8004f26:	f042 0201 	orr.w	r2, r2, #1
 8004f2a:	601a      	str	r2, [r3, #0]
 8004f2c:	687b      	ldr	r3, [r7, #4]
 8004f2e:	2220      	movs	r2, #32
 8004f30:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004f34:	687b      	ldr	r3, [r7, #4]
 8004f36:	2200      	movs	r2, #0
 8004f38:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004f3c:	2300      	movs	r3, #0
 8004f3e:	e000      	b.n	8004f42 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8004f40:	2302      	movs	r3, #2
 8004f42:	4618      	mov	r0, r3
 8004f44:	3714      	adds	r7, #20
 8004f46:	46bd      	mov	sp, r7
 8004f48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f4c:	4770      	bx	lr
	...

08004f50 <HAL_PWR_EnableBkUpAccess>:
 8004f50:	b480      	push	{r7}
 8004f52:	af00      	add	r7, sp, #0
 8004f54:	4b05      	ldr	r3, [pc, #20]	; (8004f6c <HAL_PWR_EnableBkUpAccess+0x1c>)
 8004f56:	681b      	ldr	r3, [r3, #0]
 8004f58:	4a04      	ldr	r2, [pc, #16]	; (8004f6c <HAL_PWR_EnableBkUpAccess+0x1c>)
 8004f5a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004f5e:	6013      	str	r3, [r2, #0]
 8004f60:	bf00      	nop
 8004f62:	46bd      	mov	sp, r7
 8004f64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f68:	4770      	bx	lr
 8004f6a:	bf00      	nop
 8004f6c:	40007000 	.word	0x40007000

08004f70 <HAL_PWREx_EnableOverDrive>:
 8004f70:	b580      	push	{r7, lr}
 8004f72:	b082      	sub	sp, #8
 8004f74:	af00      	add	r7, sp, #0
 8004f76:	2300      	movs	r3, #0
 8004f78:	607b      	str	r3, [r7, #4]
 8004f7a:	4b23      	ldr	r3, [pc, #140]	; (8005008 <HAL_PWREx_EnableOverDrive+0x98>)
 8004f7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f7e:	4a22      	ldr	r2, [pc, #136]	; (8005008 <HAL_PWREx_EnableOverDrive+0x98>)
 8004f80:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004f84:	6413      	str	r3, [r2, #64]	; 0x40
 8004f86:	4b20      	ldr	r3, [pc, #128]	; (8005008 <HAL_PWREx_EnableOverDrive+0x98>)
 8004f88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f8a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004f8e:	603b      	str	r3, [r7, #0]
 8004f90:	683b      	ldr	r3, [r7, #0]
 8004f92:	4b1e      	ldr	r3, [pc, #120]	; (800500c <HAL_PWREx_EnableOverDrive+0x9c>)
 8004f94:	681b      	ldr	r3, [r3, #0]
 8004f96:	4a1d      	ldr	r2, [pc, #116]	; (800500c <HAL_PWREx_EnableOverDrive+0x9c>)
 8004f98:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004f9c:	6013      	str	r3, [r2, #0]
 8004f9e:	f7fe faa1 	bl	80034e4 <HAL_GetTick>
 8004fa2:	6078      	str	r0, [r7, #4]
 8004fa4:	e009      	b.n	8004fba <HAL_PWREx_EnableOverDrive+0x4a>
 8004fa6:	f7fe fa9d 	bl	80034e4 <HAL_GetTick>
 8004faa:	4602      	mov	r2, r0
 8004fac:	687b      	ldr	r3, [r7, #4]
 8004fae:	1ad3      	subs	r3, r2, r3
 8004fb0:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8004fb4:	d901      	bls.n	8004fba <HAL_PWREx_EnableOverDrive+0x4a>
 8004fb6:	2303      	movs	r3, #3
 8004fb8:	e022      	b.n	8005000 <HAL_PWREx_EnableOverDrive+0x90>
 8004fba:	4b14      	ldr	r3, [pc, #80]	; (800500c <HAL_PWREx_EnableOverDrive+0x9c>)
 8004fbc:	685b      	ldr	r3, [r3, #4]
 8004fbe:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004fc2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004fc6:	d1ee      	bne.n	8004fa6 <HAL_PWREx_EnableOverDrive+0x36>
 8004fc8:	4b10      	ldr	r3, [pc, #64]	; (800500c <HAL_PWREx_EnableOverDrive+0x9c>)
 8004fca:	681b      	ldr	r3, [r3, #0]
 8004fcc:	4a0f      	ldr	r2, [pc, #60]	; (800500c <HAL_PWREx_EnableOverDrive+0x9c>)
 8004fce:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004fd2:	6013      	str	r3, [r2, #0]
 8004fd4:	f7fe fa86 	bl	80034e4 <HAL_GetTick>
 8004fd8:	6078      	str	r0, [r7, #4]
 8004fda:	e009      	b.n	8004ff0 <HAL_PWREx_EnableOverDrive+0x80>
 8004fdc:	f7fe fa82 	bl	80034e4 <HAL_GetTick>
 8004fe0:	4602      	mov	r2, r0
 8004fe2:	687b      	ldr	r3, [r7, #4]
 8004fe4:	1ad3      	subs	r3, r2, r3
 8004fe6:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8004fea:	d901      	bls.n	8004ff0 <HAL_PWREx_EnableOverDrive+0x80>
 8004fec:	2303      	movs	r3, #3
 8004fee:	e007      	b.n	8005000 <HAL_PWREx_EnableOverDrive+0x90>
 8004ff0:	4b06      	ldr	r3, [pc, #24]	; (800500c <HAL_PWREx_EnableOverDrive+0x9c>)
 8004ff2:	685b      	ldr	r3, [r3, #4]
 8004ff4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004ff8:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8004ffc:	d1ee      	bne.n	8004fdc <HAL_PWREx_EnableOverDrive+0x6c>
 8004ffe:	2300      	movs	r3, #0
 8005000:	4618      	mov	r0, r3
 8005002:	3708      	adds	r7, #8
 8005004:	46bd      	mov	sp, r7
 8005006:	bd80      	pop	{r7, pc}
 8005008:	40023800 	.word	0x40023800
 800500c:	40007000 	.word	0x40007000

08005010 <HAL_RCC_OscConfig>:
 8005010:	b580      	push	{r7, lr}
 8005012:	b086      	sub	sp, #24
 8005014:	af00      	add	r7, sp, #0
 8005016:	6078      	str	r0, [r7, #4]
 8005018:	2300      	movs	r3, #0
 800501a:	75fb      	strb	r3, [r7, #23]
 800501c:	687b      	ldr	r3, [r7, #4]
 800501e:	2b00      	cmp	r3, #0
 8005020:	d101      	bne.n	8005026 <HAL_RCC_OscConfig+0x16>
 8005022:	2301      	movs	r3, #1
 8005024:	e291      	b.n	800554a <HAL_RCC_OscConfig+0x53a>
 8005026:	687b      	ldr	r3, [r7, #4]
 8005028:	681b      	ldr	r3, [r3, #0]
 800502a:	f003 0301 	and.w	r3, r3, #1
 800502e:	2b00      	cmp	r3, #0
 8005030:	f000 8087 	beq.w	8005142 <HAL_RCC_OscConfig+0x132>
 8005034:	4b96      	ldr	r3, [pc, #600]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 8005036:	689b      	ldr	r3, [r3, #8]
 8005038:	f003 030c 	and.w	r3, r3, #12
 800503c:	2b04      	cmp	r3, #4
 800503e:	d00c      	beq.n	800505a <HAL_RCC_OscConfig+0x4a>
 8005040:	4b93      	ldr	r3, [pc, #588]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 8005042:	689b      	ldr	r3, [r3, #8]
 8005044:	f003 030c 	and.w	r3, r3, #12
 8005048:	2b08      	cmp	r3, #8
 800504a:	d112      	bne.n	8005072 <HAL_RCC_OscConfig+0x62>
 800504c:	4b90      	ldr	r3, [pc, #576]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 800504e:	685b      	ldr	r3, [r3, #4]
 8005050:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005054:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8005058:	d10b      	bne.n	8005072 <HAL_RCC_OscConfig+0x62>
 800505a:	4b8d      	ldr	r3, [pc, #564]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 800505c:	681b      	ldr	r3, [r3, #0]
 800505e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005062:	2b00      	cmp	r3, #0
 8005064:	d06c      	beq.n	8005140 <HAL_RCC_OscConfig+0x130>
 8005066:	687b      	ldr	r3, [r7, #4]
 8005068:	685b      	ldr	r3, [r3, #4]
 800506a:	2b00      	cmp	r3, #0
 800506c:	d168      	bne.n	8005140 <HAL_RCC_OscConfig+0x130>
 800506e:	2301      	movs	r3, #1
 8005070:	e26b      	b.n	800554a <HAL_RCC_OscConfig+0x53a>
 8005072:	687b      	ldr	r3, [r7, #4]
 8005074:	685b      	ldr	r3, [r3, #4]
 8005076:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800507a:	d106      	bne.n	800508a <HAL_RCC_OscConfig+0x7a>
 800507c:	4b84      	ldr	r3, [pc, #528]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 800507e:	681b      	ldr	r3, [r3, #0]
 8005080:	4a83      	ldr	r2, [pc, #524]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 8005082:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005086:	6013      	str	r3, [r2, #0]
 8005088:	e02e      	b.n	80050e8 <HAL_RCC_OscConfig+0xd8>
 800508a:	687b      	ldr	r3, [r7, #4]
 800508c:	685b      	ldr	r3, [r3, #4]
 800508e:	2b00      	cmp	r3, #0
 8005090:	d10c      	bne.n	80050ac <HAL_RCC_OscConfig+0x9c>
 8005092:	4b7f      	ldr	r3, [pc, #508]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 8005094:	681b      	ldr	r3, [r3, #0]
 8005096:	4a7e      	ldr	r2, [pc, #504]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 8005098:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800509c:	6013      	str	r3, [r2, #0]
 800509e:	4b7c      	ldr	r3, [pc, #496]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 80050a0:	681b      	ldr	r3, [r3, #0]
 80050a2:	4a7b      	ldr	r2, [pc, #492]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 80050a4:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80050a8:	6013      	str	r3, [r2, #0]
 80050aa:	e01d      	b.n	80050e8 <HAL_RCC_OscConfig+0xd8>
 80050ac:	687b      	ldr	r3, [r7, #4]
 80050ae:	685b      	ldr	r3, [r3, #4]
 80050b0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80050b4:	d10c      	bne.n	80050d0 <HAL_RCC_OscConfig+0xc0>
 80050b6:	4b76      	ldr	r3, [pc, #472]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 80050b8:	681b      	ldr	r3, [r3, #0]
 80050ba:	4a75      	ldr	r2, [pc, #468]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 80050bc:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80050c0:	6013      	str	r3, [r2, #0]
 80050c2:	4b73      	ldr	r3, [pc, #460]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 80050c4:	681b      	ldr	r3, [r3, #0]
 80050c6:	4a72      	ldr	r2, [pc, #456]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 80050c8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80050cc:	6013      	str	r3, [r2, #0]
 80050ce:	e00b      	b.n	80050e8 <HAL_RCC_OscConfig+0xd8>
 80050d0:	4b6f      	ldr	r3, [pc, #444]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 80050d2:	681b      	ldr	r3, [r3, #0]
 80050d4:	4a6e      	ldr	r2, [pc, #440]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 80050d6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80050da:	6013      	str	r3, [r2, #0]
 80050dc:	4b6c      	ldr	r3, [pc, #432]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 80050de:	681b      	ldr	r3, [r3, #0]
 80050e0:	4a6b      	ldr	r2, [pc, #428]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 80050e2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80050e6:	6013      	str	r3, [r2, #0]
 80050e8:	687b      	ldr	r3, [r7, #4]
 80050ea:	685b      	ldr	r3, [r3, #4]
 80050ec:	2b00      	cmp	r3, #0
 80050ee:	d013      	beq.n	8005118 <HAL_RCC_OscConfig+0x108>
 80050f0:	f7fe f9f8 	bl	80034e4 <HAL_GetTick>
 80050f4:	6138      	str	r0, [r7, #16]
 80050f6:	e008      	b.n	800510a <HAL_RCC_OscConfig+0xfa>
 80050f8:	f7fe f9f4 	bl	80034e4 <HAL_GetTick>
 80050fc:	4602      	mov	r2, r0
 80050fe:	693b      	ldr	r3, [r7, #16]
 8005100:	1ad3      	subs	r3, r2, r3
 8005102:	2b64      	cmp	r3, #100	; 0x64
 8005104:	d901      	bls.n	800510a <HAL_RCC_OscConfig+0xfa>
 8005106:	2303      	movs	r3, #3
 8005108:	e21f      	b.n	800554a <HAL_RCC_OscConfig+0x53a>
 800510a:	4b61      	ldr	r3, [pc, #388]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 800510c:	681b      	ldr	r3, [r3, #0]
 800510e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005112:	2b00      	cmp	r3, #0
 8005114:	d0f0      	beq.n	80050f8 <HAL_RCC_OscConfig+0xe8>
 8005116:	e014      	b.n	8005142 <HAL_RCC_OscConfig+0x132>
 8005118:	f7fe f9e4 	bl	80034e4 <HAL_GetTick>
 800511c:	6138      	str	r0, [r7, #16]
 800511e:	e008      	b.n	8005132 <HAL_RCC_OscConfig+0x122>
 8005120:	f7fe f9e0 	bl	80034e4 <HAL_GetTick>
 8005124:	4602      	mov	r2, r0
 8005126:	693b      	ldr	r3, [r7, #16]
 8005128:	1ad3      	subs	r3, r2, r3
 800512a:	2b64      	cmp	r3, #100	; 0x64
 800512c:	d901      	bls.n	8005132 <HAL_RCC_OscConfig+0x122>
 800512e:	2303      	movs	r3, #3
 8005130:	e20b      	b.n	800554a <HAL_RCC_OscConfig+0x53a>
 8005132:	4b57      	ldr	r3, [pc, #348]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 8005134:	681b      	ldr	r3, [r3, #0]
 8005136:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800513a:	2b00      	cmp	r3, #0
 800513c:	d1f0      	bne.n	8005120 <HAL_RCC_OscConfig+0x110>
 800513e:	e000      	b.n	8005142 <HAL_RCC_OscConfig+0x132>
 8005140:	bf00      	nop
 8005142:	687b      	ldr	r3, [r7, #4]
 8005144:	681b      	ldr	r3, [r3, #0]
 8005146:	f003 0302 	and.w	r3, r3, #2
 800514a:	2b00      	cmp	r3, #0
 800514c:	d069      	beq.n	8005222 <HAL_RCC_OscConfig+0x212>
 800514e:	4b50      	ldr	r3, [pc, #320]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 8005150:	689b      	ldr	r3, [r3, #8]
 8005152:	f003 030c 	and.w	r3, r3, #12
 8005156:	2b00      	cmp	r3, #0
 8005158:	d00b      	beq.n	8005172 <HAL_RCC_OscConfig+0x162>
 800515a:	4b4d      	ldr	r3, [pc, #308]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 800515c:	689b      	ldr	r3, [r3, #8]
 800515e:	f003 030c 	and.w	r3, r3, #12
 8005162:	2b08      	cmp	r3, #8
 8005164:	d11c      	bne.n	80051a0 <HAL_RCC_OscConfig+0x190>
 8005166:	4b4a      	ldr	r3, [pc, #296]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 8005168:	685b      	ldr	r3, [r3, #4]
 800516a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800516e:	2b00      	cmp	r3, #0
 8005170:	d116      	bne.n	80051a0 <HAL_RCC_OscConfig+0x190>
 8005172:	4b47      	ldr	r3, [pc, #284]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 8005174:	681b      	ldr	r3, [r3, #0]
 8005176:	f003 0302 	and.w	r3, r3, #2
 800517a:	2b00      	cmp	r3, #0
 800517c:	d005      	beq.n	800518a <HAL_RCC_OscConfig+0x17a>
 800517e:	687b      	ldr	r3, [r7, #4]
 8005180:	68db      	ldr	r3, [r3, #12]
 8005182:	2b01      	cmp	r3, #1
 8005184:	d001      	beq.n	800518a <HAL_RCC_OscConfig+0x17a>
 8005186:	2301      	movs	r3, #1
 8005188:	e1df      	b.n	800554a <HAL_RCC_OscConfig+0x53a>
 800518a:	4b41      	ldr	r3, [pc, #260]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 800518c:	681b      	ldr	r3, [r3, #0]
 800518e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8005192:	687b      	ldr	r3, [r7, #4]
 8005194:	691b      	ldr	r3, [r3, #16]
 8005196:	00db      	lsls	r3, r3, #3
 8005198:	493d      	ldr	r1, [pc, #244]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 800519a:	4313      	orrs	r3, r2
 800519c:	600b      	str	r3, [r1, #0]
 800519e:	e040      	b.n	8005222 <HAL_RCC_OscConfig+0x212>
 80051a0:	687b      	ldr	r3, [r7, #4]
 80051a2:	68db      	ldr	r3, [r3, #12]
 80051a4:	2b00      	cmp	r3, #0
 80051a6:	d023      	beq.n	80051f0 <HAL_RCC_OscConfig+0x1e0>
 80051a8:	4b39      	ldr	r3, [pc, #228]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 80051aa:	681b      	ldr	r3, [r3, #0]
 80051ac:	4a38      	ldr	r2, [pc, #224]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 80051ae:	f043 0301 	orr.w	r3, r3, #1
 80051b2:	6013      	str	r3, [r2, #0]
 80051b4:	f7fe f996 	bl	80034e4 <HAL_GetTick>
 80051b8:	6138      	str	r0, [r7, #16]
 80051ba:	e008      	b.n	80051ce <HAL_RCC_OscConfig+0x1be>
 80051bc:	f7fe f992 	bl	80034e4 <HAL_GetTick>
 80051c0:	4602      	mov	r2, r0
 80051c2:	693b      	ldr	r3, [r7, #16]
 80051c4:	1ad3      	subs	r3, r2, r3
 80051c6:	2b02      	cmp	r3, #2
 80051c8:	d901      	bls.n	80051ce <HAL_RCC_OscConfig+0x1be>
 80051ca:	2303      	movs	r3, #3
 80051cc:	e1bd      	b.n	800554a <HAL_RCC_OscConfig+0x53a>
 80051ce:	4b30      	ldr	r3, [pc, #192]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 80051d0:	681b      	ldr	r3, [r3, #0]
 80051d2:	f003 0302 	and.w	r3, r3, #2
 80051d6:	2b00      	cmp	r3, #0
 80051d8:	d0f0      	beq.n	80051bc <HAL_RCC_OscConfig+0x1ac>
 80051da:	4b2d      	ldr	r3, [pc, #180]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 80051dc:	681b      	ldr	r3, [r3, #0]
 80051de:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80051e2:	687b      	ldr	r3, [r7, #4]
 80051e4:	691b      	ldr	r3, [r3, #16]
 80051e6:	00db      	lsls	r3, r3, #3
 80051e8:	4929      	ldr	r1, [pc, #164]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 80051ea:	4313      	orrs	r3, r2
 80051ec:	600b      	str	r3, [r1, #0]
 80051ee:	e018      	b.n	8005222 <HAL_RCC_OscConfig+0x212>
 80051f0:	4b27      	ldr	r3, [pc, #156]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 80051f2:	681b      	ldr	r3, [r3, #0]
 80051f4:	4a26      	ldr	r2, [pc, #152]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 80051f6:	f023 0301 	bic.w	r3, r3, #1
 80051fa:	6013      	str	r3, [r2, #0]
 80051fc:	f7fe f972 	bl	80034e4 <HAL_GetTick>
 8005200:	6138      	str	r0, [r7, #16]
 8005202:	e008      	b.n	8005216 <HAL_RCC_OscConfig+0x206>
 8005204:	f7fe f96e 	bl	80034e4 <HAL_GetTick>
 8005208:	4602      	mov	r2, r0
 800520a:	693b      	ldr	r3, [r7, #16]
 800520c:	1ad3      	subs	r3, r2, r3
 800520e:	2b02      	cmp	r3, #2
 8005210:	d901      	bls.n	8005216 <HAL_RCC_OscConfig+0x206>
 8005212:	2303      	movs	r3, #3
 8005214:	e199      	b.n	800554a <HAL_RCC_OscConfig+0x53a>
 8005216:	4b1e      	ldr	r3, [pc, #120]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 8005218:	681b      	ldr	r3, [r3, #0]
 800521a:	f003 0302 	and.w	r3, r3, #2
 800521e:	2b00      	cmp	r3, #0
 8005220:	d1f0      	bne.n	8005204 <HAL_RCC_OscConfig+0x1f4>
 8005222:	687b      	ldr	r3, [r7, #4]
 8005224:	681b      	ldr	r3, [r3, #0]
 8005226:	f003 0308 	and.w	r3, r3, #8
 800522a:	2b00      	cmp	r3, #0
 800522c:	d038      	beq.n	80052a0 <HAL_RCC_OscConfig+0x290>
 800522e:	687b      	ldr	r3, [r7, #4]
 8005230:	695b      	ldr	r3, [r3, #20]
 8005232:	2b00      	cmp	r3, #0
 8005234:	d019      	beq.n	800526a <HAL_RCC_OscConfig+0x25a>
 8005236:	4b16      	ldr	r3, [pc, #88]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 8005238:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800523a:	4a15      	ldr	r2, [pc, #84]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 800523c:	f043 0301 	orr.w	r3, r3, #1
 8005240:	6753      	str	r3, [r2, #116]	; 0x74
 8005242:	f7fe f94f 	bl	80034e4 <HAL_GetTick>
 8005246:	6138      	str	r0, [r7, #16]
 8005248:	e008      	b.n	800525c <HAL_RCC_OscConfig+0x24c>
 800524a:	f7fe f94b 	bl	80034e4 <HAL_GetTick>
 800524e:	4602      	mov	r2, r0
 8005250:	693b      	ldr	r3, [r7, #16]
 8005252:	1ad3      	subs	r3, r2, r3
 8005254:	2b02      	cmp	r3, #2
 8005256:	d901      	bls.n	800525c <HAL_RCC_OscConfig+0x24c>
 8005258:	2303      	movs	r3, #3
 800525a:	e176      	b.n	800554a <HAL_RCC_OscConfig+0x53a>
 800525c:	4b0c      	ldr	r3, [pc, #48]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 800525e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005260:	f003 0302 	and.w	r3, r3, #2
 8005264:	2b00      	cmp	r3, #0
 8005266:	d0f0      	beq.n	800524a <HAL_RCC_OscConfig+0x23a>
 8005268:	e01a      	b.n	80052a0 <HAL_RCC_OscConfig+0x290>
 800526a:	4b09      	ldr	r3, [pc, #36]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 800526c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800526e:	4a08      	ldr	r2, [pc, #32]	; (8005290 <HAL_RCC_OscConfig+0x280>)
 8005270:	f023 0301 	bic.w	r3, r3, #1
 8005274:	6753      	str	r3, [r2, #116]	; 0x74
 8005276:	f7fe f935 	bl	80034e4 <HAL_GetTick>
 800527a:	6138      	str	r0, [r7, #16]
 800527c:	e00a      	b.n	8005294 <HAL_RCC_OscConfig+0x284>
 800527e:	f7fe f931 	bl	80034e4 <HAL_GetTick>
 8005282:	4602      	mov	r2, r0
 8005284:	693b      	ldr	r3, [r7, #16]
 8005286:	1ad3      	subs	r3, r2, r3
 8005288:	2b02      	cmp	r3, #2
 800528a:	d903      	bls.n	8005294 <HAL_RCC_OscConfig+0x284>
 800528c:	2303      	movs	r3, #3
 800528e:	e15c      	b.n	800554a <HAL_RCC_OscConfig+0x53a>
 8005290:	40023800 	.word	0x40023800
 8005294:	4b91      	ldr	r3, [pc, #580]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 8005296:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005298:	f003 0302 	and.w	r3, r3, #2
 800529c:	2b00      	cmp	r3, #0
 800529e:	d1ee      	bne.n	800527e <HAL_RCC_OscConfig+0x26e>
 80052a0:	687b      	ldr	r3, [r7, #4]
 80052a2:	681b      	ldr	r3, [r3, #0]
 80052a4:	f003 0304 	and.w	r3, r3, #4
 80052a8:	2b00      	cmp	r3, #0
 80052aa:	f000 80a4 	beq.w	80053f6 <HAL_RCC_OscConfig+0x3e6>
 80052ae:	4b8b      	ldr	r3, [pc, #556]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 80052b0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80052b2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80052b6:	2b00      	cmp	r3, #0
 80052b8:	d10d      	bne.n	80052d6 <HAL_RCC_OscConfig+0x2c6>
 80052ba:	4b88      	ldr	r3, [pc, #544]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 80052bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80052be:	4a87      	ldr	r2, [pc, #540]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 80052c0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80052c4:	6413      	str	r3, [r2, #64]	; 0x40
 80052c6:	4b85      	ldr	r3, [pc, #532]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 80052c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80052ca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80052ce:	60bb      	str	r3, [r7, #8]
 80052d0:	68bb      	ldr	r3, [r7, #8]
 80052d2:	2301      	movs	r3, #1
 80052d4:	75fb      	strb	r3, [r7, #23]
 80052d6:	4b82      	ldr	r3, [pc, #520]	; (80054e0 <HAL_RCC_OscConfig+0x4d0>)
 80052d8:	681b      	ldr	r3, [r3, #0]
 80052da:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80052de:	2b00      	cmp	r3, #0
 80052e0:	d118      	bne.n	8005314 <HAL_RCC_OscConfig+0x304>
 80052e2:	4b7f      	ldr	r3, [pc, #508]	; (80054e0 <HAL_RCC_OscConfig+0x4d0>)
 80052e4:	681b      	ldr	r3, [r3, #0]
 80052e6:	4a7e      	ldr	r2, [pc, #504]	; (80054e0 <HAL_RCC_OscConfig+0x4d0>)
 80052e8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80052ec:	6013      	str	r3, [r2, #0]
 80052ee:	f7fe f8f9 	bl	80034e4 <HAL_GetTick>
 80052f2:	6138      	str	r0, [r7, #16]
 80052f4:	e008      	b.n	8005308 <HAL_RCC_OscConfig+0x2f8>
 80052f6:	f7fe f8f5 	bl	80034e4 <HAL_GetTick>
 80052fa:	4602      	mov	r2, r0
 80052fc:	693b      	ldr	r3, [r7, #16]
 80052fe:	1ad3      	subs	r3, r2, r3
 8005300:	2b64      	cmp	r3, #100	; 0x64
 8005302:	d901      	bls.n	8005308 <HAL_RCC_OscConfig+0x2f8>
 8005304:	2303      	movs	r3, #3
 8005306:	e120      	b.n	800554a <HAL_RCC_OscConfig+0x53a>
 8005308:	4b75      	ldr	r3, [pc, #468]	; (80054e0 <HAL_RCC_OscConfig+0x4d0>)
 800530a:	681b      	ldr	r3, [r3, #0]
 800530c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005310:	2b00      	cmp	r3, #0
 8005312:	d0f0      	beq.n	80052f6 <HAL_RCC_OscConfig+0x2e6>
 8005314:	687b      	ldr	r3, [r7, #4]
 8005316:	689b      	ldr	r3, [r3, #8]
 8005318:	2b01      	cmp	r3, #1
 800531a:	d106      	bne.n	800532a <HAL_RCC_OscConfig+0x31a>
 800531c:	4b6f      	ldr	r3, [pc, #444]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 800531e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005320:	4a6e      	ldr	r2, [pc, #440]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 8005322:	f043 0301 	orr.w	r3, r3, #1
 8005326:	6713      	str	r3, [r2, #112]	; 0x70
 8005328:	e02d      	b.n	8005386 <HAL_RCC_OscConfig+0x376>
 800532a:	687b      	ldr	r3, [r7, #4]
 800532c:	689b      	ldr	r3, [r3, #8]
 800532e:	2b00      	cmp	r3, #0
 8005330:	d10c      	bne.n	800534c <HAL_RCC_OscConfig+0x33c>
 8005332:	4b6a      	ldr	r3, [pc, #424]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 8005334:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005336:	4a69      	ldr	r2, [pc, #420]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 8005338:	f023 0301 	bic.w	r3, r3, #1
 800533c:	6713      	str	r3, [r2, #112]	; 0x70
 800533e:	4b67      	ldr	r3, [pc, #412]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 8005340:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005342:	4a66      	ldr	r2, [pc, #408]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 8005344:	f023 0304 	bic.w	r3, r3, #4
 8005348:	6713      	str	r3, [r2, #112]	; 0x70
 800534a:	e01c      	b.n	8005386 <HAL_RCC_OscConfig+0x376>
 800534c:	687b      	ldr	r3, [r7, #4]
 800534e:	689b      	ldr	r3, [r3, #8]
 8005350:	2b05      	cmp	r3, #5
 8005352:	d10c      	bne.n	800536e <HAL_RCC_OscConfig+0x35e>
 8005354:	4b61      	ldr	r3, [pc, #388]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 8005356:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005358:	4a60      	ldr	r2, [pc, #384]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 800535a:	f043 0304 	orr.w	r3, r3, #4
 800535e:	6713      	str	r3, [r2, #112]	; 0x70
 8005360:	4b5e      	ldr	r3, [pc, #376]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 8005362:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005364:	4a5d      	ldr	r2, [pc, #372]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 8005366:	f043 0301 	orr.w	r3, r3, #1
 800536a:	6713      	str	r3, [r2, #112]	; 0x70
 800536c:	e00b      	b.n	8005386 <HAL_RCC_OscConfig+0x376>
 800536e:	4b5b      	ldr	r3, [pc, #364]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 8005370:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005372:	4a5a      	ldr	r2, [pc, #360]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 8005374:	f023 0301 	bic.w	r3, r3, #1
 8005378:	6713      	str	r3, [r2, #112]	; 0x70
 800537a:	4b58      	ldr	r3, [pc, #352]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 800537c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800537e:	4a57      	ldr	r2, [pc, #348]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 8005380:	f023 0304 	bic.w	r3, r3, #4
 8005384:	6713      	str	r3, [r2, #112]	; 0x70
 8005386:	687b      	ldr	r3, [r7, #4]
 8005388:	689b      	ldr	r3, [r3, #8]
 800538a:	2b00      	cmp	r3, #0
 800538c:	d015      	beq.n	80053ba <HAL_RCC_OscConfig+0x3aa>
 800538e:	f7fe f8a9 	bl	80034e4 <HAL_GetTick>
 8005392:	6138      	str	r0, [r7, #16]
 8005394:	e00a      	b.n	80053ac <HAL_RCC_OscConfig+0x39c>
 8005396:	f7fe f8a5 	bl	80034e4 <HAL_GetTick>
 800539a:	4602      	mov	r2, r0
 800539c:	693b      	ldr	r3, [r7, #16]
 800539e:	1ad3      	subs	r3, r2, r3
 80053a0:	f241 3288 	movw	r2, #5000	; 0x1388
 80053a4:	4293      	cmp	r3, r2
 80053a6:	d901      	bls.n	80053ac <HAL_RCC_OscConfig+0x39c>
 80053a8:	2303      	movs	r3, #3
 80053aa:	e0ce      	b.n	800554a <HAL_RCC_OscConfig+0x53a>
 80053ac:	4b4b      	ldr	r3, [pc, #300]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 80053ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80053b0:	f003 0302 	and.w	r3, r3, #2
 80053b4:	2b00      	cmp	r3, #0
 80053b6:	d0ee      	beq.n	8005396 <HAL_RCC_OscConfig+0x386>
 80053b8:	e014      	b.n	80053e4 <HAL_RCC_OscConfig+0x3d4>
 80053ba:	f7fe f893 	bl	80034e4 <HAL_GetTick>
 80053be:	6138      	str	r0, [r7, #16]
 80053c0:	e00a      	b.n	80053d8 <HAL_RCC_OscConfig+0x3c8>
 80053c2:	f7fe f88f 	bl	80034e4 <HAL_GetTick>
 80053c6:	4602      	mov	r2, r0
 80053c8:	693b      	ldr	r3, [r7, #16]
 80053ca:	1ad3      	subs	r3, r2, r3
 80053cc:	f241 3288 	movw	r2, #5000	; 0x1388
 80053d0:	4293      	cmp	r3, r2
 80053d2:	d901      	bls.n	80053d8 <HAL_RCC_OscConfig+0x3c8>
 80053d4:	2303      	movs	r3, #3
 80053d6:	e0b8      	b.n	800554a <HAL_RCC_OscConfig+0x53a>
 80053d8:	4b40      	ldr	r3, [pc, #256]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 80053da:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80053dc:	f003 0302 	and.w	r3, r3, #2
 80053e0:	2b00      	cmp	r3, #0
 80053e2:	d1ee      	bne.n	80053c2 <HAL_RCC_OscConfig+0x3b2>
 80053e4:	7dfb      	ldrb	r3, [r7, #23]
 80053e6:	2b01      	cmp	r3, #1
 80053e8:	d105      	bne.n	80053f6 <HAL_RCC_OscConfig+0x3e6>
 80053ea:	4b3c      	ldr	r3, [pc, #240]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 80053ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80053ee:	4a3b      	ldr	r2, [pc, #236]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 80053f0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80053f4:	6413      	str	r3, [r2, #64]	; 0x40
 80053f6:	687b      	ldr	r3, [r7, #4]
 80053f8:	699b      	ldr	r3, [r3, #24]
 80053fa:	2b00      	cmp	r3, #0
 80053fc:	f000 80a4 	beq.w	8005548 <HAL_RCC_OscConfig+0x538>
 8005400:	4b36      	ldr	r3, [pc, #216]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 8005402:	689b      	ldr	r3, [r3, #8]
 8005404:	f003 030c 	and.w	r3, r3, #12
 8005408:	2b08      	cmp	r3, #8
 800540a:	d06b      	beq.n	80054e4 <HAL_RCC_OscConfig+0x4d4>
 800540c:	687b      	ldr	r3, [r7, #4]
 800540e:	699b      	ldr	r3, [r3, #24]
 8005410:	2b02      	cmp	r3, #2
 8005412:	d149      	bne.n	80054a8 <HAL_RCC_OscConfig+0x498>
 8005414:	4b31      	ldr	r3, [pc, #196]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 8005416:	681b      	ldr	r3, [r3, #0]
 8005418:	4a30      	ldr	r2, [pc, #192]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 800541a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800541e:	6013      	str	r3, [r2, #0]
 8005420:	f7fe f860 	bl	80034e4 <HAL_GetTick>
 8005424:	6138      	str	r0, [r7, #16]
 8005426:	e008      	b.n	800543a <HAL_RCC_OscConfig+0x42a>
 8005428:	f7fe f85c 	bl	80034e4 <HAL_GetTick>
 800542c:	4602      	mov	r2, r0
 800542e:	693b      	ldr	r3, [r7, #16]
 8005430:	1ad3      	subs	r3, r2, r3
 8005432:	2b02      	cmp	r3, #2
 8005434:	d901      	bls.n	800543a <HAL_RCC_OscConfig+0x42a>
 8005436:	2303      	movs	r3, #3
 8005438:	e087      	b.n	800554a <HAL_RCC_OscConfig+0x53a>
 800543a:	4b28      	ldr	r3, [pc, #160]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 800543c:	681b      	ldr	r3, [r3, #0]
 800543e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005442:	2b00      	cmp	r3, #0
 8005444:	d1f0      	bne.n	8005428 <HAL_RCC_OscConfig+0x418>
 8005446:	687b      	ldr	r3, [r7, #4]
 8005448:	69da      	ldr	r2, [r3, #28]
 800544a:	687b      	ldr	r3, [r7, #4]
 800544c:	6a1b      	ldr	r3, [r3, #32]
 800544e:	431a      	orrs	r2, r3
 8005450:	687b      	ldr	r3, [r7, #4]
 8005452:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005454:	019b      	lsls	r3, r3, #6
 8005456:	431a      	orrs	r2, r3
 8005458:	687b      	ldr	r3, [r7, #4]
 800545a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800545c:	085b      	lsrs	r3, r3, #1
 800545e:	3b01      	subs	r3, #1
 8005460:	041b      	lsls	r3, r3, #16
 8005462:	431a      	orrs	r2, r3
 8005464:	687b      	ldr	r3, [r7, #4]
 8005466:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005468:	061b      	lsls	r3, r3, #24
 800546a:	4313      	orrs	r3, r2
 800546c:	4a1b      	ldr	r2, [pc, #108]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 800546e:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8005472:	6053      	str	r3, [r2, #4]
 8005474:	4b19      	ldr	r3, [pc, #100]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 8005476:	681b      	ldr	r3, [r3, #0]
 8005478:	4a18      	ldr	r2, [pc, #96]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 800547a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800547e:	6013      	str	r3, [r2, #0]
 8005480:	f7fe f830 	bl	80034e4 <HAL_GetTick>
 8005484:	6138      	str	r0, [r7, #16]
 8005486:	e008      	b.n	800549a <HAL_RCC_OscConfig+0x48a>
 8005488:	f7fe f82c 	bl	80034e4 <HAL_GetTick>
 800548c:	4602      	mov	r2, r0
 800548e:	693b      	ldr	r3, [r7, #16]
 8005490:	1ad3      	subs	r3, r2, r3
 8005492:	2b02      	cmp	r3, #2
 8005494:	d901      	bls.n	800549a <HAL_RCC_OscConfig+0x48a>
 8005496:	2303      	movs	r3, #3
 8005498:	e057      	b.n	800554a <HAL_RCC_OscConfig+0x53a>
 800549a:	4b10      	ldr	r3, [pc, #64]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 800549c:	681b      	ldr	r3, [r3, #0]
 800549e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80054a2:	2b00      	cmp	r3, #0
 80054a4:	d0f0      	beq.n	8005488 <HAL_RCC_OscConfig+0x478>
 80054a6:	e04f      	b.n	8005548 <HAL_RCC_OscConfig+0x538>
 80054a8:	4b0c      	ldr	r3, [pc, #48]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 80054aa:	681b      	ldr	r3, [r3, #0]
 80054ac:	4a0b      	ldr	r2, [pc, #44]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 80054ae:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80054b2:	6013      	str	r3, [r2, #0]
 80054b4:	f7fe f816 	bl	80034e4 <HAL_GetTick>
 80054b8:	6138      	str	r0, [r7, #16]
 80054ba:	e008      	b.n	80054ce <HAL_RCC_OscConfig+0x4be>
 80054bc:	f7fe f812 	bl	80034e4 <HAL_GetTick>
 80054c0:	4602      	mov	r2, r0
 80054c2:	693b      	ldr	r3, [r7, #16]
 80054c4:	1ad3      	subs	r3, r2, r3
 80054c6:	2b02      	cmp	r3, #2
 80054c8:	d901      	bls.n	80054ce <HAL_RCC_OscConfig+0x4be>
 80054ca:	2303      	movs	r3, #3
 80054cc:	e03d      	b.n	800554a <HAL_RCC_OscConfig+0x53a>
 80054ce:	4b03      	ldr	r3, [pc, #12]	; (80054dc <HAL_RCC_OscConfig+0x4cc>)
 80054d0:	681b      	ldr	r3, [r3, #0]
 80054d2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80054d6:	2b00      	cmp	r3, #0
 80054d8:	d1f0      	bne.n	80054bc <HAL_RCC_OscConfig+0x4ac>
 80054da:	e035      	b.n	8005548 <HAL_RCC_OscConfig+0x538>
 80054dc:	40023800 	.word	0x40023800
 80054e0:	40007000 	.word	0x40007000
 80054e4:	4b1b      	ldr	r3, [pc, #108]	; (8005554 <HAL_RCC_OscConfig+0x544>)
 80054e6:	685b      	ldr	r3, [r3, #4]
 80054e8:	60fb      	str	r3, [r7, #12]
 80054ea:	687b      	ldr	r3, [r7, #4]
 80054ec:	699b      	ldr	r3, [r3, #24]
 80054ee:	2b01      	cmp	r3, #1
 80054f0:	d028      	beq.n	8005544 <HAL_RCC_OscConfig+0x534>
 80054f2:	68fb      	ldr	r3, [r7, #12]
 80054f4:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 80054f8:	687b      	ldr	r3, [r7, #4]
 80054fa:	69db      	ldr	r3, [r3, #28]
 80054fc:	429a      	cmp	r2, r3
 80054fe:	d121      	bne.n	8005544 <HAL_RCC_OscConfig+0x534>
 8005500:	68fb      	ldr	r3, [r7, #12]
 8005502:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8005506:	687b      	ldr	r3, [r7, #4]
 8005508:	6a1b      	ldr	r3, [r3, #32]
 800550a:	429a      	cmp	r2, r3
 800550c:	d11a      	bne.n	8005544 <HAL_RCC_OscConfig+0x534>
 800550e:	68fa      	ldr	r2, [r7, #12]
 8005510:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8005514:	4013      	ands	r3, r2
 8005516:	687a      	ldr	r2, [r7, #4]
 8005518:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800551a:	0192      	lsls	r2, r2, #6
 800551c:	4293      	cmp	r3, r2
 800551e:	d111      	bne.n	8005544 <HAL_RCC_OscConfig+0x534>
 8005520:	68fb      	ldr	r3, [r7, #12]
 8005522:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8005526:	687b      	ldr	r3, [r7, #4]
 8005528:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800552a:	085b      	lsrs	r3, r3, #1
 800552c:	3b01      	subs	r3, #1
 800552e:	041b      	lsls	r3, r3, #16
 8005530:	429a      	cmp	r2, r3
 8005532:	d107      	bne.n	8005544 <HAL_RCC_OscConfig+0x534>
 8005534:	68fb      	ldr	r3, [r7, #12]
 8005536:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 800553a:	687b      	ldr	r3, [r7, #4]
 800553c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800553e:	061b      	lsls	r3, r3, #24
 8005540:	429a      	cmp	r2, r3
 8005542:	d001      	beq.n	8005548 <HAL_RCC_OscConfig+0x538>
 8005544:	2301      	movs	r3, #1
 8005546:	e000      	b.n	800554a <HAL_RCC_OscConfig+0x53a>
 8005548:	2300      	movs	r3, #0
 800554a:	4618      	mov	r0, r3
 800554c:	3718      	adds	r7, #24
 800554e:	46bd      	mov	sp, r7
 8005550:	bd80      	pop	{r7, pc}
 8005552:	bf00      	nop
 8005554:	40023800 	.word	0x40023800

08005558 <HAL_RCC_ClockConfig>:
 8005558:	b580      	push	{r7, lr}
 800555a:	b084      	sub	sp, #16
 800555c:	af00      	add	r7, sp, #0
 800555e:	6078      	str	r0, [r7, #4]
 8005560:	6039      	str	r1, [r7, #0]
 8005562:	2300      	movs	r3, #0
 8005564:	60fb      	str	r3, [r7, #12]
 8005566:	687b      	ldr	r3, [r7, #4]
 8005568:	2b00      	cmp	r3, #0
 800556a:	d101      	bne.n	8005570 <HAL_RCC_ClockConfig+0x18>
 800556c:	2301      	movs	r3, #1
 800556e:	e0d0      	b.n	8005712 <HAL_RCC_ClockConfig+0x1ba>
 8005570:	4b6a      	ldr	r3, [pc, #424]	; (800571c <HAL_RCC_ClockConfig+0x1c4>)
 8005572:	681b      	ldr	r3, [r3, #0]
 8005574:	f003 030f 	and.w	r3, r3, #15
 8005578:	683a      	ldr	r2, [r7, #0]
 800557a:	429a      	cmp	r2, r3
 800557c:	d910      	bls.n	80055a0 <HAL_RCC_ClockConfig+0x48>
 800557e:	4b67      	ldr	r3, [pc, #412]	; (800571c <HAL_RCC_ClockConfig+0x1c4>)
 8005580:	681b      	ldr	r3, [r3, #0]
 8005582:	f023 020f 	bic.w	r2, r3, #15
 8005586:	4965      	ldr	r1, [pc, #404]	; (800571c <HAL_RCC_ClockConfig+0x1c4>)
 8005588:	683b      	ldr	r3, [r7, #0]
 800558a:	4313      	orrs	r3, r2
 800558c:	600b      	str	r3, [r1, #0]
 800558e:	4b63      	ldr	r3, [pc, #396]	; (800571c <HAL_RCC_ClockConfig+0x1c4>)
 8005590:	681b      	ldr	r3, [r3, #0]
 8005592:	f003 030f 	and.w	r3, r3, #15
 8005596:	683a      	ldr	r2, [r7, #0]
 8005598:	429a      	cmp	r2, r3
 800559a:	d001      	beq.n	80055a0 <HAL_RCC_ClockConfig+0x48>
 800559c:	2301      	movs	r3, #1
 800559e:	e0b8      	b.n	8005712 <HAL_RCC_ClockConfig+0x1ba>
 80055a0:	687b      	ldr	r3, [r7, #4]
 80055a2:	681b      	ldr	r3, [r3, #0]
 80055a4:	f003 0302 	and.w	r3, r3, #2
 80055a8:	2b00      	cmp	r3, #0
 80055aa:	d020      	beq.n	80055ee <HAL_RCC_ClockConfig+0x96>
 80055ac:	687b      	ldr	r3, [r7, #4]
 80055ae:	681b      	ldr	r3, [r3, #0]
 80055b0:	f003 0304 	and.w	r3, r3, #4
 80055b4:	2b00      	cmp	r3, #0
 80055b6:	d005      	beq.n	80055c4 <HAL_RCC_ClockConfig+0x6c>
 80055b8:	4b59      	ldr	r3, [pc, #356]	; (8005720 <HAL_RCC_ClockConfig+0x1c8>)
 80055ba:	689b      	ldr	r3, [r3, #8]
 80055bc:	4a58      	ldr	r2, [pc, #352]	; (8005720 <HAL_RCC_ClockConfig+0x1c8>)
 80055be:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80055c2:	6093      	str	r3, [r2, #8]
 80055c4:	687b      	ldr	r3, [r7, #4]
 80055c6:	681b      	ldr	r3, [r3, #0]
 80055c8:	f003 0308 	and.w	r3, r3, #8
 80055cc:	2b00      	cmp	r3, #0
 80055ce:	d005      	beq.n	80055dc <HAL_RCC_ClockConfig+0x84>
 80055d0:	4b53      	ldr	r3, [pc, #332]	; (8005720 <HAL_RCC_ClockConfig+0x1c8>)
 80055d2:	689b      	ldr	r3, [r3, #8]
 80055d4:	4a52      	ldr	r2, [pc, #328]	; (8005720 <HAL_RCC_ClockConfig+0x1c8>)
 80055d6:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80055da:	6093      	str	r3, [r2, #8]
 80055dc:	4b50      	ldr	r3, [pc, #320]	; (8005720 <HAL_RCC_ClockConfig+0x1c8>)
 80055de:	689b      	ldr	r3, [r3, #8]
 80055e0:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80055e4:	687b      	ldr	r3, [r7, #4]
 80055e6:	689b      	ldr	r3, [r3, #8]
 80055e8:	494d      	ldr	r1, [pc, #308]	; (8005720 <HAL_RCC_ClockConfig+0x1c8>)
 80055ea:	4313      	orrs	r3, r2
 80055ec:	608b      	str	r3, [r1, #8]
 80055ee:	687b      	ldr	r3, [r7, #4]
 80055f0:	681b      	ldr	r3, [r3, #0]
 80055f2:	f003 0301 	and.w	r3, r3, #1
 80055f6:	2b00      	cmp	r3, #0
 80055f8:	d040      	beq.n	800567c <HAL_RCC_ClockConfig+0x124>
 80055fa:	687b      	ldr	r3, [r7, #4]
 80055fc:	685b      	ldr	r3, [r3, #4]
 80055fe:	2b01      	cmp	r3, #1
 8005600:	d107      	bne.n	8005612 <HAL_RCC_ClockConfig+0xba>
 8005602:	4b47      	ldr	r3, [pc, #284]	; (8005720 <HAL_RCC_ClockConfig+0x1c8>)
 8005604:	681b      	ldr	r3, [r3, #0]
 8005606:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800560a:	2b00      	cmp	r3, #0
 800560c:	d115      	bne.n	800563a <HAL_RCC_ClockConfig+0xe2>
 800560e:	2301      	movs	r3, #1
 8005610:	e07f      	b.n	8005712 <HAL_RCC_ClockConfig+0x1ba>
 8005612:	687b      	ldr	r3, [r7, #4]
 8005614:	685b      	ldr	r3, [r3, #4]
 8005616:	2b02      	cmp	r3, #2
 8005618:	d107      	bne.n	800562a <HAL_RCC_ClockConfig+0xd2>
 800561a:	4b41      	ldr	r3, [pc, #260]	; (8005720 <HAL_RCC_ClockConfig+0x1c8>)
 800561c:	681b      	ldr	r3, [r3, #0]
 800561e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005622:	2b00      	cmp	r3, #0
 8005624:	d109      	bne.n	800563a <HAL_RCC_ClockConfig+0xe2>
 8005626:	2301      	movs	r3, #1
 8005628:	e073      	b.n	8005712 <HAL_RCC_ClockConfig+0x1ba>
 800562a:	4b3d      	ldr	r3, [pc, #244]	; (8005720 <HAL_RCC_ClockConfig+0x1c8>)
 800562c:	681b      	ldr	r3, [r3, #0]
 800562e:	f003 0302 	and.w	r3, r3, #2
 8005632:	2b00      	cmp	r3, #0
 8005634:	d101      	bne.n	800563a <HAL_RCC_ClockConfig+0xe2>
 8005636:	2301      	movs	r3, #1
 8005638:	e06b      	b.n	8005712 <HAL_RCC_ClockConfig+0x1ba>
 800563a:	4b39      	ldr	r3, [pc, #228]	; (8005720 <HAL_RCC_ClockConfig+0x1c8>)
 800563c:	689b      	ldr	r3, [r3, #8]
 800563e:	f023 0203 	bic.w	r2, r3, #3
 8005642:	687b      	ldr	r3, [r7, #4]
 8005644:	685b      	ldr	r3, [r3, #4]
 8005646:	4936      	ldr	r1, [pc, #216]	; (8005720 <HAL_RCC_ClockConfig+0x1c8>)
 8005648:	4313      	orrs	r3, r2
 800564a:	608b      	str	r3, [r1, #8]
 800564c:	f7fd ff4a 	bl	80034e4 <HAL_GetTick>
 8005650:	60f8      	str	r0, [r7, #12]
 8005652:	e00a      	b.n	800566a <HAL_RCC_ClockConfig+0x112>
 8005654:	f7fd ff46 	bl	80034e4 <HAL_GetTick>
 8005658:	4602      	mov	r2, r0
 800565a:	68fb      	ldr	r3, [r7, #12]
 800565c:	1ad3      	subs	r3, r2, r3
 800565e:	f241 3288 	movw	r2, #5000	; 0x1388
 8005662:	4293      	cmp	r3, r2
 8005664:	d901      	bls.n	800566a <HAL_RCC_ClockConfig+0x112>
 8005666:	2303      	movs	r3, #3
 8005668:	e053      	b.n	8005712 <HAL_RCC_ClockConfig+0x1ba>
 800566a:	4b2d      	ldr	r3, [pc, #180]	; (8005720 <HAL_RCC_ClockConfig+0x1c8>)
 800566c:	689b      	ldr	r3, [r3, #8]
 800566e:	f003 020c 	and.w	r2, r3, #12
 8005672:	687b      	ldr	r3, [r7, #4]
 8005674:	685b      	ldr	r3, [r3, #4]
 8005676:	009b      	lsls	r3, r3, #2
 8005678:	429a      	cmp	r2, r3
 800567a:	d1eb      	bne.n	8005654 <HAL_RCC_ClockConfig+0xfc>
 800567c:	4b27      	ldr	r3, [pc, #156]	; (800571c <HAL_RCC_ClockConfig+0x1c4>)
 800567e:	681b      	ldr	r3, [r3, #0]
 8005680:	f003 030f 	and.w	r3, r3, #15
 8005684:	683a      	ldr	r2, [r7, #0]
 8005686:	429a      	cmp	r2, r3
 8005688:	d210      	bcs.n	80056ac <HAL_RCC_ClockConfig+0x154>
 800568a:	4b24      	ldr	r3, [pc, #144]	; (800571c <HAL_RCC_ClockConfig+0x1c4>)
 800568c:	681b      	ldr	r3, [r3, #0]
 800568e:	f023 020f 	bic.w	r2, r3, #15
 8005692:	4922      	ldr	r1, [pc, #136]	; (800571c <HAL_RCC_ClockConfig+0x1c4>)
 8005694:	683b      	ldr	r3, [r7, #0]
 8005696:	4313      	orrs	r3, r2
 8005698:	600b      	str	r3, [r1, #0]
 800569a:	4b20      	ldr	r3, [pc, #128]	; (800571c <HAL_RCC_ClockConfig+0x1c4>)
 800569c:	681b      	ldr	r3, [r3, #0]
 800569e:	f003 030f 	and.w	r3, r3, #15
 80056a2:	683a      	ldr	r2, [r7, #0]
 80056a4:	429a      	cmp	r2, r3
 80056a6:	d001      	beq.n	80056ac <HAL_RCC_ClockConfig+0x154>
 80056a8:	2301      	movs	r3, #1
 80056aa:	e032      	b.n	8005712 <HAL_RCC_ClockConfig+0x1ba>
 80056ac:	687b      	ldr	r3, [r7, #4]
 80056ae:	681b      	ldr	r3, [r3, #0]
 80056b0:	f003 0304 	and.w	r3, r3, #4
 80056b4:	2b00      	cmp	r3, #0
 80056b6:	d008      	beq.n	80056ca <HAL_RCC_ClockConfig+0x172>
 80056b8:	4b19      	ldr	r3, [pc, #100]	; (8005720 <HAL_RCC_ClockConfig+0x1c8>)
 80056ba:	689b      	ldr	r3, [r3, #8]
 80056bc:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 80056c0:	687b      	ldr	r3, [r7, #4]
 80056c2:	68db      	ldr	r3, [r3, #12]
 80056c4:	4916      	ldr	r1, [pc, #88]	; (8005720 <HAL_RCC_ClockConfig+0x1c8>)
 80056c6:	4313      	orrs	r3, r2
 80056c8:	608b      	str	r3, [r1, #8]
 80056ca:	687b      	ldr	r3, [r7, #4]
 80056cc:	681b      	ldr	r3, [r3, #0]
 80056ce:	f003 0308 	and.w	r3, r3, #8
 80056d2:	2b00      	cmp	r3, #0
 80056d4:	d009      	beq.n	80056ea <HAL_RCC_ClockConfig+0x192>
 80056d6:	4b12      	ldr	r3, [pc, #72]	; (8005720 <HAL_RCC_ClockConfig+0x1c8>)
 80056d8:	689b      	ldr	r3, [r3, #8]
 80056da:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80056de:	687b      	ldr	r3, [r7, #4]
 80056e0:	691b      	ldr	r3, [r3, #16]
 80056e2:	00db      	lsls	r3, r3, #3
 80056e4:	490e      	ldr	r1, [pc, #56]	; (8005720 <HAL_RCC_ClockConfig+0x1c8>)
 80056e6:	4313      	orrs	r3, r2
 80056e8:	608b      	str	r3, [r1, #8]
 80056ea:	f000 f821 	bl	8005730 <HAL_RCC_GetSysClockFreq>
 80056ee:	4602      	mov	r2, r0
 80056f0:	4b0b      	ldr	r3, [pc, #44]	; (8005720 <HAL_RCC_ClockConfig+0x1c8>)
 80056f2:	689b      	ldr	r3, [r3, #8]
 80056f4:	091b      	lsrs	r3, r3, #4
 80056f6:	f003 030f 	and.w	r3, r3, #15
 80056fa:	490a      	ldr	r1, [pc, #40]	; (8005724 <HAL_RCC_ClockConfig+0x1cc>)
 80056fc:	5ccb      	ldrb	r3, [r1, r3]
 80056fe:	fa22 f303 	lsr.w	r3, r2, r3
 8005702:	4a09      	ldr	r2, [pc, #36]	; (8005728 <HAL_RCC_ClockConfig+0x1d0>)
 8005704:	6013      	str	r3, [r2, #0]
 8005706:	4b09      	ldr	r3, [pc, #36]	; (800572c <HAL_RCC_ClockConfig+0x1d4>)
 8005708:	681b      	ldr	r3, [r3, #0]
 800570a:	4618      	mov	r0, r3
 800570c:	f7fd fea6 	bl	800345c <HAL_InitTick>
 8005710:	2300      	movs	r3, #0
 8005712:	4618      	mov	r0, r3
 8005714:	3710      	adds	r7, #16
 8005716:	46bd      	mov	sp, r7
 8005718:	bd80      	pop	{r7, pc}
 800571a:	bf00      	nop
 800571c:	40023c00 	.word	0x40023c00
 8005720:	40023800 	.word	0x40023800
 8005724:	0800a920 	.word	0x0800a920
 8005728:	20000084 	.word	0x20000084
 800572c:	20000088 	.word	0x20000088

08005730 <HAL_RCC_GetSysClockFreq>:
 8005730:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005734:	b094      	sub	sp, #80	; 0x50
 8005736:	af00      	add	r7, sp, #0
 8005738:	2300      	movs	r3, #0
 800573a:	647b      	str	r3, [r7, #68]	; 0x44
 800573c:	2300      	movs	r3, #0
 800573e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8005740:	2300      	movs	r3, #0
 8005742:	643b      	str	r3, [r7, #64]	; 0x40
 8005744:	2300      	movs	r3, #0
 8005746:	64bb      	str	r3, [r7, #72]	; 0x48
 8005748:	4b79      	ldr	r3, [pc, #484]	; (8005930 <HAL_RCC_GetSysClockFreq+0x200>)
 800574a:	689b      	ldr	r3, [r3, #8]
 800574c:	f003 030c 	and.w	r3, r3, #12
 8005750:	2b08      	cmp	r3, #8
 8005752:	d00d      	beq.n	8005770 <HAL_RCC_GetSysClockFreq+0x40>
 8005754:	2b08      	cmp	r3, #8
 8005756:	f200 80e1 	bhi.w	800591c <HAL_RCC_GetSysClockFreq+0x1ec>
 800575a:	2b00      	cmp	r3, #0
 800575c:	d002      	beq.n	8005764 <HAL_RCC_GetSysClockFreq+0x34>
 800575e:	2b04      	cmp	r3, #4
 8005760:	d003      	beq.n	800576a <HAL_RCC_GetSysClockFreq+0x3a>
 8005762:	e0db      	b.n	800591c <HAL_RCC_GetSysClockFreq+0x1ec>
 8005764:	4b73      	ldr	r3, [pc, #460]	; (8005934 <HAL_RCC_GetSysClockFreq+0x204>)
 8005766:	64bb      	str	r3, [r7, #72]	; 0x48
 8005768:	e0db      	b.n	8005922 <HAL_RCC_GetSysClockFreq+0x1f2>
 800576a:	4b73      	ldr	r3, [pc, #460]	; (8005938 <HAL_RCC_GetSysClockFreq+0x208>)
 800576c:	64bb      	str	r3, [r7, #72]	; 0x48
 800576e:	e0d8      	b.n	8005922 <HAL_RCC_GetSysClockFreq+0x1f2>
 8005770:	4b6f      	ldr	r3, [pc, #444]	; (8005930 <HAL_RCC_GetSysClockFreq+0x200>)
 8005772:	685b      	ldr	r3, [r3, #4]
 8005774:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8005778:	647b      	str	r3, [r7, #68]	; 0x44
 800577a:	4b6d      	ldr	r3, [pc, #436]	; (8005930 <HAL_RCC_GetSysClockFreq+0x200>)
 800577c:	685b      	ldr	r3, [r3, #4]
 800577e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005782:	2b00      	cmp	r3, #0
 8005784:	d063      	beq.n	800584e <HAL_RCC_GetSysClockFreq+0x11e>
 8005786:	4b6a      	ldr	r3, [pc, #424]	; (8005930 <HAL_RCC_GetSysClockFreq+0x200>)
 8005788:	685b      	ldr	r3, [r3, #4]
 800578a:	099b      	lsrs	r3, r3, #6
 800578c:	2200      	movs	r2, #0
 800578e:	63bb      	str	r3, [r7, #56]	; 0x38
 8005790:	63fa      	str	r2, [r7, #60]	; 0x3c
 8005792:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005794:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005798:	633b      	str	r3, [r7, #48]	; 0x30
 800579a:	2300      	movs	r3, #0
 800579c:	637b      	str	r3, [r7, #52]	; 0x34
 800579e:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 80057a2:	4622      	mov	r2, r4
 80057a4:	462b      	mov	r3, r5
 80057a6:	f04f 0000 	mov.w	r0, #0
 80057aa:	f04f 0100 	mov.w	r1, #0
 80057ae:	0159      	lsls	r1, r3, #5
 80057b0:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80057b4:	0150      	lsls	r0, r2, #5
 80057b6:	4602      	mov	r2, r0
 80057b8:	460b      	mov	r3, r1
 80057ba:	4621      	mov	r1, r4
 80057bc:	1a51      	subs	r1, r2, r1
 80057be:	6139      	str	r1, [r7, #16]
 80057c0:	4629      	mov	r1, r5
 80057c2:	eb63 0301 	sbc.w	r3, r3, r1
 80057c6:	617b      	str	r3, [r7, #20]
 80057c8:	f04f 0200 	mov.w	r2, #0
 80057cc:	f04f 0300 	mov.w	r3, #0
 80057d0:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80057d4:	4659      	mov	r1, fp
 80057d6:	018b      	lsls	r3, r1, #6
 80057d8:	4651      	mov	r1, sl
 80057da:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80057de:	4651      	mov	r1, sl
 80057e0:	018a      	lsls	r2, r1, #6
 80057e2:	4651      	mov	r1, sl
 80057e4:	ebb2 0801 	subs.w	r8, r2, r1
 80057e8:	4659      	mov	r1, fp
 80057ea:	eb63 0901 	sbc.w	r9, r3, r1
 80057ee:	f04f 0200 	mov.w	r2, #0
 80057f2:	f04f 0300 	mov.w	r3, #0
 80057f6:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80057fa:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80057fe:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8005802:	4690      	mov	r8, r2
 8005804:	4699      	mov	r9, r3
 8005806:	4623      	mov	r3, r4
 8005808:	eb18 0303 	adds.w	r3, r8, r3
 800580c:	60bb      	str	r3, [r7, #8]
 800580e:	462b      	mov	r3, r5
 8005810:	eb49 0303 	adc.w	r3, r9, r3
 8005814:	60fb      	str	r3, [r7, #12]
 8005816:	f04f 0200 	mov.w	r2, #0
 800581a:	f04f 0300 	mov.w	r3, #0
 800581e:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8005822:	4629      	mov	r1, r5
 8005824:	024b      	lsls	r3, r1, #9
 8005826:	4621      	mov	r1, r4
 8005828:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 800582c:	4621      	mov	r1, r4
 800582e:	024a      	lsls	r2, r1, #9
 8005830:	4610      	mov	r0, r2
 8005832:	4619      	mov	r1, r3
 8005834:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8005836:	2200      	movs	r2, #0
 8005838:	62bb      	str	r3, [r7, #40]	; 0x28
 800583a:	62fa      	str	r2, [r7, #44]	; 0x2c
 800583c:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8005840:	f7fb fa04 	bl	8000c4c <__aeabi_uldivmod>
 8005844:	4602      	mov	r2, r0
 8005846:	460b      	mov	r3, r1
 8005848:	4613      	mov	r3, r2
 800584a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800584c:	e058      	b.n	8005900 <HAL_RCC_GetSysClockFreq+0x1d0>
 800584e:	4b38      	ldr	r3, [pc, #224]	; (8005930 <HAL_RCC_GetSysClockFreq+0x200>)
 8005850:	685b      	ldr	r3, [r3, #4]
 8005852:	099b      	lsrs	r3, r3, #6
 8005854:	2200      	movs	r2, #0
 8005856:	4618      	mov	r0, r3
 8005858:	4611      	mov	r1, r2
 800585a:	f3c0 0308 	ubfx	r3, r0, #0, #9
 800585e:	623b      	str	r3, [r7, #32]
 8005860:	2300      	movs	r3, #0
 8005862:	627b      	str	r3, [r7, #36]	; 0x24
 8005864:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8005868:	4642      	mov	r2, r8
 800586a:	464b      	mov	r3, r9
 800586c:	f04f 0000 	mov.w	r0, #0
 8005870:	f04f 0100 	mov.w	r1, #0
 8005874:	0159      	lsls	r1, r3, #5
 8005876:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800587a:	0150      	lsls	r0, r2, #5
 800587c:	4602      	mov	r2, r0
 800587e:	460b      	mov	r3, r1
 8005880:	4641      	mov	r1, r8
 8005882:	ebb2 0a01 	subs.w	sl, r2, r1
 8005886:	4649      	mov	r1, r9
 8005888:	eb63 0b01 	sbc.w	fp, r3, r1
 800588c:	f04f 0200 	mov.w	r2, #0
 8005890:	f04f 0300 	mov.w	r3, #0
 8005894:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8005898:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 800589c:	ea4f 128a 	mov.w	r2, sl, lsl #6
 80058a0:	ebb2 040a 	subs.w	r4, r2, sl
 80058a4:	eb63 050b 	sbc.w	r5, r3, fp
 80058a8:	f04f 0200 	mov.w	r2, #0
 80058ac:	f04f 0300 	mov.w	r3, #0
 80058b0:	00eb      	lsls	r3, r5, #3
 80058b2:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80058b6:	00e2      	lsls	r2, r4, #3
 80058b8:	4614      	mov	r4, r2
 80058ba:	461d      	mov	r5, r3
 80058bc:	4643      	mov	r3, r8
 80058be:	18e3      	adds	r3, r4, r3
 80058c0:	603b      	str	r3, [r7, #0]
 80058c2:	464b      	mov	r3, r9
 80058c4:	eb45 0303 	adc.w	r3, r5, r3
 80058c8:	607b      	str	r3, [r7, #4]
 80058ca:	f04f 0200 	mov.w	r2, #0
 80058ce:	f04f 0300 	mov.w	r3, #0
 80058d2:	e9d7 4500 	ldrd	r4, r5, [r7]
 80058d6:	4629      	mov	r1, r5
 80058d8:	028b      	lsls	r3, r1, #10
 80058da:	4621      	mov	r1, r4
 80058dc:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80058e0:	4621      	mov	r1, r4
 80058e2:	028a      	lsls	r2, r1, #10
 80058e4:	4610      	mov	r0, r2
 80058e6:	4619      	mov	r1, r3
 80058e8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80058ea:	2200      	movs	r2, #0
 80058ec:	61bb      	str	r3, [r7, #24]
 80058ee:	61fa      	str	r2, [r7, #28]
 80058f0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80058f4:	f7fb f9aa 	bl	8000c4c <__aeabi_uldivmod>
 80058f8:	4602      	mov	r2, r0
 80058fa:	460b      	mov	r3, r1
 80058fc:	4613      	mov	r3, r2
 80058fe:	64fb      	str	r3, [r7, #76]	; 0x4c
 8005900:	4b0b      	ldr	r3, [pc, #44]	; (8005930 <HAL_RCC_GetSysClockFreq+0x200>)
 8005902:	685b      	ldr	r3, [r3, #4]
 8005904:	0c1b      	lsrs	r3, r3, #16
 8005906:	f003 0303 	and.w	r3, r3, #3
 800590a:	3301      	adds	r3, #1
 800590c:	005b      	lsls	r3, r3, #1
 800590e:	643b      	str	r3, [r7, #64]	; 0x40
 8005910:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8005912:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8005914:	fbb2 f3f3 	udiv	r3, r2, r3
 8005918:	64bb      	str	r3, [r7, #72]	; 0x48
 800591a:	e002      	b.n	8005922 <HAL_RCC_GetSysClockFreq+0x1f2>
 800591c:	4b05      	ldr	r3, [pc, #20]	; (8005934 <HAL_RCC_GetSysClockFreq+0x204>)
 800591e:	64bb      	str	r3, [r7, #72]	; 0x48
 8005920:	bf00      	nop
 8005922:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005924:	4618      	mov	r0, r3
 8005926:	3750      	adds	r7, #80	; 0x50
 8005928:	46bd      	mov	sp, r7
 800592a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800592e:	bf00      	nop
 8005930:	40023800 	.word	0x40023800
 8005934:	00f42400 	.word	0x00f42400
 8005938:	007a1200 	.word	0x007a1200

0800593c <HAL_RCC_GetHCLKFreq>:
 800593c:	b480      	push	{r7}
 800593e:	af00      	add	r7, sp, #0
 8005940:	4b03      	ldr	r3, [pc, #12]	; (8005950 <HAL_RCC_GetHCLKFreq+0x14>)
 8005942:	681b      	ldr	r3, [r3, #0]
 8005944:	4618      	mov	r0, r3
 8005946:	46bd      	mov	sp, r7
 8005948:	f85d 7b04 	ldr.w	r7, [sp], #4
 800594c:	4770      	bx	lr
 800594e:	bf00      	nop
 8005950:	20000084 	.word	0x20000084

08005954 <HAL_RCC_GetPCLK1Freq>:
 8005954:	b580      	push	{r7, lr}
 8005956:	af00      	add	r7, sp, #0
 8005958:	f7ff fff0 	bl	800593c <HAL_RCC_GetHCLKFreq>
 800595c:	4602      	mov	r2, r0
 800595e:	4b05      	ldr	r3, [pc, #20]	; (8005974 <HAL_RCC_GetPCLK1Freq+0x20>)
 8005960:	689b      	ldr	r3, [r3, #8]
 8005962:	0a9b      	lsrs	r3, r3, #10
 8005964:	f003 0307 	and.w	r3, r3, #7
 8005968:	4903      	ldr	r1, [pc, #12]	; (8005978 <HAL_RCC_GetPCLK1Freq+0x24>)
 800596a:	5ccb      	ldrb	r3, [r1, r3]
 800596c:	fa22 f303 	lsr.w	r3, r2, r3
 8005970:	4618      	mov	r0, r3
 8005972:	bd80      	pop	{r7, pc}
 8005974:	40023800 	.word	0x40023800
 8005978:	0800a930 	.word	0x0800a930

0800597c <HAL_RCC_GetPCLK2Freq>:
 800597c:	b580      	push	{r7, lr}
 800597e:	af00      	add	r7, sp, #0
 8005980:	f7ff ffdc 	bl	800593c <HAL_RCC_GetHCLKFreq>
 8005984:	4602      	mov	r2, r0
 8005986:	4b05      	ldr	r3, [pc, #20]	; (800599c <HAL_RCC_GetPCLK2Freq+0x20>)
 8005988:	689b      	ldr	r3, [r3, #8]
 800598a:	0b5b      	lsrs	r3, r3, #13
 800598c:	f003 0307 	and.w	r3, r3, #7
 8005990:	4903      	ldr	r1, [pc, #12]	; (80059a0 <HAL_RCC_GetPCLK2Freq+0x24>)
 8005992:	5ccb      	ldrb	r3, [r1, r3]
 8005994:	fa22 f303 	lsr.w	r3, r2, r3
 8005998:	4618      	mov	r0, r3
 800599a:	bd80      	pop	{r7, pc}
 800599c:	40023800 	.word	0x40023800
 80059a0:	0800a930 	.word	0x0800a930

080059a4 <HAL_RCCEx_PeriphCLKConfig>:
 80059a4:	b580      	push	{r7, lr}
 80059a6:	b088      	sub	sp, #32
 80059a8:	af00      	add	r7, sp, #0
 80059aa:	6078      	str	r0, [r7, #4]
 80059ac:	2300      	movs	r3, #0
 80059ae:	617b      	str	r3, [r7, #20]
 80059b0:	2300      	movs	r3, #0
 80059b2:	613b      	str	r3, [r7, #16]
 80059b4:	2300      	movs	r3, #0
 80059b6:	60fb      	str	r3, [r7, #12]
 80059b8:	2300      	movs	r3, #0
 80059ba:	61fb      	str	r3, [r7, #28]
 80059bc:	2300      	movs	r3, #0
 80059be:	61bb      	str	r3, [r7, #24]
 80059c0:	687b      	ldr	r3, [r7, #4]
 80059c2:	681b      	ldr	r3, [r3, #0]
 80059c4:	f003 0301 	and.w	r3, r3, #1
 80059c8:	2b00      	cmp	r3, #0
 80059ca:	d012      	beq.n	80059f2 <HAL_RCCEx_PeriphCLKConfig+0x4e>
 80059cc:	4b69      	ldr	r3, [pc, #420]	; (8005b74 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80059ce:	689b      	ldr	r3, [r3, #8]
 80059d0:	4a68      	ldr	r2, [pc, #416]	; (8005b74 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80059d2:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80059d6:	6093      	str	r3, [r2, #8]
 80059d8:	4b66      	ldr	r3, [pc, #408]	; (8005b74 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80059da:	689a      	ldr	r2, [r3, #8]
 80059dc:	687b      	ldr	r3, [r7, #4]
 80059de:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80059e0:	4964      	ldr	r1, [pc, #400]	; (8005b74 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80059e2:	4313      	orrs	r3, r2
 80059e4:	608b      	str	r3, [r1, #8]
 80059e6:	687b      	ldr	r3, [r7, #4]
 80059e8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80059ea:	2b00      	cmp	r3, #0
 80059ec:	d101      	bne.n	80059f2 <HAL_RCCEx_PeriphCLKConfig+0x4e>
 80059ee:	2301      	movs	r3, #1
 80059f0:	61fb      	str	r3, [r7, #28]
 80059f2:	687b      	ldr	r3, [r7, #4]
 80059f4:	681b      	ldr	r3, [r3, #0]
 80059f6:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80059fa:	2b00      	cmp	r3, #0
 80059fc:	d017      	beq.n	8005a2e <HAL_RCCEx_PeriphCLKConfig+0x8a>
 80059fe:	4b5d      	ldr	r3, [pc, #372]	; (8005b74 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005a00:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005a04:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8005a08:	687b      	ldr	r3, [r7, #4]
 8005a0a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005a0c:	4959      	ldr	r1, [pc, #356]	; (8005b74 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005a0e:	4313      	orrs	r3, r2
 8005a10:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8005a14:	687b      	ldr	r3, [r7, #4]
 8005a16:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005a18:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8005a1c:	d101      	bne.n	8005a22 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8005a1e:	2301      	movs	r3, #1
 8005a20:	61fb      	str	r3, [r7, #28]
 8005a22:	687b      	ldr	r3, [r7, #4]
 8005a24:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005a26:	2b00      	cmp	r3, #0
 8005a28:	d101      	bne.n	8005a2e <HAL_RCCEx_PeriphCLKConfig+0x8a>
 8005a2a:	2301      	movs	r3, #1
 8005a2c:	61bb      	str	r3, [r7, #24]
 8005a2e:	687b      	ldr	r3, [r7, #4]
 8005a30:	681b      	ldr	r3, [r3, #0]
 8005a32:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8005a36:	2b00      	cmp	r3, #0
 8005a38:	d017      	beq.n	8005a6a <HAL_RCCEx_PeriphCLKConfig+0xc6>
 8005a3a:	4b4e      	ldr	r3, [pc, #312]	; (8005b74 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005a3c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005a40:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8005a44:	687b      	ldr	r3, [r7, #4]
 8005a46:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a48:	494a      	ldr	r1, [pc, #296]	; (8005b74 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005a4a:	4313      	orrs	r3, r2
 8005a4c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8005a50:	687b      	ldr	r3, [r7, #4]
 8005a52:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a54:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8005a58:	d101      	bne.n	8005a5e <HAL_RCCEx_PeriphCLKConfig+0xba>
 8005a5a:	2301      	movs	r3, #1
 8005a5c:	61fb      	str	r3, [r7, #28]
 8005a5e:	687b      	ldr	r3, [r7, #4]
 8005a60:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a62:	2b00      	cmp	r3, #0
 8005a64:	d101      	bne.n	8005a6a <HAL_RCCEx_PeriphCLKConfig+0xc6>
 8005a66:	2301      	movs	r3, #1
 8005a68:	61bb      	str	r3, [r7, #24]
 8005a6a:	687b      	ldr	r3, [r7, #4]
 8005a6c:	681b      	ldr	r3, [r3, #0]
 8005a6e:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005a72:	2b00      	cmp	r3, #0
 8005a74:	d001      	beq.n	8005a7a <HAL_RCCEx_PeriphCLKConfig+0xd6>
 8005a76:	2301      	movs	r3, #1
 8005a78:	61fb      	str	r3, [r7, #28]
 8005a7a:	687b      	ldr	r3, [r7, #4]
 8005a7c:	681b      	ldr	r3, [r3, #0]
 8005a7e:	f003 0320 	and.w	r3, r3, #32
 8005a82:	2b00      	cmp	r3, #0
 8005a84:	f000 808b 	beq.w	8005b9e <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8005a88:	4b3a      	ldr	r3, [pc, #232]	; (8005b74 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005a8a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a8c:	4a39      	ldr	r2, [pc, #228]	; (8005b74 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005a8e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005a92:	6413      	str	r3, [r2, #64]	; 0x40
 8005a94:	4b37      	ldr	r3, [pc, #220]	; (8005b74 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005a96:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a98:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005a9c:	60bb      	str	r3, [r7, #8]
 8005a9e:	68bb      	ldr	r3, [r7, #8]
 8005aa0:	4b35      	ldr	r3, [pc, #212]	; (8005b78 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8005aa2:	681b      	ldr	r3, [r3, #0]
 8005aa4:	4a34      	ldr	r2, [pc, #208]	; (8005b78 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8005aa6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005aaa:	6013      	str	r3, [r2, #0]
 8005aac:	f7fd fd1a 	bl	80034e4 <HAL_GetTick>
 8005ab0:	6178      	str	r0, [r7, #20]
 8005ab2:	e008      	b.n	8005ac6 <HAL_RCCEx_PeriphCLKConfig+0x122>
 8005ab4:	f7fd fd16 	bl	80034e4 <HAL_GetTick>
 8005ab8:	4602      	mov	r2, r0
 8005aba:	697b      	ldr	r3, [r7, #20]
 8005abc:	1ad3      	subs	r3, r2, r3
 8005abe:	2b64      	cmp	r3, #100	; 0x64
 8005ac0:	d901      	bls.n	8005ac6 <HAL_RCCEx_PeriphCLKConfig+0x122>
 8005ac2:	2303      	movs	r3, #3
 8005ac4:	e357      	b.n	8006176 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 8005ac6:	4b2c      	ldr	r3, [pc, #176]	; (8005b78 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8005ac8:	681b      	ldr	r3, [r3, #0]
 8005aca:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005ace:	2b00      	cmp	r3, #0
 8005ad0:	d0f0      	beq.n	8005ab4 <HAL_RCCEx_PeriphCLKConfig+0x110>
 8005ad2:	4b28      	ldr	r3, [pc, #160]	; (8005b74 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005ad4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005ad6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005ada:	613b      	str	r3, [r7, #16]
 8005adc:	693b      	ldr	r3, [r7, #16]
 8005ade:	2b00      	cmp	r3, #0
 8005ae0:	d035      	beq.n	8005b4e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8005ae2:	687b      	ldr	r3, [r7, #4]
 8005ae4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005ae6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005aea:	693a      	ldr	r2, [r7, #16]
 8005aec:	429a      	cmp	r2, r3
 8005aee:	d02e      	beq.n	8005b4e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8005af0:	4b20      	ldr	r3, [pc, #128]	; (8005b74 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005af2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005af4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005af8:	613b      	str	r3, [r7, #16]
 8005afa:	4b1e      	ldr	r3, [pc, #120]	; (8005b74 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005afc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005afe:	4a1d      	ldr	r2, [pc, #116]	; (8005b74 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005b00:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005b04:	6713      	str	r3, [r2, #112]	; 0x70
 8005b06:	4b1b      	ldr	r3, [pc, #108]	; (8005b74 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005b08:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005b0a:	4a1a      	ldr	r2, [pc, #104]	; (8005b74 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005b0c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005b10:	6713      	str	r3, [r2, #112]	; 0x70
 8005b12:	4a18      	ldr	r2, [pc, #96]	; (8005b74 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005b14:	693b      	ldr	r3, [r7, #16]
 8005b16:	6713      	str	r3, [r2, #112]	; 0x70
 8005b18:	4b16      	ldr	r3, [pc, #88]	; (8005b74 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005b1a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005b1c:	f003 0301 	and.w	r3, r3, #1
 8005b20:	2b01      	cmp	r3, #1
 8005b22:	d114      	bne.n	8005b4e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8005b24:	f7fd fcde 	bl	80034e4 <HAL_GetTick>
 8005b28:	6178      	str	r0, [r7, #20]
 8005b2a:	e00a      	b.n	8005b42 <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8005b2c:	f7fd fcda 	bl	80034e4 <HAL_GetTick>
 8005b30:	4602      	mov	r2, r0
 8005b32:	697b      	ldr	r3, [r7, #20]
 8005b34:	1ad3      	subs	r3, r2, r3
 8005b36:	f241 3288 	movw	r2, #5000	; 0x1388
 8005b3a:	4293      	cmp	r3, r2
 8005b3c:	d901      	bls.n	8005b42 <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8005b3e:	2303      	movs	r3, #3
 8005b40:	e319      	b.n	8006176 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 8005b42:	4b0c      	ldr	r3, [pc, #48]	; (8005b74 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005b44:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005b46:	f003 0302 	and.w	r3, r3, #2
 8005b4a:	2b00      	cmp	r3, #0
 8005b4c:	d0ee      	beq.n	8005b2c <HAL_RCCEx_PeriphCLKConfig+0x188>
 8005b4e:	687b      	ldr	r3, [r7, #4]
 8005b50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005b52:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005b56:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8005b5a:	d111      	bne.n	8005b80 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 8005b5c:	4b05      	ldr	r3, [pc, #20]	; (8005b74 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005b5e:	689b      	ldr	r3, [r3, #8]
 8005b60:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 8005b64:	687b      	ldr	r3, [r7, #4]
 8005b66:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8005b68:	4b04      	ldr	r3, [pc, #16]	; (8005b7c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8005b6a:	400b      	ands	r3, r1
 8005b6c:	4901      	ldr	r1, [pc, #4]	; (8005b74 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005b6e:	4313      	orrs	r3, r2
 8005b70:	608b      	str	r3, [r1, #8]
 8005b72:	e00b      	b.n	8005b8c <HAL_RCCEx_PeriphCLKConfig+0x1e8>
 8005b74:	40023800 	.word	0x40023800
 8005b78:	40007000 	.word	0x40007000
 8005b7c:	0ffffcff 	.word	0x0ffffcff
 8005b80:	4baa      	ldr	r3, [pc, #680]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005b82:	689b      	ldr	r3, [r3, #8]
 8005b84:	4aa9      	ldr	r2, [pc, #676]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005b86:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8005b8a:	6093      	str	r3, [r2, #8]
 8005b8c:	4ba7      	ldr	r3, [pc, #668]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005b8e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8005b90:	687b      	ldr	r3, [r7, #4]
 8005b92:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005b94:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005b98:	49a4      	ldr	r1, [pc, #656]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005b9a:	4313      	orrs	r3, r2
 8005b9c:	670b      	str	r3, [r1, #112]	; 0x70
 8005b9e:	687b      	ldr	r3, [r7, #4]
 8005ba0:	681b      	ldr	r3, [r3, #0]
 8005ba2:	f003 0310 	and.w	r3, r3, #16
 8005ba6:	2b00      	cmp	r3, #0
 8005ba8:	d010      	beq.n	8005bcc <HAL_RCCEx_PeriphCLKConfig+0x228>
 8005baa:	4ba0      	ldr	r3, [pc, #640]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005bac:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005bb0:	4a9e      	ldr	r2, [pc, #632]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005bb2:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8005bb6:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
 8005bba:	4b9c      	ldr	r3, [pc, #624]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005bbc:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8005bc0:	687b      	ldr	r3, [r7, #4]
 8005bc2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005bc4:	4999      	ldr	r1, [pc, #612]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005bc6:	4313      	orrs	r3, r2
 8005bc8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8005bcc:	687b      	ldr	r3, [r7, #4]
 8005bce:	681b      	ldr	r3, [r3, #0]
 8005bd0:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8005bd4:	2b00      	cmp	r3, #0
 8005bd6:	d00a      	beq.n	8005bee <HAL_RCCEx_PeriphCLKConfig+0x24a>
 8005bd8:	4b94      	ldr	r3, [pc, #592]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005bda:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005bde:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8005be2:	687b      	ldr	r3, [r7, #4]
 8005be4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8005be6:	4991      	ldr	r1, [pc, #580]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005be8:	4313      	orrs	r3, r2
 8005bea:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005bee:	687b      	ldr	r3, [r7, #4]
 8005bf0:	681b      	ldr	r3, [r3, #0]
 8005bf2:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8005bf6:	2b00      	cmp	r3, #0
 8005bf8:	d00a      	beq.n	8005c10 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 8005bfa:	4b8c      	ldr	r3, [pc, #560]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005bfc:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005c00:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8005c04:	687b      	ldr	r3, [r7, #4]
 8005c06:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8005c08:	4988      	ldr	r1, [pc, #544]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005c0a:	4313      	orrs	r3, r2
 8005c0c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005c10:	687b      	ldr	r3, [r7, #4]
 8005c12:	681b      	ldr	r3, [r3, #0]
 8005c14:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005c18:	2b00      	cmp	r3, #0
 8005c1a:	d00a      	beq.n	8005c32 <HAL_RCCEx_PeriphCLKConfig+0x28e>
 8005c1c:	4b83      	ldr	r3, [pc, #524]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005c1e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005c22:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8005c26:	687b      	ldr	r3, [r7, #4]
 8005c28:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8005c2a:	4980      	ldr	r1, [pc, #512]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005c2c:	4313      	orrs	r3, r2
 8005c2e:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005c32:	687b      	ldr	r3, [r7, #4]
 8005c34:	681b      	ldr	r3, [r3, #0]
 8005c36:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005c3a:	2b00      	cmp	r3, #0
 8005c3c:	d00a      	beq.n	8005c54 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
 8005c3e:	4b7b      	ldr	r3, [pc, #492]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005c40:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005c44:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8005c48:	687b      	ldr	r3, [r7, #4]
 8005c4a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005c4c:	4977      	ldr	r1, [pc, #476]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005c4e:	4313      	orrs	r3, r2
 8005c50:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005c54:	687b      	ldr	r3, [r7, #4]
 8005c56:	681b      	ldr	r3, [r3, #0]
 8005c58:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005c5c:	2b00      	cmp	r3, #0
 8005c5e:	d00a      	beq.n	8005c76 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8005c60:	4b72      	ldr	r3, [pc, #456]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005c62:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005c66:	f023 0203 	bic.w	r2, r3, #3
 8005c6a:	687b      	ldr	r3, [r7, #4]
 8005c6c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005c6e:	496f      	ldr	r1, [pc, #444]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005c70:	4313      	orrs	r3, r2
 8005c72:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005c76:	687b      	ldr	r3, [r7, #4]
 8005c78:	681b      	ldr	r3, [r3, #0]
 8005c7a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005c7e:	2b00      	cmp	r3, #0
 8005c80:	d00a      	beq.n	8005c98 <HAL_RCCEx_PeriphCLKConfig+0x2f4>
 8005c82:	4b6a      	ldr	r3, [pc, #424]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005c84:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005c88:	f023 020c 	bic.w	r2, r3, #12
 8005c8c:	687b      	ldr	r3, [r7, #4]
 8005c8e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005c90:	4966      	ldr	r1, [pc, #408]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005c92:	4313      	orrs	r3, r2
 8005c94:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005c98:	687b      	ldr	r3, [r7, #4]
 8005c9a:	681b      	ldr	r3, [r3, #0]
 8005c9c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005ca0:	2b00      	cmp	r3, #0
 8005ca2:	d00a      	beq.n	8005cba <HAL_RCCEx_PeriphCLKConfig+0x316>
 8005ca4:	4b61      	ldr	r3, [pc, #388]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005ca6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005caa:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8005cae:	687b      	ldr	r3, [r7, #4]
 8005cb0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005cb2:	495e      	ldr	r1, [pc, #376]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005cb4:	4313      	orrs	r3, r2
 8005cb6:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005cba:	687b      	ldr	r3, [r7, #4]
 8005cbc:	681b      	ldr	r3, [r3, #0]
 8005cbe:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8005cc2:	2b00      	cmp	r3, #0
 8005cc4:	d00a      	beq.n	8005cdc <HAL_RCCEx_PeriphCLKConfig+0x338>
 8005cc6:	4b59      	ldr	r3, [pc, #356]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005cc8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005ccc:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 8005cd0:	687b      	ldr	r3, [r7, #4]
 8005cd2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005cd4:	4955      	ldr	r1, [pc, #340]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005cd6:	4313      	orrs	r3, r2
 8005cd8:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005cdc:	687b      	ldr	r3, [r7, #4]
 8005cde:	681b      	ldr	r3, [r3, #0]
 8005ce0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005ce4:	2b00      	cmp	r3, #0
 8005ce6:	d00a      	beq.n	8005cfe <HAL_RCCEx_PeriphCLKConfig+0x35a>
 8005ce8:	4b50      	ldr	r3, [pc, #320]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005cea:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005cee:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8005cf2:	687b      	ldr	r3, [r7, #4]
 8005cf4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005cf6:	494d      	ldr	r1, [pc, #308]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005cf8:	4313      	orrs	r3, r2
 8005cfa:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005cfe:	687b      	ldr	r3, [r7, #4]
 8005d00:	681b      	ldr	r3, [r3, #0]
 8005d02:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8005d06:	2b00      	cmp	r3, #0
 8005d08:	d00a      	beq.n	8005d20 <HAL_RCCEx_PeriphCLKConfig+0x37c>
 8005d0a:	4b48      	ldr	r3, [pc, #288]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005d0c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005d10:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 8005d14:	687b      	ldr	r3, [r7, #4]
 8005d16:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005d18:	4944      	ldr	r1, [pc, #272]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005d1a:	4313      	orrs	r3, r2
 8005d1c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005d20:	687b      	ldr	r3, [r7, #4]
 8005d22:	681b      	ldr	r3, [r3, #0]
 8005d24:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8005d28:	2b00      	cmp	r3, #0
 8005d2a:	d00a      	beq.n	8005d42 <HAL_RCCEx_PeriphCLKConfig+0x39e>
 8005d2c:	4b3f      	ldr	r3, [pc, #252]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005d2e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005d32:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8005d36:	687b      	ldr	r3, [r7, #4]
 8005d38:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005d3a:	493c      	ldr	r1, [pc, #240]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005d3c:	4313      	orrs	r3, r2
 8005d3e:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005d42:	687b      	ldr	r3, [r7, #4]
 8005d44:	681b      	ldr	r3, [r3, #0]
 8005d46:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8005d4a:	2b00      	cmp	r3, #0
 8005d4c:	d00a      	beq.n	8005d64 <HAL_RCCEx_PeriphCLKConfig+0x3c0>
 8005d4e:	4b37      	ldr	r3, [pc, #220]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005d50:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005d54:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8005d58:	687b      	ldr	r3, [r7, #4]
 8005d5a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005d5c:	4933      	ldr	r1, [pc, #204]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005d5e:	4313      	orrs	r3, r2
 8005d60:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005d64:	687b      	ldr	r3, [r7, #4]
 8005d66:	681b      	ldr	r3, [r3, #0]
 8005d68:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005d6c:	2b00      	cmp	r3, #0
 8005d6e:	d00a      	beq.n	8005d86 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
 8005d70:	4b2e      	ldr	r3, [pc, #184]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005d72:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005d76:	f023 6280 	bic.w	r2, r3, #67108864	; 0x4000000
 8005d7a:	687b      	ldr	r3, [r7, #4]
 8005d7c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8005d7e:	492b      	ldr	r1, [pc, #172]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005d80:	4313      	orrs	r3, r2
 8005d82:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005d86:	687b      	ldr	r3, [r7, #4]
 8005d88:	681b      	ldr	r3, [r3, #0]
 8005d8a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005d8e:	2b00      	cmp	r3, #0
 8005d90:	d011      	beq.n	8005db6 <HAL_RCCEx_PeriphCLKConfig+0x412>
 8005d92:	4b26      	ldr	r3, [pc, #152]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005d94:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005d98:	f023 6200 	bic.w	r2, r3, #134217728	; 0x8000000
 8005d9c:	687b      	ldr	r3, [r7, #4]
 8005d9e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8005da0:	4922      	ldr	r1, [pc, #136]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005da2:	4313      	orrs	r3, r2
 8005da4:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005da8:	687b      	ldr	r3, [r7, #4]
 8005daa:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8005dac:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8005db0:	d101      	bne.n	8005db6 <HAL_RCCEx_PeriphCLKConfig+0x412>
 8005db2:	2301      	movs	r3, #1
 8005db4:	61bb      	str	r3, [r7, #24]
 8005db6:	687b      	ldr	r3, [r7, #4]
 8005db8:	681b      	ldr	r3, [r3, #0]
 8005dba:	f003 0308 	and.w	r3, r3, #8
 8005dbe:	2b00      	cmp	r3, #0
 8005dc0:	d001      	beq.n	8005dc6 <HAL_RCCEx_PeriphCLKConfig+0x422>
 8005dc2:	2301      	movs	r3, #1
 8005dc4:	61bb      	str	r3, [r7, #24]
 8005dc6:	687b      	ldr	r3, [r7, #4]
 8005dc8:	681b      	ldr	r3, [r3, #0]
 8005dca:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8005dce:	2b00      	cmp	r3, #0
 8005dd0:	d00a      	beq.n	8005de8 <HAL_RCCEx_PeriphCLKConfig+0x444>
 8005dd2:	4b16      	ldr	r3, [pc, #88]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005dd4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005dd8:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 8005ddc:	687b      	ldr	r3, [r7, #4]
 8005dde:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005de0:	4912      	ldr	r1, [pc, #72]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005de2:	4313      	orrs	r3, r2
 8005de4:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005de8:	687b      	ldr	r3, [r7, #4]
 8005dea:	681b      	ldr	r3, [r3, #0]
 8005dec:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8005df0:	2b00      	cmp	r3, #0
 8005df2:	d00b      	beq.n	8005e0c <HAL_RCCEx_PeriphCLKConfig+0x468>
 8005df4:	4b0d      	ldr	r3, [pc, #52]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005df6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005dfa:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 8005dfe:	687b      	ldr	r3, [r7, #4]
 8005e00:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8005e04:	4909      	ldr	r1, [pc, #36]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005e06:	4313      	orrs	r3, r2
 8005e08:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005e0c:	69fb      	ldr	r3, [r7, #28]
 8005e0e:	2b01      	cmp	r3, #1
 8005e10:	d006      	beq.n	8005e20 <HAL_RCCEx_PeriphCLKConfig+0x47c>
 8005e12:	687b      	ldr	r3, [r7, #4]
 8005e14:	681b      	ldr	r3, [r3, #0]
 8005e16:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005e1a:	2b00      	cmp	r3, #0
 8005e1c:	f000 80d9 	beq.w	8005fd2 <HAL_RCCEx_PeriphCLKConfig+0x62e>
 8005e20:	4b02      	ldr	r3, [pc, #8]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005e22:	681b      	ldr	r3, [r3, #0]
 8005e24:	4a01      	ldr	r2, [pc, #4]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005e26:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8005e2a:	e001      	b.n	8005e30 <HAL_RCCEx_PeriphCLKConfig+0x48c>
 8005e2c:	40023800 	.word	0x40023800
 8005e30:	6013      	str	r3, [r2, #0]
 8005e32:	f7fd fb57 	bl	80034e4 <HAL_GetTick>
 8005e36:	6178      	str	r0, [r7, #20]
 8005e38:	e008      	b.n	8005e4c <HAL_RCCEx_PeriphCLKConfig+0x4a8>
 8005e3a:	f7fd fb53 	bl	80034e4 <HAL_GetTick>
 8005e3e:	4602      	mov	r2, r0
 8005e40:	697b      	ldr	r3, [r7, #20]
 8005e42:	1ad3      	subs	r3, r2, r3
 8005e44:	2b64      	cmp	r3, #100	; 0x64
 8005e46:	d901      	bls.n	8005e4c <HAL_RCCEx_PeriphCLKConfig+0x4a8>
 8005e48:	2303      	movs	r3, #3
 8005e4a:	e194      	b.n	8006176 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 8005e4c:	4b6c      	ldr	r3, [pc, #432]	; (8006000 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005e4e:	681b      	ldr	r3, [r3, #0]
 8005e50:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005e54:	2b00      	cmp	r3, #0
 8005e56:	d1f0      	bne.n	8005e3a <HAL_RCCEx_PeriphCLKConfig+0x496>
 8005e58:	687b      	ldr	r3, [r7, #4]
 8005e5a:	681b      	ldr	r3, [r3, #0]
 8005e5c:	f003 0301 	and.w	r3, r3, #1
 8005e60:	2b00      	cmp	r3, #0
 8005e62:	d021      	beq.n	8005ea8 <HAL_RCCEx_PeriphCLKConfig+0x504>
 8005e64:	687b      	ldr	r3, [r7, #4]
 8005e66:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005e68:	2b00      	cmp	r3, #0
 8005e6a:	d11d      	bne.n	8005ea8 <HAL_RCCEx_PeriphCLKConfig+0x504>
 8005e6c:	4b64      	ldr	r3, [pc, #400]	; (8006000 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005e6e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005e72:	0c1b      	lsrs	r3, r3, #16
 8005e74:	f003 0303 	and.w	r3, r3, #3
 8005e78:	613b      	str	r3, [r7, #16]
 8005e7a:	4b61      	ldr	r3, [pc, #388]	; (8006000 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005e7c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005e80:	0e1b      	lsrs	r3, r3, #24
 8005e82:	f003 030f 	and.w	r3, r3, #15
 8005e86:	60fb      	str	r3, [r7, #12]
 8005e88:	687b      	ldr	r3, [r7, #4]
 8005e8a:	685b      	ldr	r3, [r3, #4]
 8005e8c:	019a      	lsls	r2, r3, #6
 8005e8e:	693b      	ldr	r3, [r7, #16]
 8005e90:	041b      	lsls	r3, r3, #16
 8005e92:	431a      	orrs	r2, r3
 8005e94:	68fb      	ldr	r3, [r7, #12]
 8005e96:	061b      	lsls	r3, r3, #24
 8005e98:	431a      	orrs	r2, r3
 8005e9a:	687b      	ldr	r3, [r7, #4]
 8005e9c:	689b      	ldr	r3, [r3, #8]
 8005e9e:	071b      	lsls	r3, r3, #28
 8005ea0:	4957      	ldr	r1, [pc, #348]	; (8006000 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005ea2:	4313      	orrs	r3, r2
 8005ea4:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8005ea8:	687b      	ldr	r3, [r7, #4]
 8005eaa:	681b      	ldr	r3, [r3, #0]
 8005eac:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8005eb0:	2b00      	cmp	r3, #0
 8005eb2:	d004      	beq.n	8005ebe <HAL_RCCEx_PeriphCLKConfig+0x51a>
 8005eb4:	687b      	ldr	r3, [r7, #4]
 8005eb6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005eb8:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8005ebc:	d00a      	beq.n	8005ed4 <HAL_RCCEx_PeriphCLKConfig+0x530>
 8005ebe:	687b      	ldr	r3, [r7, #4]
 8005ec0:	681b      	ldr	r3, [r3, #0]
 8005ec2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8005ec6:	2b00      	cmp	r3, #0
 8005ec8:	d02e      	beq.n	8005f28 <HAL_RCCEx_PeriphCLKConfig+0x584>
 8005eca:	687b      	ldr	r3, [r7, #4]
 8005ecc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005ece:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8005ed2:	d129      	bne.n	8005f28 <HAL_RCCEx_PeriphCLKConfig+0x584>
 8005ed4:	4b4a      	ldr	r3, [pc, #296]	; (8006000 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005ed6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005eda:	0c1b      	lsrs	r3, r3, #16
 8005edc:	f003 0303 	and.w	r3, r3, #3
 8005ee0:	613b      	str	r3, [r7, #16]
 8005ee2:	4b47      	ldr	r3, [pc, #284]	; (8006000 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005ee4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005ee8:	0f1b      	lsrs	r3, r3, #28
 8005eea:	f003 0307 	and.w	r3, r3, #7
 8005eee:	60fb      	str	r3, [r7, #12]
 8005ef0:	687b      	ldr	r3, [r7, #4]
 8005ef2:	685b      	ldr	r3, [r3, #4]
 8005ef4:	019a      	lsls	r2, r3, #6
 8005ef6:	693b      	ldr	r3, [r7, #16]
 8005ef8:	041b      	lsls	r3, r3, #16
 8005efa:	431a      	orrs	r2, r3
 8005efc:	687b      	ldr	r3, [r7, #4]
 8005efe:	68db      	ldr	r3, [r3, #12]
 8005f00:	061b      	lsls	r3, r3, #24
 8005f02:	431a      	orrs	r2, r3
 8005f04:	68fb      	ldr	r3, [r7, #12]
 8005f06:	071b      	lsls	r3, r3, #28
 8005f08:	493d      	ldr	r1, [pc, #244]	; (8006000 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005f0a:	4313      	orrs	r3, r2
 8005f0c:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8005f10:	4b3b      	ldr	r3, [pc, #236]	; (8006000 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005f12:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005f16:	f023 021f 	bic.w	r2, r3, #31
 8005f1a:	687b      	ldr	r3, [r7, #4]
 8005f1c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f1e:	3b01      	subs	r3, #1
 8005f20:	4937      	ldr	r1, [pc, #220]	; (8006000 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005f22:	4313      	orrs	r3, r2
 8005f24:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8005f28:	687b      	ldr	r3, [r7, #4]
 8005f2a:	681b      	ldr	r3, [r3, #0]
 8005f2c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005f30:	2b00      	cmp	r3, #0
 8005f32:	d01d      	beq.n	8005f70 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
 8005f34:	4b32      	ldr	r3, [pc, #200]	; (8006000 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005f36:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005f3a:	0e1b      	lsrs	r3, r3, #24
 8005f3c:	f003 030f 	and.w	r3, r3, #15
 8005f40:	613b      	str	r3, [r7, #16]
 8005f42:	4b2f      	ldr	r3, [pc, #188]	; (8006000 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005f44:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005f48:	0f1b      	lsrs	r3, r3, #28
 8005f4a:	f003 0307 	and.w	r3, r3, #7
 8005f4e:	60fb      	str	r3, [r7, #12]
 8005f50:	687b      	ldr	r3, [r7, #4]
 8005f52:	685b      	ldr	r3, [r3, #4]
 8005f54:	019a      	lsls	r2, r3, #6
 8005f56:	687b      	ldr	r3, [r7, #4]
 8005f58:	691b      	ldr	r3, [r3, #16]
 8005f5a:	041b      	lsls	r3, r3, #16
 8005f5c:	431a      	orrs	r2, r3
 8005f5e:	693b      	ldr	r3, [r7, #16]
 8005f60:	061b      	lsls	r3, r3, #24
 8005f62:	431a      	orrs	r2, r3
 8005f64:	68fb      	ldr	r3, [r7, #12]
 8005f66:	071b      	lsls	r3, r3, #28
 8005f68:	4925      	ldr	r1, [pc, #148]	; (8006000 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005f6a:	4313      	orrs	r3, r2
 8005f6c:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8005f70:	687b      	ldr	r3, [r7, #4]
 8005f72:	681b      	ldr	r3, [r3, #0]
 8005f74:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005f78:	2b00      	cmp	r3, #0
 8005f7a:	d011      	beq.n	8005fa0 <HAL_RCCEx_PeriphCLKConfig+0x5fc>
 8005f7c:	687b      	ldr	r3, [r7, #4]
 8005f7e:	685b      	ldr	r3, [r3, #4]
 8005f80:	019a      	lsls	r2, r3, #6
 8005f82:	687b      	ldr	r3, [r7, #4]
 8005f84:	691b      	ldr	r3, [r3, #16]
 8005f86:	041b      	lsls	r3, r3, #16
 8005f88:	431a      	orrs	r2, r3
 8005f8a:	687b      	ldr	r3, [r7, #4]
 8005f8c:	68db      	ldr	r3, [r3, #12]
 8005f8e:	061b      	lsls	r3, r3, #24
 8005f90:	431a      	orrs	r2, r3
 8005f92:	687b      	ldr	r3, [r7, #4]
 8005f94:	689b      	ldr	r3, [r3, #8]
 8005f96:	071b      	lsls	r3, r3, #28
 8005f98:	4919      	ldr	r1, [pc, #100]	; (8006000 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005f9a:	4313      	orrs	r3, r2
 8005f9c:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8005fa0:	4b17      	ldr	r3, [pc, #92]	; (8006000 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005fa2:	681b      	ldr	r3, [r3, #0]
 8005fa4:	4a16      	ldr	r2, [pc, #88]	; (8006000 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005fa6:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8005faa:	6013      	str	r3, [r2, #0]
 8005fac:	f7fd fa9a 	bl	80034e4 <HAL_GetTick>
 8005fb0:	6178      	str	r0, [r7, #20]
 8005fb2:	e008      	b.n	8005fc6 <HAL_RCCEx_PeriphCLKConfig+0x622>
 8005fb4:	f7fd fa96 	bl	80034e4 <HAL_GetTick>
 8005fb8:	4602      	mov	r2, r0
 8005fba:	697b      	ldr	r3, [r7, #20]
 8005fbc:	1ad3      	subs	r3, r2, r3
 8005fbe:	2b64      	cmp	r3, #100	; 0x64
 8005fc0:	d901      	bls.n	8005fc6 <HAL_RCCEx_PeriphCLKConfig+0x622>
 8005fc2:	2303      	movs	r3, #3
 8005fc4:	e0d7      	b.n	8006176 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 8005fc6:	4b0e      	ldr	r3, [pc, #56]	; (8006000 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005fc8:	681b      	ldr	r3, [r3, #0]
 8005fca:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005fce:	2b00      	cmp	r3, #0
 8005fd0:	d0f0      	beq.n	8005fb4 <HAL_RCCEx_PeriphCLKConfig+0x610>
 8005fd2:	69bb      	ldr	r3, [r7, #24]
 8005fd4:	2b01      	cmp	r3, #1
 8005fd6:	f040 80cd 	bne.w	8006174 <HAL_RCCEx_PeriphCLKConfig+0x7d0>
 8005fda:	4b09      	ldr	r3, [pc, #36]	; (8006000 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005fdc:	681b      	ldr	r3, [r3, #0]
 8005fde:	4a08      	ldr	r2, [pc, #32]	; (8006000 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005fe0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005fe4:	6013      	str	r3, [r2, #0]
 8005fe6:	f7fd fa7d 	bl	80034e4 <HAL_GetTick>
 8005fea:	6178      	str	r0, [r7, #20]
 8005fec:	e00a      	b.n	8006004 <HAL_RCCEx_PeriphCLKConfig+0x660>
 8005fee:	f7fd fa79 	bl	80034e4 <HAL_GetTick>
 8005ff2:	4602      	mov	r2, r0
 8005ff4:	697b      	ldr	r3, [r7, #20]
 8005ff6:	1ad3      	subs	r3, r2, r3
 8005ff8:	2b64      	cmp	r3, #100	; 0x64
 8005ffa:	d903      	bls.n	8006004 <HAL_RCCEx_PeriphCLKConfig+0x660>
 8005ffc:	2303      	movs	r3, #3
 8005ffe:	e0ba      	b.n	8006176 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 8006000:	40023800 	.word	0x40023800
 8006004:	4b5e      	ldr	r3, [pc, #376]	; (8006180 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006006:	681b      	ldr	r3, [r3, #0]
 8006008:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800600c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8006010:	d0ed      	beq.n	8005fee <HAL_RCCEx_PeriphCLKConfig+0x64a>
 8006012:	687b      	ldr	r3, [r7, #4]
 8006014:	681b      	ldr	r3, [r3, #0]
 8006016:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800601a:	2b00      	cmp	r3, #0
 800601c:	d003      	beq.n	8006026 <HAL_RCCEx_PeriphCLKConfig+0x682>
 800601e:	687b      	ldr	r3, [r7, #4]
 8006020:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006022:	2b00      	cmp	r3, #0
 8006024:	d009      	beq.n	800603a <HAL_RCCEx_PeriphCLKConfig+0x696>
 8006026:	687b      	ldr	r3, [r7, #4]
 8006028:	681b      	ldr	r3, [r3, #0]
 800602a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800602e:	2b00      	cmp	r3, #0
 8006030:	d02e      	beq.n	8006090 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
 8006032:	687b      	ldr	r3, [r7, #4]
 8006034:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006036:	2b00      	cmp	r3, #0
 8006038:	d12a      	bne.n	8006090 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
 800603a:	4b51      	ldr	r3, [pc, #324]	; (8006180 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 800603c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006040:	0c1b      	lsrs	r3, r3, #16
 8006042:	f003 0303 	and.w	r3, r3, #3
 8006046:	613b      	str	r3, [r7, #16]
 8006048:	4b4d      	ldr	r3, [pc, #308]	; (8006180 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 800604a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800604e:	0f1b      	lsrs	r3, r3, #28
 8006050:	f003 0307 	and.w	r3, r3, #7
 8006054:	60fb      	str	r3, [r7, #12]
 8006056:	687b      	ldr	r3, [r7, #4]
 8006058:	695b      	ldr	r3, [r3, #20]
 800605a:	019a      	lsls	r2, r3, #6
 800605c:	693b      	ldr	r3, [r7, #16]
 800605e:	041b      	lsls	r3, r3, #16
 8006060:	431a      	orrs	r2, r3
 8006062:	687b      	ldr	r3, [r7, #4]
 8006064:	699b      	ldr	r3, [r3, #24]
 8006066:	061b      	lsls	r3, r3, #24
 8006068:	431a      	orrs	r2, r3
 800606a:	68fb      	ldr	r3, [r7, #12]
 800606c:	071b      	lsls	r3, r3, #28
 800606e:	4944      	ldr	r1, [pc, #272]	; (8006180 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006070:	4313      	orrs	r3, r2
 8006072:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8006076:	4b42      	ldr	r3, [pc, #264]	; (8006180 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006078:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800607c:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8006080:	687b      	ldr	r3, [r7, #4]
 8006082:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006084:	3b01      	subs	r3, #1
 8006086:	021b      	lsls	r3, r3, #8
 8006088:	493d      	ldr	r1, [pc, #244]	; (8006180 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 800608a:	4313      	orrs	r3, r2
 800608c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8006090:	687b      	ldr	r3, [r7, #4]
 8006092:	681b      	ldr	r3, [r3, #0]
 8006094:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8006098:	2b00      	cmp	r3, #0
 800609a:	d022      	beq.n	80060e2 <HAL_RCCEx_PeriphCLKConfig+0x73e>
 800609c:	687b      	ldr	r3, [r7, #4]
 800609e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80060a0:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80060a4:	d11d      	bne.n	80060e2 <HAL_RCCEx_PeriphCLKConfig+0x73e>
 80060a6:	4b36      	ldr	r3, [pc, #216]	; (8006180 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80060a8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80060ac:	0e1b      	lsrs	r3, r3, #24
 80060ae:	f003 030f 	and.w	r3, r3, #15
 80060b2:	613b      	str	r3, [r7, #16]
 80060b4:	4b32      	ldr	r3, [pc, #200]	; (8006180 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80060b6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80060ba:	0f1b      	lsrs	r3, r3, #28
 80060bc:	f003 0307 	and.w	r3, r3, #7
 80060c0:	60fb      	str	r3, [r7, #12]
 80060c2:	687b      	ldr	r3, [r7, #4]
 80060c4:	695b      	ldr	r3, [r3, #20]
 80060c6:	019a      	lsls	r2, r3, #6
 80060c8:	687b      	ldr	r3, [r7, #4]
 80060ca:	6a1b      	ldr	r3, [r3, #32]
 80060cc:	041b      	lsls	r3, r3, #16
 80060ce:	431a      	orrs	r2, r3
 80060d0:	693b      	ldr	r3, [r7, #16]
 80060d2:	061b      	lsls	r3, r3, #24
 80060d4:	431a      	orrs	r2, r3
 80060d6:	68fb      	ldr	r3, [r7, #12]
 80060d8:	071b      	lsls	r3, r3, #28
 80060da:	4929      	ldr	r1, [pc, #164]	; (8006180 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80060dc:	4313      	orrs	r3, r2
 80060de:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80060e2:	687b      	ldr	r3, [r7, #4]
 80060e4:	681b      	ldr	r3, [r3, #0]
 80060e6:	f003 0308 	and.w	r3, r3, #8
 80060ea:	2b00      	cmp	r3, #0
 80060ec:	d028      	beq.n	8006140 <HAL_RCCEx_PeriphCLKConfig+0x79c>
 80060ee:	4b24      	ldr	r3, [pc, #144]	; (8006180 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80060f0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80060f4:	0e1b      	lsrs	r3, r3, #24
 80060f6:	f003 030f 	and.w	r3, r3, #15
 80060fa:	613b      	str	r3, [r7, #16]
 80060fc:	4b20      	ldr	r3, [pc, #128]	; (8006180 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80060fe:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006102:	0c1b      	lsrs	r3, r3, #16
 8006104:	f003 0303 	and.w	r3, r3, #3
 8006108:	60fb      	str	r3, [r7, #12]
 800610a:	687b      	ldr	r3, [r7, #4]
 800610c:	695b      	ldr	r3, [r3, #20]
 800610e:	019a      	lsls	r2, r3, #6
 8006110:	68fb      	ldr	r3, [r7, #12]
 8006112:	041b      	lsls	r3, r3, #16
 8006114:	431a      	orrs	r2, r3
 8006116:	693b      	ldr	r3, [r7, #16]
 8006118:	061b      	lsls	r3, r3, #24
 800611a:	431a      	orrs	r2, r3
 800611c:	687b      	ldr	r3, [r7, #4]
 800611e:	69db      	ldr	r3, [r3, #28]
 8006120:	071b      	lsls	r3, r3, #28
 8006122:	4917      	ldr	r1, [pc, #92]	; (8006180 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006124:	4313      	orrs	r3, r2
 8006126:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800612a:	4b15      	ldr	r3, [pc, #84]	; (8006180 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 800612c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8006130:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8006134:	687b      	ldr	r3, [r7, #4]
 8006136:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006138:	4911      	ldr	r1, [pc, #68]	; (8006180 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 800613a:	4313      	orrs	r3, r2
 800613c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8006140:	4b0f      	ldr	r3, [pc, #60]	; (8006180 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006142:	681b      	ldr	r3, [r3, #0]
 8006144:	4a0e      	ldr	r2, [pc, #56]	; (8006180 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006146:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800614a:	6013      	str	r3, [r2, #0]
 800614c:	f7fd f9ca 	bl	80034e4 <HAL_GetTick>
 8006150:	6178      	str	r0, [r7, #20]
 8006152:	e008      	b.n	8006166 <HAL_RCCEx_PeriphCLKConfig+0x7c2>
 8006154:	f7fd f9c6 	bl	80034e4 <HAL_GetTick>
 8006158:	4602      	mov	r2, r0
 800615a:	697b      	ldr	r3, [r7, #20]
 800615c:	1ad3      	subs	r3, r2, r3
 800615e:	2b64      	cmp	r3, #100	; 0x64
 8006160:	d901      	bls.n	8006166 <HAL_RCCEx_PeriphCLKConfig+0x7c2>
 8006162:	2303      	movs	r3, #3
 8006164:	e007      	b.n	8006176 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 8006166:	4b06      	ldr	r3, [pc, #24]	; (8006180 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006168:	681b      	ldr	r3, [r3, #0]
 800616a:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800616e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8006172:	d1ef      	bne.n	8006154 <HAL_RCCEx_PeriphCLKConfig+0x7b0>
 8006174:	2300      	movs	r3, #0
 8006176:	4618      	mov	r0, r3
 8006178:	3720      	adds	r7, #32
 800617a:	46bd      	mov	sp, r7
 800617c:	bd80      	pop	{r7, pc}
 800617e:	bf00      	nop
 8006180:	40023800 	.word	0x40023800

08006184 <HAL_SPI_Init>:
 8006184:	b580      	push	{r7, lr}
 8006186:	b084      	sub	sp, #16
 8006188:	af00      	add	r7, sp, #0
 800618a:	6078      	str	r0, [r7, #4]
 800618c:	687b      	ldr	r3, [r7, #4]
 800618e:	2b00      	cmp	r3, #0
 8006190:	d101      	bne.n	8006196 <HAL_SPI_Init+0x12>
 8006192:	2301      	movs	r3, #1
 8006194:	e09d      	b.n	80062d2 <HAL_SPI_Init+0x14e>
 8006196:	687b      	ldr	r3, [r7, #4]
 8006198:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800619a:	2b00      	cmp	r3, #0
 800619c:	d108      	bne.n	80061b0 <HAL_SPI_Init+0x2c>
 800619e:	687b      	ldr	r3, [r7, #4]
 80061a0:	685b      	ldr	r3, [r3, #4]
 80061a2:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80061a6:	d009      	beq.n	80061bc <HAL_SPI_Init+0x38>
 80061a8:	687b      	ldr	r3, [r7, #4]
 80061aa:	2200      	movs	r2, #0
 80061ac:	61da      	str	r2, [r3, #28]
 80061ae:	e005      	b.n	80061bc <HAL_SPI_Init+0x38>
 80061b0:	687b      	ldr	r3, [r7, #4]
 80061b2:	2200      	movs	r2, #0
 80061b4:	611a      	str	r2, [r3, #16]
 80061b6:	687b      	ldr	r3, [r7, #4]
 80061b8:	2200      	movs	r2, #0
 80061ba:	615a      	str	r2, [r3, #20]
 80061bc:	687b      	ldr	r3, [r7, #4]
 80061be:	2200      	movs	r2, #0
 80061c0:	629a      	str	r2, [r3, #40]	; 0x28
 80061c2:	687b      	ldr	r3, [r7, #4]
 80061c4:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 80061c8:	b2db      	uxtb	r3, r3
 80061ca:	2b00      	cmp	r3, #0
 80061cc:	d106      	bne.n	80061dc <HAL_SPI_Init+0x58>
 80061ce:	687b      	ldr	r3, [r7, #4]
 80061d0:	2200      	movs	r2, #0
 80061d2:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 80061d6:	6878      	ldr	r0, [r7, #4]
 80061d8:	f7fc fd3a 	bl	8002c50 <HAL_SPI_MspInit>
 80061dc:	687b      	ldr	r3, [r7, #4]
 80061de:	2202      	movs	r2, #2
 80061e0:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 80061e4:	687b      	ldr	r3, [r7, #4]
 80061e6:	681b      	ldr	r3, [r3, #0]
 80061e8:	681a      	ldr	r2, [r3, #0]
 80061ea:	687b      	ldr	r3, [r7, #4]
 80061ec:	681b      	ldr	r3, [r3, #0]
 80061ee:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80061f2:	601a      	str	r2, [r3, #0]
 80061f4:	687b      	ldr	r3, [r7, #4]
 80061f6:	68db      	ldr	r3, [r3, #12]
 80061f8:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 80061fc:	d902      	bls.n	8006204 <HAL_SPI_Init+0x80>
 80061fe:	2300      	movs	r3, #0
 8006200:	60fb      	str	r3, [r7, #12]
 8006202:	e002      	b.n	800620a <HAL_SPI_Init+0x86>
 8006204:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8006208:	60fb      	str	r3, [r7, #12]
 800620a:	687b      	ldr	r3, [r7, #4]
 800620c:	68db      	ldr	r3, [r3, #12]
 800620e:	f5b3 6f70 	cmp.w	r3, #3840	; 0xf00
 8006212:	d007      	beq.n	8006224 <HAL_SPI_Init+0xa0>
 8006214:	687b      	ldr	r3, [r7, #4]
 8006216:	68db      	ldr	r3, [r3, #12]
 8006218:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 800621c:	d002      	beq.n	8006224 <HAL_SPI_Init+0xa0>
 800621e:	687b      	ldr	r3, [r7, #4]
 8006220:	2200      	movs	r2, #0
 8006222:	629a      	str	r2, [r3, #40]	; 0x28
 8006224:	687b      	ldr	r3, [r7, #4]
 8006226:	685b      	ldr	r3, [r3, #4]
 8006228:	f403 7282 	and.w	r2, r3, #260	; 0x104
 800622c:	687b      	ldr	r3, [r7, #4]
 800622e:	689b      	ldr	r3, [r3, #8]
 8006230:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8006234:	431a      	orrs	r2, r3
 8006236:	687b      	ldr	r3, [r7, #4]
 8006238:	691b      	ldr	r3, [r3, #16]
 800623a:	f003 0302 	and.w	r3, r3, #2
 800623e:	431a      	orrs	r2, r3
 8006240:	687b      	ldr	r3, [r7, #4]
 8006242:	695b      	ldr	r3, [r3, #20]
 8006244:	f003 0301 	and.w	r3, r3, #1
 8006248:	431a      	orrs	r2, r3
 800624a:	687b      	ldr	r3, [r7, #4]
 800624c:	699b      	ldr	r3, [r3, #24]
 800624e:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8006252:	431a      	orrs	r2, r3
 8006254:	687b      	ldr	r3, [r7, #4]
 8006256:	69db      	ldr	r3, [r3, #28]
 8006258:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800625c:	431a      	orrs	r2, r3
 800625e:	687b      	ldr	r3, [r7, #4]
 8006260:	6a1b      	ldr	r3, [r3, #32]
 8006262:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006266:	ea42 0103 	orr.w	r1, r2, r3
 800626a:	687b      	ldr	r3, [r7, #4]
 800626c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800626e:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8006272:	687b      	ldr	r3, [r7, #4]
 8006274:	681b      	ldr	r3, [r3, #0]
 8006276:	430a      	orrs	r2, r1
 8006278:	601a      	str	r2, [r3, #0]
 800627a:	687b      	ldr	r3, [r7, #4]
 800627c:	699b      	ldr	r3, [r3, #24]
 800627e:	0c1b      	lsrs	r3, r3, #16
 8006280:	f003 0204 	and.w	r2, r3, #4
 8006284:	687b      	ldr	r3, [r7, #4]
 8006286:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006288:	f003 0310 	and.w	r3, r3, #16
 800628c:	431a      	orrs	r2, r3
 800628e:	687b      	ldr	r3, [r7, #4]
 8006290:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006292:	f003 0308 	and.w	r3, r3, #8
 8006296:	431a      	orrs	r2, r3
 8006298:	687b      	ldr	r3, [r7, #4]
 800629a:	68db      	ldr	r3, [r3, #12]
 800629c:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 80062a0:	ea42 0103 	orr.w	r1, r2, r3
 80062a4:	68fb      	ldr	r3, [r7, #12]
 80062a6:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
 80062aa:	687b      	ldr	r3, [r7, #4]
 80062ac:	681b      	ldr	r3, [r3, #0]
 80062ae:	430a      	orrs	r2, r1
 80062b0:	605a      	str	r2, [r3, #4]
 80062b2:	687b      	ldr	r3, [r7, #4]
 80062b4:	681b      	ldr	r3, [r3, #0]
 80062b6:	69da      	ldr	r2, [r3, #28]
 80062b8:	687b      	ldr	r3, [r7, #4]
 80062ba:	681b      	ldr	r3, [r3, #0]
 80062bc:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80062c0:	61da      	str	r2, [r3, #28]
 80062c2:	687b      	ldr	r3, [r7, #4]
 80062c4:	2200      	movs	r2, #0
 80062c6:	661a      	str	r2, [r3, #96]	; 0x60
 80062c8:	687b      	ldr	r3, [r7, #4]
 80062ca:	2201      	movs	r2, #1
 80062cc:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 80062d0:	2300      	movs	r3, #0
 80062d2:	4618      	mov	r0, r3
 80062d4:	3710      	adds	r7, #16
 80062d6:	46bd      	mov	sp, r7
 80062d8:	bd80      	pop	{r7, pc}

080062da <HAL_SPI_Transmit>:
 80062da:	b580      	push	{r7, lr}
 80062dc:	b088      	sub	sp, #32
 80062de:	af00      	add	r7, sp, #0
 80062e0:	60f8      	str	r0, [r7, #12]
 80062e2:	60b9      	str	r1, [r7, #8]
 80062e4:	603b      	str	r3, [r7, #0]
 80062e6:	4613      	mov	r3, r2
 80062e8:	80fb      	strh	r3, [r7, #6]
 80062ea:	2300      	movs	r3, #0
 80062ec:	77fb      	strb	r3, [r7, #31]
 80062ee:	68fb      	ldr	r3, [r7, #12]
 80062f0:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 80062f4:	2b01      	cmp	r3, #1
 80062f6:	d101      	bne.n	80062fc <HAL_SPI_Transmit+0x22>
 80062f8:	2302      	movs	r3, #2
 80062fa:	e158      	b.n	80065ae <HAL_SPI_Transmit+0x2d4>
 80062fc:	68fb      	ldr	r3, [r7, #12]
 80062fe:	2201      	movs	r2, #1
 8006300:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 8006304:	f7fd f8ee 	bl	80034e4 <HAL_GetTick>
 8006308:	61b8      	str	r0, [r7, #24]
 800630a:	88fb      	ldrh	r3, [r7, #6]
 800630c:	82fb      	strh	r3, [r7, #22]
 800630e:	68fb      	ldr	r3, [r7, #12]
 8006310:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 8006314:	b2db      	uxtb	r3, r3
 8006316:	2b01      	cmp	r3, #1
 8006318:	d002      	beq.n	8006320 <HAL_SPI_Transmit+0x46>
 800631a:	2302      	movs	r3, #2
 800631c:	77fb      	strb	r3, [r7, #31]
 800631e:	e13d      	b.n	800659c <HAL_SPI_Transmit+0x2c2>
 8006320:	68bb      	ldr	r3, [r7, #8]
 8006322:	2b00      	cmp	r3, #0
 8006324:	d002      	beq.n	800632c <HAL_SPI_Transmit+0x52>
 8006326:	88fb      	ldrh	r3, [r7, #6]
 8006328:	2b00      	cmp	r3, #0
 800632a:	d102      	bne.n	8006332 <HAL_SPI_Transmit+0x58>
 800632c:	2301      	movs	r3, #1
 800632e:	77fb      	strb	r3, [r7, #31]
 8006330:	e134      	b.n	800659c <HAL_SPI_Transmit+0x2c2>
 8006332:	68fb      	ldr	r3, [r7, #12]
 8006334:	2203      	movs	r2, #3
 8006336:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 800633a:	68fb      	ldr	r3, [r7, #12]
 800633c:	2200      	movs	r2, #0
 800633e:	661a      	str	r2, [r3, #96]	; 0x60
 8006340:	68fb      	ldr	r3, [r7, #12]
 8006342:	68ba      	ldr	r2, [r7, #8]
 8006344:	639a      	str	r2, [r3, #56]	; 0x38
 8006346:	68fb      	ldr	r3, [r7, #12]
 8006348:	88fa      	ldrh	r2, [r7, #6]
 800634a:	879a      	strh	r2, [r3, #60]	; 0x3c
 800634c:	68fb      	ldr	r3, [r7, #12]
 800634e:	88fa      	ldrh	r2, [r7, #6]
 8006350:	87da      	strh	r2, [r3, #62]	; 0x3e
 8006352:	68fb      	ldr	r3, [r7, #12]
 8006354:	2200      	movs	r2, #0
 8006356:	641a      	str	r2, [r3, #64]	; 0x40
 8006358:	68fb      	ldr	r3, [r7, #12]
 800635a:	2200      	movs	r2, #0
 800635c:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8006360:	68fb      	ldr	r3, [r7, #12]
 8006362:	2200      	movs	r2, #0
 8006364:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8006368:	68fb      	ldr	r3, [r7, #12]
 800636a:	2200      	movs	r2, #0
 800636c:	651a      	str	r2, [r3, #80]	; 0x50
 800636e:	68fb      	ldr	r3, [r7, #12]
 8006370:	2200      	movs	r2, #0
 8006372:	64da      	str	r2, [r3, #76]	; 0x4c
 8006374:	68fb      	ldr	r3, [r7, #12]
 8006376:	689b      	ldr	r3, [r3, #8]
 8006378:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800637c:	d10f      	bne.n	800639e <HAL_SPI_Transmit+0xc4>
 800637e:	68fb      	ldr	r3, [r7, #12]
 8006380:	681b      	ldr	r3, [r3, #0]
 8006382:	681a      	ldr	r2, [r3, #0]
 8006384:	68fb      	ldr	r3, [r7, #12]
 8006386:	681b      	ldr	r3, [r3, #0]
 8006388:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800638c:	601a      	str	r2, [r3, #0]
 800638e:	68fb      	ldr	r3, [r7, #12]
 8006390:	681b      	ldr	r3, [r3, #0]
 8006392:	681a      	ldr	r2, [r3, #0]
 8006394:	68fb      	ldr	r3, [r7, #12]
 8006396:	681b      	ldr	r3, [r3, #0]
 8006398:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800639c:	601a      	str	r2, [r3, #0]
 800639e:	68fb      	ldr	r3, [r7, #12]
 80063a0:	681b      	ldr	r3, [r3, #0]
 80063a2:	681b      	ldr	r3, [r3, #0]
 80063a4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80063a8:	2b40      	cmp	r3, #64	; 0x40
 80063aa:	d007      	beq.n	80063bc <HAL_SPI_Transmit+0xe2>
 80063ac:	68fb      	ldr	r3, [r7, #12]
 80063ae:	681b      	ldr	r3, [r3, #0]
 80063b0:	681a      	ldr	r2, [r3, #0]
 80063b2:	68fb      	ldr	r3, [r7, #12]
 80063b4:	681b      	ldr	r3, [r3, #0]
 80063b6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80063ba:	601a      	str	r2, [r3, #0]
 80063bc:	68fb      	ldr	r3, [r7, #12]
 80063be:	68db      	ldr	r3, [r3, #12]
 80063c0:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 80063c4:	d94b      	bls.n	800645e <HAL_SPI_Transmit+0x184>
 80063c6:	68fb      	ldr	r3, [r7, #12]
 80063c8:	685b      	ldr	r3, [r3, #4]
 80063ca:	2b00      	cmp	r3, #0
 80063cc:	d002      	beq.n	80063d4 <HAL_SPI_Transmit+0xfa>
 80063ce:	8afb      	ldrh	r3, [r7, #22]
 80063d0:	2b01      	cmp	r3, #1
 80063d2:	d13e      	bne.n	8006452 <HAL_SPI_Transmit+0x178>
 80063d4:	68fb      	ldr	r3, [r7, #12]
 80063d6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80063d8:	881a      	ldrh	r2, [r3, #0]
 80063da:	68fb      	ldr	r3, [r7, #12]
 80063dc:	681b      	ldr	r3, [r3, #0]
 80063de:	60da      	str	r2, [r3, #12]
 80063e0:	68fb      	ldr	r3, [r7, #12]
 80063e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80063e4:	1c9a      	adds	r2, r3, #2
 80063e6:	68fb      	ldr	r3, [r7, #12]
 80063e8:	639a      	str	r2, [r3, #56]	; 0x38
 80063ea:	68fb      	ldr	r3, [r7, #12]
 80063ec:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80063ee:	b29b      	uxth	r3, r3
 80063f0:	3b01      	subs	r3, #1
 80063f2:	b29a      	uxth	r2, r3
 80063f4:	68fb      	ldr	r3, [r7, #12]
 80063f6:	87da      	strh	r2, [r3, #62]	; 0x3e
 80063f8:	e02b      	b.n	8006452 <HAL_SPI_Transmit+0x178>
 80063fa:	68fb      	ldr	r3, [r7, #12]
 80063fc:	681b      	ldr	r3, [r3, #0]
 80063fe:	689b      	ldr	r3, [r3, #8]
 8006400:	f003 0302 	and.w	r3, r3, #2
 8006404:	2b02      	cmp	r3, #2
 8006406:	d112      	bne.n	800642e <HAL_SPI_Transmit+0x154>
 8006408:	68fb      	ldr	r3, [r7, #12]
 800640a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800640c:	881a      	ldrh	r2, [r3, #0]
 800640e:	68fb      	ldr	r3, [r7, #12]
 8006410:	681b      	ldr	r3, [r3, #0]
 8006412:	60da      	str	r2, [r3, #12]
 8006414:	68fb      	ldr	r3, [r7, #12]
 8006416:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006418:	1c9a      	adds	r2, r3, #2
 800641a:	68fb      	ldr	r3, [r7, #12]
 800641c:	639a      	str	r2, [r3, #56]	; 0x38
 800641e:	68fb      	ldr	r3, [r7, #12]
 8006420:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006422:	b29b      	uxth	r3, r3
 8006424:	3b01      	subs	r3, #1
 8006426:	b29a      	uxth	r2, r3
 8006428:	68fb      	ldr	r3, [r7, #12]
 800642a:	87da      	strh	r2, [r3, #62]	; 0x3e
 800642c:	e011      	b.n	8006452 <HAL_SPI_Transmit+0x178>
 800642e:	f7fd f859 	bl	80034e4 <HAL_GetTick>
 8006432:	4602      	mov	r2, r0
 8006434:	69bb      	ldr	r3, [r7, #24]
 8006436:	1ad3      	subs	r3, r2, r3
 8006438:	683a      	ldr	r2, [r7, #0]
 800643a:	429a      	cmp	r2, r3
 800643c:	d803      	bhi.n	8006446 <HAL_SPI_Transmit+0x16c>
 800643e:	683b      	ldr	r3, [r7, #0]
 8006440:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006444:	d102      	bne.n	800644c <HAL_SPI_Transmit+0x172>
 8006446:	683b      	ldr	r3, [r7, #0]
 8006448:	2b00      	cmp	r3, #0
 800644a:	d102      	bne.n	8006452 <HAL_SPI_Transmit+0x178>
 800644c:	2303      	movs	r3, #3
 800644e:	77fb      	strb	r3, [r7, #31]
 8006450:	e0a4      	b.n	800659c <HAL_SPI_Transmit+0x2c2>
 8006452:	68fb      	ldr	r3, [r7, #12]
 8006454:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006456:	b29b      	uxth	r3, r3
 8006458:	2b00      	cmp	r3, #0
 800645a:	d1ce      	bne.n	80063fa <HAL_SPI_Transmit+0x120>
 800645c:	e07c      	b.n	8006558 <HAL_SPI_Transmit+0x27e>
 800645e:	68fb      	ldr	r3, [r7, #12]
 8006460:	685b      	ldr	r3, [r3, #4]
 8006462:	2b00      	cmp	r3, #0
 8006464:	d002      	beq.n	800646c <HAL_SPI_Transmit+0x192>
 8006466:	8afb      	ldrh	r3, [r7, #22]
 8006468:	2b01      	cmp	r3, #1
 800646a:	d170      	bne.n	800654e <HAL_SPI_Transmit+0x274>
 800646c:	68fb      	ldr	r3, [r7, #12]
 800646e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006470:	b29b      	uxth	r3, r3
 8006472:	2b01      	cmp	r3, #1
 8006474:	d912      	bls.n	800649c <HAL_SPI_Transmit+0x1c2>
 8006476:	68fb      	ldr	r3, [r7, #12]
 8006478:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800647a:	881a      	ldrh	r2, [r3, #0]
 800647c:	68fb      	ldr	r3, [r7, #12]
 800647e:	681b      	ldr	r3, [r3, #0]
 8006480:	60da      	str	r2, [r3, #12]
 8006482:	68fb      	ldr	r3, [r7, #12]
 8006484:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006486:	1c9a      	adds	r2, r3, #2
 8006488:	68fb      	ldr	r3, [r7, #12]
 800648a:	639a      	str	r2, [r3, #56]	; 0x38
 800648c:	68fb      	ldr	r3, [r7, #12]
 800648e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006490:	b29b      	uxth	r3, r3
 8006492:	3b02      	subs	r3, #2
 8006494:	b29a      	uxth	r2, r3
 8006496:	68fb      	ldr	r3, [r7, #12]
 8006498:	87da      	strh	r2, [r3, #62]	; 0x3e
 800649a:	e058      	b.n	800654e <HAL_SPI_Transmit+0x274>
 800649c:	68fb      	ldr	r3, [r7, #12]
 800649e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80064a0:	68fb      	ldr	r3, [r7, #12]
 80064a2:	681b      	ldr	r3, [r3, #0]
 80064a4:	330c      	adds	r3, #12
 80064a6:	7812      	ldrb	r2, [r2, #0]
 80064a8:	701a      	strb	r2, [r3, #0]
 80064aa:	68fb      	ldr	r3, [r7, #12]
 80064ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80064ae:	1c5a      	adds	r2, r3, #1
 80064b0:	68fb      	ldr	r3, [r7, #12]
 80064b2:	639a      	str	r2, [r3, #56]	; 0x38
 80064b4:	68fb      	ldr	r3, [r7, #12]
 80064b6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80064b8:	b29b      	uxth	r3, r3
 80064ba:	3b01      	subs	r3, #1
 80064bc:	b29a      	uxth	r2, r3
 80064be:	68fb      	ldr	r3, [r7, #12]
 80064c0:	87da      	strh	r2, [r3, #62]	; 0x3e
 80064c2:	e044      	b.n	800654e <HAL_SPI_Transmit+0x274>
 80064c4:	68fb      	ldr	r3, [r7, #12]
 80064c6:	681b      	ldr	r3, [r3, #0]
 80064c8:	689b      	ldr	r3, [r3, #8]
 80064ca:	f003 0302 	and.w	r3, r3, #2
 80064ce:	2b02      	cmp	r3, #2
 80064d0:	d12b      	bne.n	800652a <HAL_SPI_Transmit+0x250>
 80064d2:	68fb      	ldr	r3, [r7, #12]
 80064d4:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80064d6:	b29b      	uxth	r3, r3
 80064d8:	2b01      	cmp	r3, #1
 80064da:	d912      	bls.n	8006502 <HAL_SPI_Transmit+0x228>
 80064dc:	68fb      	ldr	r3, [r7, #12]
 80064de:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80064e0:	881a      	ldrh	r2, [r3, #0]
 80064e2:	68fb      	ldr	r3, [r7, #12]
 80064e4:	681b      	ldr	r3, [r3, #0]
 80064e6:	60da      	str	r2, [r3, #12]
 80064e8:	68fb      	ldr	r3, [r7, #12]
 80064ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80064ec:	1c9a      	adds	r2, r3, #2
 80064ee:	68fb      	ldr	r3, [r7, #12]
 80064f0:	639a      	str	r2, [r3, #56]	; 0x38
 80064f2:	68fb      	ldr	r3, [r7, #12]
 80064f4:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80064f6:	b29b      	uxth	r3, r3
 80064f8:	3b02      	subs	r3, #2
 80064fa:	b29a      	uxth	r2, r3
 80064fc:	68fb      	ldr	r3, [r7, #12]
 80064fe:	87da      	strh	r2, [r3, #62]	; 0x3e
 8006500:	e025      	b.n	800654e <HAL_SPI_Transmit+0x274>
 8006502:	68fb      	ldr	r3, [r7, #12]
 8006504:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8006506:	68fb      	ldr	r3, [r7, #12]
 8006508:	681b      	ldr	r3, [r3, #0]
 800650a:	330c      	adds	r3, #12
 800650c:	7812      	ldrb	r2, [r2, #0]
 800650e:	701a      	strb	r2, [r3, #0]
 8006510:	68fb      	ldr	r3, [r7, #12]
 8006512:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006514:	1c5a      	adds	r2, r3, #1
 8006516:	68fb      	ldr	r3, [r7, #12]
 8006518:	639a      	str	r2, [r3, #56]	; 0x38
 800651a:	68fb      	ldr	r3, [r7, #12]
 800651c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800651e:	b29b      	uxth	r3, r3
 8006520:	3b01      	subs	r3, #1
 8006522:	b29a      	uxth	r2, r3
 8006524:	68fb      	ldr	r3, [r7, #12]
 8006526:	87da      	strh	r2, [r3, #62]	; 0x3e
 8006528:	e011      	b.n	800654e <HAL_SPI_Transmit+0x274>
 800652a:	f7fc ffdb 	bl	80034e4 <HAL_GetTick>
 800652e:	4602      	mov	r2, r0
 8006530:	69bb      	ldr	r3, [r7, #24]
 8006532:	1ad3      	subs	r3, r2, r3
 8006534:	683a      	ldr	r2, [r7, #0]
 8006536:	429a      	cmp	r2, r3
 8006538:	d803      	bhi.n	8006542 <HAL_SPI_Transmit+0x268>
 800653a:	683b      	ldr	r3, [r7, #0]
 800653c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006540:	d102      	bne.n	8006548 <HAL_SPI_Transmit+0x26e>
 8006542:	683b      	ldr	r3, [r7, #0]
 8006544:	2b00      	cmp	r3, #0
 8006546:	d102      	bne.n	800654e <HAL_SPI_Transmit+0x274>
 8006548:	2303      	movs	r3, #3
 800654a:	77fb      	strb	r3, [r7, #31]
 800654c:	e026      	b.n	800659c <HAL_SPI_Transmit+0x2c2>
 800654e:	68fb      	ldr	r3, [r7, #12]
 8006550:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006552:	b29b      	uxth	r3, r3
 8006554:	2b00      	cmp	r3, #0
 8006556:	d1b5      	bne.n	80064c4 <HAL_SPI_Transmit+0x1ea>
 8006558:	69ba      	ldr	r2, [r7, #24]
 800655a:	6839      	ldr	r1, [r7, #0]
 800655c:	68f8      	ldr	r0, [r7, #12]
 800655e:	f000 fe1b 	bl	8007198 <SPI_EndRxTxTransaction>
 8006562:	4603      	mov	r3, r0
 8006564:	2b00      	cmp	r3, #0
 8006566:	d002      	beq.n	800656e <HAL_SPI_Transmit+0x294>
 8006568:	68fb      	ldr	r3, [r7, #12]
 800656a:	2220      	movs	r2, #32
 800656c:	661a      	str	r2, [r3, #96]	; 0x60
 800656e:	68fb      	ldr	r3, [r7, #12]
 8006570:	689b      	ldr	r3, [r3, #8]
 8006572:	2b00      	cmp	r3, #0
 8006574:	d10a      	bne.n	800658c <HAL_SPI_Transmit+0x2b2>
 8006576:	2300      	movs	r3, #0
 8006578:	613b      	str	r3, [r7, #16]
 800657a:	68fb      	ldr	r3, [r7, #12]
 800657c:	681b      	ldr	r3, [r3, #0]
 800657e:	68db      	ldr	r3, [r3, #12]
 8006580:	613b      	str	r3, [r7, #16]
 8006582:	68fb      	ldr	r3, [r7, #12]
 8006584:	681b      	ldr	r3, [r3, #0]
 8006586:	689b      	ldr	r3, [r3, #8]
 8006588:	613b      	str	r3, [r7, #16]
 800658a:	693b      	ldr	r3, [r7, #16]
 800658c:	68fb      	ldr	r3, [r7, #12]
 800658e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006590:	2b00      	cmp	r3, #0
 8006592:	d002      	beq.n	800659a <HAL_SPI_Transmit+0x2c0>
 8006594:	2301      	movs	r3, #1
 8006596:	77fb      	strb	r3, [r7, #31]
 8006598:	e000      	b.n	800659c <HAL_SPI_Transmit+0x2c2>
 800659a:	bf00      	nop
 800659c:	68fb      	ldr	r3, [r7, #12]
 800659e:	2201      	movs	r2, #1
 80065a0:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 80065a4:	68fb      	ldr	r3, [r7, #12]
 80065a6:	2200      	movs	r2, #0
 80065a8:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 80065ac:	7ffb      	ldrb	r3, [r7, #31]
 80065ae:	4618      	mov	r0, r3
 80065b0:	3720      	adds	r7, #32
 80065b2:	46bd      	mov	sp, r7
 80065b4:	bd80      	pop	{r7, pc}

080065b6 <HAL_SPI_Receive>:
 80065b6:	b580      	push	{r7, lr}
 80065b8:	b088      	sub	sp, #32
 80065ba:	af02      	add	r7, sp, #8
 80065bc:	60f8      	str	r0, [r7, #12]
 80065be:	60b9      	str	r1, [r7, #8]
 80065c0:	603b      	str	r3, [r7, #0]
 80065c2:	4613      	mov	r3, r2
 80065c4:	80fb      	strh	r3, [r7, #6]
 80065c6:	2300      	movs	r3, #0
 80065c8:	75fb      	strb	r3, [r7, #23]
 80065ca:	68fb      	ldr	r3, [r7, #12]
 80065cc:	685b      	ldr	r3, [r3, #4]
 80065ce:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80065d2:	d112      	bne.n	80065fa <HAL_SPI_Receive+0x44>
 80065d4:	68fb      	ldr	r3, [r7, #12]
 80065d6:	689b      	ldr	r3, [r3, #8]
 80065d8:	2b00      	cmp	r3, #0
 80065da:	d10e      	bne.n	80065fa <HAL_SPI_Receive+0x44>
 80065dc:	68fb      	ldr	r3, [r7, #12]
 80065de:	2204      	movs	r2, #4
 80065e0:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 80065e4:	88fa      	ldrh	r2, [r7, #6]
 80065e6:	683b      	ldr	r3, [r7, #0]
 80065e8:	9300      	str	r3, [sp, #0]
 80065ea:	4613      	mov	r3, r2
 80065ec:	68ba      	ldr	r2, [r7, #8]
 80065ee:	68b9      	ldr	r1, [r7, #8]
 80065f0:	68f8      	ldr	r0, [r7, #12]
 80065f2:	f000 f910 	bl	8006816 <HAL_SPI_TransmitReceive>
 80065f6:	4603      	mov	r3, r0
 80065f8:	e109      	b.n	800680e <HAL_SPI_Receive+0x258>
 80065fa:	68fb      	ldr	r3, [r7, #12]
 80065fc:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 8006600:	2b01      	cmp	r3, #1
 8006602:	d101      	bne.n	8006608 <HAL_SPI_Receive+0x52>
 8006604:	2302      	movs	r3, #2
 8006606:	e102      	b.n	800680e <HAL_SPI_Receive+0x258>
 8006608:	68fb      	ldr	r3, [r7, #12]
 800660a:	2201      	movs	r2, #1
 800660c:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 8006610:	f7fc ff68 	bl	80034e4 <HAL_GetTick>
 8006614:	6138      	str	r0, [r7, #16]
 8006616:	68fb      	ldr	r3, [r7, #12]
 8006618:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 800661c:	b2db      	uxtb	r3, r3
 800661e:	2b01      	cmp	r3, #1
 8006620:	d002      	beq.n	8006628 <HAL_SPI_Receive+0x72>
 8006622:	2302      	movs	r3, #2
 8006624:	75fb      	strb	r3, [r7, #23]
 8006626:	e0e9      	b.n	80067fc <HAL_SPI_Receive+0x246>
 8006628:	68bb      	ldr	r3, [r7, #8]
 800662a:	2b00      	cmp	r3, #0
 800662c:	d002      	beq.n	8006634 <HAL_SPI_Receive+0x7e>
 800662e:	88fb      	ldrh	r3, [r7, #6]
 8006630:	2b00      	cmp	r3, #0
 8006632:	d102      	bne.n	800663a <HAL_SPI_Receive+0x84>
 8006634:	2301      	movs	r3, #1
 8006636:	75fb      	strb	r3, [r7, #23]
 8006638:	e0e0      	b.n	80067fc <HAL_SPI_Receive+0x246>
 800663a:	68fb      	ldr	r3, [r7, #12]
 800663c:	2204      	movs	r2, #4
 800663e:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 8006642:	68fb      	ldr	r3, [r7, #12]
 8006644:	2200      	movs	r2, #0
 8006646:	661a      	str	r2, [r3, #96]	; 0x60
 8006648:	68fb      	ldr	r3, [r7, #12]
 800664a:	68ba      	ldr	r2, [r7, #8]
 800664c:	641a      	str	r2, [r3, #64]	; 0x40
 800664e:	68fb      	ldr	r3, [r7, #12]
 8006650:	88fa      	ldrh	r2, [r7, #6]
 8006652:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8006656:	68fb      	ldr	r3, [r7, #12]
 8006658:	88fa      	ldrh	r2, [r7, #6]
 800665a:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 800665e:	68fb      	ldr	r3, [r7, #12]
 8006660:	2200      	movs	r2, #0
 8006662:	639a      	str	r2, [r3, #56]	; 0x38
 8006664:	68fb      	ldr	r3, [r7, #12]
 8006666:	2200      	movs	r2, #0
 8006668:	879a      	strh	r2, [r3, #60]	; 0x3c
 800666a:	68fb      	ldr	r3, [r7, #12]
 800666c:	2200      	movs	r2, #0
 800666e:	87da      	strh	r2, [r3, #62]	; 0x3e
 8006670:	68fb      	ldr	r3, [r7, #12]
 8006672:	2200      	movs	r2, #0
 8006674:	64da      	str	r2, [r3, #76]	; 0x4c
 8006676:	68fb      	ldr	r3, [r7, #12]
 8006678:	2200      	movs	r2, #0
 800667a:	651a      	str	r2, [r3, #80]	; 0x50
 800667c:	68fb      	ldr	r3, [r7, #12]
 800667e:	68db      	ldr	r3, [r3, #12]
 8006680:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8006684:	d908      	bls.n	8006698 <HAL_SPI_Receive+0xe2>
 8006686:	68fb      	ldr	r3, [r7, #12]
 8006688:	681b      	ldr	r3, [r3, #0]
 800668a:	685a      	ldr	r2, [r3, #4]
 800668c:	68fb      	ldr	r3, [r7, #12]
 800668e:	681b      	ldr	r3, [r3, #0]
 8006690:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8006694:	605a      	str	r2, [r3, #4]
 8006696:	e007      	b.n	80066a8 <HAL_SPI_Receive+0xf2>
 8006698:	68fb      	ldr	r3, [r7, #12]
 800669a:	681b      	ldr	r3, [r3, #0]
 800669c:	685a      	ldr	r2, [r3, #4]
 800669e:	68fb      	ldr	r3, [r7, #12]
 80066a0:	681b      	ldr	r3, [r3, #0]
 80066a2:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80066a6:	605a      	str	r2, [r3, #4]
 80066a8:	68fb      	ldr	r3, [r7, #12]
 80066aa:	689b      	ldr	r3, [r3, #8]
 80066ac:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80066b0:	d10f      	bne.n	80066d2 <HAL_SPI_Receive+0x11c>
 80066b2:	68fb      	ldr	r3, [r7, #12]
 80066b4:	681b      	ldr	r3, [r3, #0]
 80066b6:	681a      	ldr	r2, [r3, #0]
 80066b8:	68fb      	ldr	r3, [r7, #12]
 80066ba:	681b      	ldr	r3, [r3, #0]
 80066bc:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80066c0:	601a      	str	r2, [r3, #0]
 80066c2:	68fb      	ldr	r3, [r7, #12]
 80066c4:	681b      	ldr	r3, [r3, #0]
 80066c6:	681a      	ldr	r2, [r3, #0]
 80066c8:	68fb      	ldr	r3, [r7, #12]
 80066ca:	681b      	ldr	r3, [r3, #0]
 80066cc:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 80066d0:	601a      	str	r2, [r3, #0]
 80066d2:	68fb      	ldr	r3, [r7, #12]
 80066d4:	681b      	ldr	r3, [r3, #0]
 80066d6:	681b      	ldr	r3, [r3, #0]
 80066d8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80066dc:	2b40      	cmp	r3, #64	; 0x40
 80066de:	d007      	beq.n	80066f0 <HAL_SPI_Receive+0x13a>
 80066e0:	68fb      	ldr	r3, [r7, #12]
 80066e2:	681b      	ldr	r3, [r3, #0]
 80066e4:	681a      	ldr	r2, [r3, #0]
 80066e6:	68fb      	ldr	r3, [r7, #12]
 80066e8:	681b      	ldr	r3, [r3, #0]
 80066ea:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80066ee:	601a      	str	r2, [r3, #0]
 80066f0:	68fb      	ldr	r3, [r7, #12]
 80066f2:	68db      	ldr	r3, [r3, #12]
 80066f4:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 80066f8:	d867      	bhi.n	80067ca <HAL_SPI_Receive+0x214>
 80066fa:	e030      	b.n	800675e <HAL_SPI_Receive+0x1a8>
 80066fc:	68fb      	ldr	r3, [r7, #12]
 80066fe:	681b      	ldr	r3, [r3, #0]
 8006700:	689b      	ldr	r3, [r3, #8]
 8006702:	f003 0301 	and.w	r3, r3, #1
 8006706:	2b01      	cmp	r3, #1
 8006708:	d117      	bne.n	800673a <HAL_SPI_Receive+0x184>
 800670a:	68fb      	ldr	r3, [r7, #12]
 800670c:	681b      	ldr	r3, [r3, #0]
 800670e:	f103 020c 	add.w	r2, r3, #12
 8006712:	68fb      	ldr	r3, [r7, #12]
 8006714:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006716:	7812      	ldrb	r2, [r2, #0]
 8006718:	b2d2      	uxtb	r2, r2
 800671a:	701a      	strb	r2, [r3, #0]
 800671c:	68fb      	ldr	r3, [r7, #12]
 800671e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006720:	1c5a      	adds	r2, r3, #1
 8006722:	68fb      	ldr	r3, [r7, #12]
 8006724:	641a      	str	r2, [r3, #64]	; 0x40
 8006726:	68fb      	ldr	r3, [r7, #12]
 8006728:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 800672c:	b29b      	uxth	r3, r3
 800672e:	3b01      	subs	r3, #1
 8006730:	b29a      	uxth	r2, r3
 8006732:	68fb      	ldr	r3, [r7, #12]
 8006734:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8006738:	e011      	b.n	800675e <HAL_SPI_Receive+0x1a8>
 800673a:	f7fc fed3 	bl	80034e4 <HAL_GetTick>
 800673e:	4602      	mov	r2, r0
 8006740:	693b      	ldr	r3, [r7, #16]
 8006742:	1ad3      	subs	r3, r2, r3
 8006744:	683a      	ldr	r2, [r7, #0]
 8006746:	429a      	cmp	r2, r3
 8006748:	d803      	bhi.n	8006752 <HAL_SPI_Receive+0x19c>
 800674a:	683b      	ldr	r3, [r7, #0]
 800674c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006750:	d102      	bne.n	8006758 <HAL_SPI_Receive+0x1a2>
 8006752:	683b      	ldr	r3, [r7, #0]
 8006754:	2b00      	cmp	r3, #0
 8006756:	d102      	bne.n	800675e <HAL_SPI_Receive+0x1a8>
 8006758:	2303      	movs	r3, #3
 800675a:	75fb      	strb	r3, [r7, #23]
 800675c:	e04e      	b.n	80067fc <HAL_SPI_Receive+0x246>
 800675e:	68fb      	ldr	r3, [r7, #12]
 8006760:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8006764:	b29b      	uxth	r3, r3
 8006766:	2b00      	cmp	r3, #0
 8006768:	d1c8      	bne.n	80066fc <HAL_SPI_Receive+0x146>
 800676a:	e034      	b.n	80067d6 <HAL_SPI_Receive+0x220>
 800676c:	68fb      	ldr	r3, [r7, #12]
 800676e:	681b      	ldr	r3, [r3, #0]
 8006770:	689b      	ldr	r3, [r3, #8]
 8006772:	f003 0301 	and.w	r3, r3, #1
 8006776:	2b01      	cmp	r3, #1
 8006778:	d115      	bne.n	80067a6 <HAL_SPI_Receive+0x1f0>
 800677a:	68fb      	ldr	r3, [r7, #12]
 800677c:	681b      	ldr	r3, [r3, #0]
 800677e:	68da      	ldr	r2, [r3, #12]
 8006780:	68fb      	ldr	r3, [r7, #12]
 8006782:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006784:	b292      	uxth	r2, r2
 8006786:	801a      	strh	r2, [r3, #0]
 8006788:	68fb      	ldr	r3, [r7, #12]
 800678a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800678c:	1c9a      	adds	r2, r3, #2
 800678e:	68fb      	ldr	r3, [r7, #12]
 8006790:	641a      	str	r2, [r3, #64]	; 0x40
 8006792:	68fb      	ldr	r3, [r7, #12]
 8006794:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8006798:	b29b      	uxth	r3, r3
 800679a:	3b01      	subs	r3, #1
 800679c:	b29a      	uxth	r2, r3
 800679e:	68fb      	ldr	r3, [r7, #12]
 80067a0:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 80067a4:	e011      	b.n	80067ca <HAL_SPI_Receive+0x214>
 80067a6:	f7fc fe9d 	bl	80034e4 <HAL_GetTick>
 80067aa:	4602      	mov	r2, r0
 80067ac:	693b      	ldr	r3, [r7, #16]
 80067ae:	1ad3      	subs	r3, r2, r3
 80067b0:	683a      	ldr	r2, [r7, #0]
 80067b2:	429a      	cmp	r2, r3
 80067b4:	d803      	bhi.n	80067be <HAL_SPI_Receive+0x208>
 80067b6:	683b      	ldr	r3, [r7, #0]
 80067b8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80067bc:	d102      	bne.n	80067c4 <HAL_SPI_Receive+0x20e>
 80067be:	683b      	ldr	r3, [r7, #0]
 80067c0:	2b00      	cmp	r3, #0
 80067c2:	d102      	bne.n	80067ca <HAL_SPI_Receive+0x214>
 80067c4:	2303      	movs	r3, #3
 80067c6:	75fb      	strb	r3, [r7, #23]
 80067c8:	e018      	b.n	80067fc <HAL_SPI_Receive+0x246>
 80067ca:	68fb      	ldr	r3, [r7, #12]
 80067cc:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 80067d0:	b29b      	uxth	r3, r3
 80067d2:	2b00      	cmp	r3, #0
 80067d4:	d1ca      	bne.n	800676c <HAL_SPI_Receive+0x1b6>
 80067d6:	693a      	ldr	r2, [r7, #16]
 80067d8:	6839      	ldr	r1, [r7, #0]
 80067da:	68f8      	ldr	r0, [r7, #12]
 80067dc:	f000 fc60 	bl	80070a0 <SPI_EndRxTransaction>
 80067e0:	4603      	mov	r3, r0
 80067e2:	2b00      	cmp	r3, #0
 80067e4:	d002      	beq.n	80067ec <HAL_SPI_Receive+0x236>
 80067e6:	68fb      	ldr	r3, [r7, #12]
 80067e8:	2220      	movs	r2, #32
 80067ea:	661a      	str	r2, [r3, #96]	; 0x60
 80067ec:	68fb      	ldr	r3, [r7, #12]
 80067ee:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80067f0:	2b00      	cmp	r3, #0
 80067f2:	d002      	beq.n	80067fa <HAL_SPI_Receive+0x244>
 80067f4:	2301      	movs	r3, #1
 80067f6:	75fb      	strb	r3, [r7, #23]
 80067f8:	e000      	b.n	80067fc <HAL_SPI_Receive+0x246>
 80067fa:	bf00      	nop
 80067fc:	68fb      	ldr	r3, [r7, #12]
 80067fe:	2201      	movs	r2, #1
 8006800:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 8006804:	68fb      	ldr	r3, [r7, #12]
 8006806:	2200      	movs	r2, #0
 8006808:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 800680c:	7dfb      	ldrb	r3, [r7, #23]
 800680e:	4618      	mov	r0, r3
 8006810:	3718      	adds	r7, #24
 8006812:	46bd      	mov	sp, r7
 8006814:	bd80      	pop	{r7, pc}

08006816 <HAL_SPI_TransmitReceive>:
 8006816:	b580      	push	{r7, lr}
 8006818:	b08a      	sub	sp, #40	; 0x28
 800681a:	af00      	add	r7, sp, #0
 800681c:	60f8      	str	r0, [r7, #12]
 800681e:	60b9      	str	r1, [r7, #8]
 8006820:	607a      	str	r2, [r7, #4]
 8006822:	807b      	strh	r3, [r7, #2]
 8006824:	2301      	movs	r3, #1
 8006826:	627b      	str	r3, [r7, #36]	; 0x24
 8006828:	2300      	movs	r3, #0
 800682a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800682e:	68fb      	ldr	r3, [r7, #12]
 8006830:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 8006834:	2b01      	cmp	r3, #1
 8006836:	d101      	bne.n	800683c <HAL_SPI_TransmitReceive+0x26>
 8006838:	2302      	movs	r3, #2
 800683a:	e1fb      	b.n	8006c34 <HAL_SPI_TransmitReceive+0x41e>
 800683c:	68fb      	ldr	r3, [r7, #12]
 800683e:	2201      	movs	r2, #1
 8006840:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 8006844:	f7fc fe4e 	bl	80034e4 <HAL_GetTick>
 8006848:	61f8      	str	r0, [r7, #28]
 800684a:	68fb      	ldr	r3, [r7, #12]
 800684c:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 8006850:	76fb      	strb	r3, [r7, #27]
 8006852:	68fb      	ldr	r3, [r7, #12]
 8006854:	685b      	ldr	r3, [r3, #4]
 8006856:	617b      	str	r3, [r7, #20]
 8006858:	887b      	ldrh	r3, [r7, #2]
 800685a:	827b      	strh	r3, [r7, #18]
 800685c:	887b      	ldrh	r3, [r7, #2]
 800685e:	823b      	strh	r3, [r7, #16]
 8006860:	7efb      	ldrb	r3, [r7, #27]
 8006862:	2b01      	cmp	r3, #1
 8006864:	d00e      	beq.n	8006884 <HAL_SPI_TransmitReceive+0x6e>
 8006866:	697b      	ldr	r3, [r7, #20]
 8006868:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800686c:	d106      	bne.n	800687c <HAL_SPI_TransmitReceive+0x66>
 800686e:	68fb      	ldr	r3, [r7, #12]
 8006870:	689b      	ldr	r3, [r3, #8]
 8006872:	2b00      	cmp	r3, #0
 8006874:	d102      	bne.n	800687c <HAL_SPI_TransmitReceive+0x66>
 8006876:	7efb      	ldrb	r3, [r7, #27]
 8006878:	2b04      	cmp	r3, #4
 800687a:	d003      	beq.n	8006884 <HAL_SPI_TransmitReceive+0x6e>
 800687c:	2302      	movs	r3, #2
 800687e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006882:	e1cd      	b.n	8006c20 <HAL_SPI_TransmitReceive+0x40a>
 8006884:	68bb      	ldr	r3, [r7, #8]
 8006886:	2b00      	cmp	r3, #0
 8006888:	d005      	beq.n	8006896 <HAL_SPI_TransmitReceive+0x80>
 800688a:	687b      	ldr	r3, [r7, #4]
 800688c:	2b00      	cmp	r3, #0
 800688e:	d002      	beq.n	8006896 <HAL_SPI_TransmitReceive+0x80>
 8006890:	887b      	ldrh	r3, [r7, #2]
 8006892:	2b00      	cmp	r3, #0
 8006894:	d103      	bne.n	800689e <HAL_SPI_TransmitReceive+0x88>
 8006896:	2301      	movs	r3, #1
 8006898:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800689c:	e1c0      	b.n	8006c20 <HAL_SPI_TransmitReceive+0x40a>
 800689e:	68fb      	ldr	r3, [r7, #12]
 80068a0:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 80068a4:	b2db      	uxtb	r3, r3
 80068a6:	2b04      	cmp	r3, #4
 80068a8:	d003      	beq.n	80068b2 <HAL_SPI_TransmitReceive+0x9c>
 80068aa:	68fb      	ldr	r3, [r7, #12]
 80068ac:	2205      	movs	r2, #5
 80068ae:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 80068b2:	68fb      	ldr	r3, [r7, #12]
 80068b4:	2200      	movs	r2, #0
 80068b6:	661a      	str	r2, [r3, #96]	; 0x60
 80068b8:	68fb      	ldr	r3, [r7, #12]
 80068ba:	687a      	ldr	r2, [r7, #4]
 80068bc:	641a      	str	r2, [r3, #64]	; 0x40
 80068be:	68fb      	ldr	r3, [r7, #12]
 80068c0:	887a      	ldrh	r2, [r7, #2]
 80068c2:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 80068c6:	68fb      	ldr	r3, [r7, #12]
 80068c8:	887a      	ldrh	r2, [r7, #2]
 80068ca:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 80068ce:	68fb      	ldr	r3, [r7, #12]
 80068d0:	68ba      	ldr	r2, [r7, #8]
 80068d2:	639a      	str	r2, [r3, #56]	; 0x38
 80068d4:	68fb      	ldr	r3, [r7, #12]
 80068d6:	887a      	ldrh	r2, [r7, #2]
 80068d8:	87da      	strh	r2, [r3, #62]	; 0x3e
 80068da:	68fb      	ldr	r3, [r7, #12]
 80068dc:	887a      	ldrh	r2, [r7, #2]
 80068de:	879a      	strh	r2, [r3, #60]	; 0x3c
 80068e0:	68fb      	ldr	r3, [r7, #12]
 80068e2:	2200      	movs	r2, #0
 80068e4:	64da      	str	r2, [r3, #76]	; 0x4c
 80068e6:	68fb      	ldr	r3, [r7, #12]
 80068e8:	2200      	movs	r2, #0
 80068ea:	651a      	str	r2, [r3, #80]	; 0x50
 80068ec:	68fb      	ldr	r3, [r7, #12]
 80068ee:	68db      	ldr	r3, [r3, #12]
 80068f0:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 80068f4:	d802      	bhi.n	80068fc <HAL_SPI_TransmitReceive+0xe6>
 80068f6:	8a3b      	ldrh	r3, [r7, #16]
 80068f8:	2b01      	cmp	r3, #1
 80068fa:	d908      	bls.n	800690e <HAL_SPI_TransmitReceive+0xf8>
 80068fc:	68fb      	ldr	r3, [r7, #12]
 80068fe:	681b      	ldr	r3, [r3, #0]
 8006900:	685a      	ldr	r2, [r3, #4]
 8006902:	68fb      	ldr	r3, [r7, #12]
 8006904:	681b      	ldr	r3, [r3, #0]
 8006906:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800690a:	605a      	str	r2, [r3, #4]
 800690c:	e007      	b.n	800691e <HAL_SPI_TransmitReceive+0x108>
 800690e:	68fb      	ldr	r3, [r7, #12]
 8006910:	681b      	ldr	r3, [r3, #0]
 8006912:	685a      	ldr	r2, [r3, #4]
 8006914:	68fb      	ldr	r3, [r7, #12]
 8006916:	681b      	ldr	r3, [r3, #0]
 8006918:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800691c:	605a      	str	r2, [r3, #4]
 800691e:	68fb      	ldr	r3, [r7, #12]
 8006920:	681b      	ldr	r3, [r3, #0]
 8006922:	681b      	ldr	r3, [r3, #0]
 8006924:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006928:	2b40      	cmp	r3, #64	; 0x40
 800692a:	d007      	beq.n	800693c <HAL_SPI_TransmitReceive+0x126>
 800692c:	68fb      	ldr	r3, [r7, #12]
 800692e:	681b      	ldr	r3, [r3, #0]
 8006930:	681a      	ldr	r2, [r3, #0]
 8006932:	68fb      	ldr	r3, [r7, #12]
 8006934:	681b      	ldr	r3, [r3, #0]
 8006936:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800693a:	601a      	str	r2, [r3, #0]
 800693c:	68fb      	ldr	r3, [r7, #12]
 800693e:	68db      	ldr	r3, [r3, #12]
 8006940:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8006944:	d97c      	bls.n	8006a40 <HAL_SPI_TransmitReceive+0x22a>
 8006946:	68fb      	ldr	r3, [r7, #12]
 8006948:	685b      	ldr	r3, [r3, #4]
 800694a:	2b00      	cmp	r3, #0
 800694c:	d002      	beq.n	8006954 <HAL_SPI_TransmitReceive+0x13e>
 800694e:	8a7b      	ldrh	r3, [r7, #18]
 8006950:	2b01      	cmp	r3, #1
 8006952:	d169      	bne.n	8006a28 <HAL_SPI_TransmitReceive+0x212>
 8006954:	68fb      	ldr	r3, [r7, #12]
 8006956:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006958:	881a      	ldrh	r2, [r3, #0]
 800695a:	68fb      	ldr	r3, [r7, #12]
 800695c:	681b      	ldr	r3, [r3, #0]
 800695e:	60da      	str	r2, [r3, #12]
 8006960:	68fb      	ldr	r3, [r7, #12]
 8006962:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006964:	1c9a      	adds	r2, r3, #2
 8006966:	68fb      	ldr	r3, [r7, #12]
 8006968:	639a      	str	r2, [r3, #56]	; 0x38
 800696a:	68fb      	ldr	r3, [r7, #12]
 800696c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800696e:	b29b      	uxth	r3, r3
 8006970:	3b01      	subs	r3, #1
 8006972:	b29a      	uxth	r2, r3
 8006974:	68fb      	ldr	r3, [r7, #12]
 8006976:	87da      	strh	r2, [r3, #62]	; 0x3e
 8006978:	e056      	b.n	8006a28 <HAL_SPI_TransmitReceive+0x212>
 800697a:	68fb      	ldr	r3, [r7, #12]
 800697c:	681b      	ldr	r3, [r3, #0]
 800697e:	689b      	ldr	r3, [r3, #8]
 8006980:	f003 0302 	and.w	r3, r3, #2
 8006984:	2b02      	cmp	r3, #2
 8006986:	d11b      	bne.n	80069c0 <HAL_SPI_TransmitReceive+0x1aa>
 8006988:	68fb      	ldr	r3, [r7, #12]
 800698a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800698c:	b29b      	uxth	r3, r3
 800698e:	2b00      	cmp	r3, #0
 8006990:	d016      	beq.n	80069c0 <HAL_SPI_TransmitReceive+0x1aa>
 8006992:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006994:	2b01      	cmp	r3, #1
 8006996:	d113      	bne.n	80069c0 <HAL_SPI_TransmitReceive+0x1aa>
 8006998:	68fb      	ldr	r3, [r7, #12]
 800699a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800699c:	881a      	ldrh	r2, [r3, #0]
 800699e:	68fb      	ldr	r3, [r7, #12]
 80069a0:	681b      	ldr	r3, [r3, #0]
 80069a2:	60da      	str	r2, [r3, #12]
 80069a4:	68fb      	ldr	r3, [r7, #12]
 80069a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80069a8:	1c9a      	adds	r2, r3, #2
 80069aa:	68fb      	ldr	r3, [r7, #12]
 80069ac:	639a      	str	r2, [r3, #56]	; 0x38
 80069ae:	68fb      	ldr	r3, [r7, #12]
 80069b0:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80069b2:	b29b      	uxth	r3, r3
 80069b4:	3b01      	subs	r3, #1
 80069b6:	b29a      	uxth	r2, r3
 80069b8:	68fb      	ldr	r3, [r7, #12]
 80069ba:	87da      	strh	r2, [r3, #62]	; 0x3e
 80069bc:	2300      	movs	r3, #0
 80069be:	627b      	str	r3, [r7, #36]	; 0x24
 80069c0:	68fb      	ldr	r3, [r7, #12]
 80069c2:	681b      	ldr	r3, [r3, #0]
 80069c4:	689b      	ldr	r3, [r3, #8]
 80069c6:	f003 0301 	and.w	r3, r3, #1
 80069ca:	2b01      	cmp	r3, #1
 80069cc:	d11c      	bne.n	8006a08 <HAL_SPI_TransmitReceive+0x1f2>
 80069ce:	68fb      	ldr	r3, [r7, #12]
 80069d0:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 80069d4:	b29b      	uxth	r3, r3
 80069d6:	2b00      	cmp	r3, #0
 80069d8:	d016      	beq.n	8006a08 <HAL_SPI_TransmitReceive+0x1f2>
 80069da:	68fb      	ldr	r3, [r7, #12]
 80069dc:	681b      	ldr	r3, [r3, #0]
 80069de:	68da      	ldr	r2, [r3, #12]
 80069e0:	68fb      	ldr	r3, [r7, #12]
 80069e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80069e4:	b292      	uxth	r2, r2
 80069e6:	801a      	strh	r2, [r3, #0]
 80069e8:	68fb      	ldr	r3, [r7, #12]
 80069ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80069ec:	1c9a      	adds	r2, r3, #2
 80069ee:	68fb      	ldr	r3, [r7, #12]
 80069f0:	641a      	str	r2, [r3, #64]	; 0x40
 80069f2:	68fb      	ldr	r3, [r7, #12]
 80069f4:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 80069f8:	b29b      	uxth	r3, r3
 80069fa:	3b01      	subs	r3, #1
 80069fc:	b29a      	uxth	r2, r3
 80069fe:	68fb      	ldr	r3, [r7, #12]
 8006a00:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8006a04:	2301      	movs	r3, #1
 8006a06:	627b      	str	r3, [r7, #36]	; 0x24
 8006a08:	f7fc fd6c 	bl	80034e4 <HAL_GetTick>
 8006a0c:	4602      	mov	r2, r0
 8006a0e:	69fb      	ldr	r3, [r7, #28]
 8006a10:	1ad3      	subs	r3, r2, r3
 8006a12:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8006a14:	429a      	cmp	r2, r3
 8006a16:	d807      	bhi.n	8006a28 <HAL_SPI_TransmitReceive+0x212>
 8006a18:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006a1a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006a1e:	d003      	beq.n	8006a28 <HAL_SPI_TransmitReceive+0x212>
 8006a20:	2303      	movs	r3, #3
 8006a22:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006a26:	e0fb      	b.n	8006c20 <HAL_SPI_TransmitReceive+0x40a>
 8006a28:	68fb      	ldr	r3, [r7, #12]
 8006a2a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006a2c:	b29b      	uxth	r3, r3
 8006a2e:	2b00      	cmp	r3, #0
 8006a30:	d1a3      	bne.n	800697a <HAL_SPI_TransmitReceive+0x164>
 8006a32:	68fb      	ldr	r3, [r7, #12]
 8006a34:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8006a38:	b29b      	uxth	r3, r3
 8006a3a:	2b00      	cmp	r3, #0
 8006a3c:	d19d      	bne.n	800697a <HAL_SPI_TransmitReceive+0x164>
 8006a3e:	e0df      	b.n	8006c00 <HAL_SPI_TransmitReceive+0x3ea>
 8006a40:	68fb      	ldr	r3, [r7, #12]
 8006a42:	685b      	ldr	r3, [r3, #4]
 8006a44:	2b00      	cmp	r3, #0
 8006a46:	d003      	beq.n	8006a50 <HAL_SPI_TransmitReceive+0x23a>
 8006a48:	8a7b      	ldrh	r3, [r7, #18]
 8006a4a:	2b01      	cmp	r3, #1
 8006a4c:	f040 80cb 	bne.w	8006be6 <HAL_SPI_TransmitReceive+0x3d0>
 8006a50:	68fb      	ldr	r3, [r7, #12]
 8006a52:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006a54:	b29b      	uxth	r3, r3
 8006a56:	2b01      	cmp	r3, #1
 8006a58:	d912      	bls.n	8006a80 <HAL_SPI_TransmitReceive+0x26a>
 8006a5a:	68fb      	ldr	r3, [r7, #12]
 8006a5c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006a5e:	881a      	ldrh	r2, [r3, #0]
 8006a60:	68fb      	ldr	r3, [r7, #12]
 8006a62:	681b      	ldr	r3, [r3, #0]
 8006a64:	60da      	str	r2, [r3, #12]
 8006a66:	68fb      	ldr	r3, [r7, #12]
 8006a68:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006a6a:	1c9a      	adds	r2, r3, #2
 8006a6c:	68fb      	ldr	r3, [r7, #12]
 8006a6e:	639a      	str	r2, [r3, #56]	; 0x38
 8006a70:	68fb      	ldr	r3, [r7, #12]
 8006a72:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006a74:	b29b      	uxth	r3, r3
 8006a76:	3b02      	subs	r3, #2
 8006a78:	b29a      	uxth	r2, r3
 8006a7a:	68fb      	ldr	r3, [r7, #12]
 8006a7c:	87da      	strh	r2, [r3, #62]	; 0x3e
 8006a7e:	e0b2      	b.n	8006be6 <HAL_SPI_TransmitReceive+0x3d0>
 8006a80:	68fb      	ldr	r3, [r7, #12]
 8006a82:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8006a84:	68fb      	ldr	r3, [r7, #12]
 8006a86:	681b      	ldr	r3, [r3, #0]
 8006a88:	330c      	adds	r3, #12
 8006a8a:	7812      	ldrb	r2, [r2, #0]
 8006a8c:	701a      	strb	r2, [r3, #0]
 8006a8e:	68fb      	ldr	r3, [r7, #12]
 8006a90:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006a92:	1c5a      	adds	r2, r3, #1
 8006a94:	68fb      	ldr	r3, [r7, #12]
 8006a96:	639a      	str	r2, [r3, #56]	; 0x38
 8006a98:	68fb      	ldr	r3, [r7, #12]
 8006a9a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006a9c:	b29b      	uxth	r3, r3
 8006a9e:	3b01      	subs	r3, #1
 8006aa0:	b29a      	uxth	r2, r3
 8006aa2:	68fb      	ldr	r3, [r7, #12]
 8006aa4:	87da      	strh	r2, [r3, #62]	; 0x3e
 8006aa6:	e09e      	b.n	8006be6 <HAL_SPI_TransmitReceive+0x3d0>
 8006aa8:	68fb      	ldr	r3, [r7, #12]
 8006aaa:	681b      	ldr	r3, [r3, #0]
 8006aac:	689b      	ldr	r3, [r3, #8]
 8006aae:	f003 0302 	and.w	r3, r3, #2
 8006ab2:	2b02      	cmp	r3, #2
 8006ab4:	d134      	bne.n	8006b20 <HAL_SPI_TransmitReceive+0x30a>
 8006ab6:	68fb      	ldr	r3, [r7, #12]
 8006ab8:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006aba:	b29b      	uxth	r3, r3
 8006abc:	2b00      	cmp	r3, #0
 8006abe:	d02f      	beq.n	8006b20 <HAL_SPI_TransmitReceive+0x30a>
 8006ac0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006ac2:	2b01      	cmp	r3, #1
 8006ac4:	d12c      	bne.n	8006b20 <HAL_SPI_TransmitReceive+0x30a>
 8006ac6:	68fb      	ldr	r3, [r7, #12]
 8006ac8:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006aca:	b29b      	uxth	r3, r3
 8006acc:	2b01      	cmp	r3, #1
 8006ace:	d912      	bls.n	8006af6 <HAL_SPI_TransmitReceive+0x2e0>
 8006ad0:	68fb      	ldr	r3, [r7, #12]
 8006ad2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006ad4:	881a      	ldrh	r2, [r3, #0]
 8006ad6:	68fb      	ldr	r3, [r7, #12]
 8006ad8:	681b      	ldr	r3, [r3, #0]
 8006ada:	60da      	str	r2, [r3, #12]
 8006adc:	68fb      	ldr	r3, [r7, #12]
 8006ade:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006ae0:	1c9a      	adds	r2, r3, #2
 8006ae2:	68fb      	ldr	r3, [r7, #12]
 8006ae4:	639a      	str	r2, [r3, #56]	; 0x38
 8006ae6:	68fb      	ldr	r3, [r7, #12]
 8006ae8:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006aea:	b29b      	uxth	r3, r3
 8006aec:	3b02      	subs	r3, #2
 8006aee:	b29a      	uxth	r2, r3
 8006af0:	68fb      	ldr	r3, [r7, #12]
 8006af2:	87da      	strh	r2, [r3, #62]	; 0x3e
 8006af4:	e012      	b.n	8006b1c <HAL_SPI_TransmitReceive+0x306>
 8006af6:	68fb      	ldr	r3, [r7, #12]
 8006af8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8006afa:	68fb      	ldr	r3, [r7, #12]
 8006afc:	681b      	ldr	r3, [r3, #0]
 8006afe:	330c      	adds	r3, #12
 8006b00:	7812      	ldrb	r2, [r2, #0]
 8006b02:	701a      	strb	r2, [r3, #0]
 8006b04:	68fb      	ldr	r3, [r7, #12]
 8006b06:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006b08:	1c5a      	adds	r2, r3, #1
 8006b0a:	68fb      	ldr	r3, [r7, #12]
 8006b0c:	639a      	str	r2, [r3, #56]	; 0x38
 8006b0e:	68fb      	ldr	r3, [r7, #12]
 8006b10:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006b12:	b29b      	uxth	r3, r3
 8006b14:	3b01      	subs	r3, #1
 8006b16:	b29a      	uxth	r2, r3
 8006b18:	68fb      	ldr	r3, [r7, #12]
 8006b1a:	87da      	strh	r2, [r3, #62]	; 0x3e
 8006b1c:	2300      	movs	r3, #0
 8006b1e:	627b      	str	r3, [r7, #36]	; 0x24
 8006b20:	68fb      	ldr	r3, [r7, #12]
 8006b22:	681b      	ldr	r3, [r3, #0]
 8006b24:	689b      	ldr	r3, [r3, #8]
 8006b26:	f003 0301 	and.w	r3, r3, #1
 8006b2a:	2b01      	cmp	r3, #1
 8006b2c:	d148      	bne.n	8006bc0 <HAL_SPI_TransmitReceive+0x3aa>
 8006b2e:	68fb      	ldr	r3, [r7, #12]
 8006b30:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8006b34:	b29b      	uxth	r3, r3
 8006b36:	2b00      	cmp	r3, #0
 8006b38:	d042      	beq.n	8006bc0 <HAL_SPI_TransmitReceive+0x3aa>
 8006b3a:	68fb      	ldr	r3, [r7, #12]
 8006b3c:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8006b40:	b29b      	uxth	r3, r3
 8006b42:	2b01      	cmp	r3, #1
 8006b44:	d923      	bls.n	8006b8e <HAL_SPI_TransmitReceive+0x378>
 8006b46:	68fb      	ldr	r3, [r7, #12]
 8006b48:	681b      	ldr	r3, [r3, #0]
 8006b4a:	68da      	ldr	r2, [r3, #12]
 8006b4c:	68fb      	ldr	r3, [r7, #12]
 8006b4e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006b50:	b292      	uxth	r2, r2
 8006b52:	801a      	strh	r2, [r3, #0]
 8006b54:	68fb      	ldr	r3, [r7, #12]
 8006b56:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006b58:	1c9a      	adds	r2, r3, #2
 8006b5a:	68fb      	ldr	r3, [r7, #12]
 8006b5c:	641a      	str	r2, [r3, #64]	; 0x40
 8006b5e:	68fb      	ldr	r3, [r7, #12]
 8006b60:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8006b64:	b29b      	uxth	r3, r3
 8006b66:	3b02      	subs	r3, #2
 8006b68:	b29a      	uxth	r2, r3
 8006b6a:	68fb      	ldr	r3, [r7, #12]
 8006b6c:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8006b70:	68fb      	ldr	r3, [r7, #12]
 8006b72:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8006b76:	b29b      	uxth	r3, r3
 8006b78:	2b01      	cmp	r3, #1
 8006b7a:	d81f      	bhi.n	8006bbc <HAL_SPI_TransmitReceive+0x3a6>
 8006b7c:	68fb      	ldr	r3, [r7, #12]
 8006b7e:	681b      	ldr	r3, [r3, #0]
 8006b80:	685a      	ldr	r2, [r3, #4]
 8006b82:	68fb      	ldr	r3, [r7, #12]
 8006b84:	681b      	ldr	r3, [r3, #0]
 8006b86:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8006b8a:	605a      	str	r2, [r3, #4]
 8006b8c:	e016      	b.n	8006bbc <HAL_SPI_TransmitReceive+0x3a6>
 8006b8e:	68fb      	ldr	r3, [r7, #12]
 8006b90:	681b      	ldr	r3, [r3, #0]
 8006b92:	f103 020c 	add.w	r2, r3, #12
 8006b96:	68fb      	ldr	r3, [r7, #12]
 8006b98:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006b9a:	7812      	ldrb	r2, [r2, #0]
 8006b9c:	b2d2      	uxtb	r2, r2
 8006b9e:	701a      	strb	r2, [r3, #0]
 8006ba0:	68fb      	ldr	r3, [r7, #12]
 8006ba2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006ba4:	1c5a      	adds	r2, r3, #1
 8006ba6:	68fb      	ldr	r3, [r7, #12]
 8006ba8:	641a      	str	r2, [r3, #64]	; 0x40
 8006baa:	68fb      	ldr	r3, [r7, #12]
 8006bac:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8006bb0:	b29b      	uxth	r3, r3
 8006bb2:	3b01      	subs	r3, #1
 8006bb4:	b29a      	uxth	r2, r3
 8006bb6:	68fb      	ldr	r3, [r7, #12]
 8006bb8:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8006bbc:	2301      	movs	r3, #1
 8006bbe:	627b      	str	r3, [r7, #36]	; 0x24
 8006bc0:	f7fc fc90 	bl	80034e4 <HAL_GetTick>
 8006bc4:	4602      	mov	r2, r0
 8006bc6:	69fb      	ldr	r3, [r7, #28]
 8006bc8:	1ad3      	subs	r3, r2, r3
 8006bca:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8006bcc:	429a      	cmp	r2, r3
 8006bce:	d803      	bhi.n	8006bd8 <HAL_SPI_TransmitReceive+0x3c2>
 8006bd0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006bd2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006bd6:	d102      	bne.n	8006bde <HAL_SPI_TransmitReceive+0x3c8>
 8006bd8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006bda:	2b00      	cmp	r3, #0
 8006bdc:	d103      	bne.n	8006be6 <HAL_SPI_TransmitReceive+0x3d0>
 8006bde:	2303      	movs	r3, #3
 8006be0:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006be4:	e01c      	b.n	8006c20 <HAL_SPI_TransmitReceive+0x40a>
 8006be6:	68fb      	ldr	r3, [r7, #12]
 8006be8:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006bea:	b29b      	uxth	r3, r3
 8006bec:	2b00      	cmp	r3, #0
 8006bee:	f47f af5b 	bne.w	8006aa8 <HAL_SPI_TransmitReceive+0x292>
 8006bf2:	68fb      	ldr	r3, [r7, #12]
 8006bf4:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8006bf8:	b29b      	uxth	r3, r3
 8006bfa:	2b00      	cmp	r3, #0
 8006bfc:	f47f af54 	bne.w	8006aa8 <HAL_SPI_TransmitReceive+0x292>
 8006c00:	69fa      	ldr	r2, [r7, #28]
 8006c02:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8006c04:	68f8      	ldr	r0, [r7, #12]
 8006c06:	f000 fac7 	bl	8007198 <SPI_EndRxTxTransaction>
 8006c0a:	4603      	mov	r3, r0
 8006c0c:	2b00      	cmp	r3, #0
 8006c0e:	d006      	beq.n	8006c1e <HAL_SPI_TransmitReceive+0x408>
 8006c10:	2301      	movs	r3, #1
 8006c12:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006c16:	68fb      	ldr	r3, [r7, #12]
 8006c18:	2220      	movs	r2, #32
 8006c1a:	661a      	str	r2, [r3, #96]	; 0x60
 8006c1c:	e000      	b.n	8006c20 <HAL_SPI_TransmitReceive+0x40a>
 8006c1e:	bf00      	nop
 8006c20:	68fb      	ldr	r3, [r7, #12]
 8006c22:	2201      	movs	r2, #1
 8006c24:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 8006c28:	68fb      	ldr	r3, [r7, #12]
 8006c2a:	2200      	movs	r2, #0
 8006c2c:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 8006c30:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8006c34:	4618      	mov	r0, r3
 8006c36:	3728      	adds	r7, #40	; 0x28
 8006c38:	46bd      	mov	sp, r7
 8006c3a:	bd80      	pop	{r7, pc}

08006c3c <HAL_SPI_IRQHandler>:
 8006c3c:	b580      	push	{r7, lr}
 8006c3e:	b088      	sub	sp, #32
 8006c40:	af00      	add	r7, sp, #0
 8006c42:	6078      	str	r0, [r7, #4]
 8006c44:	687b      	ldr	r3, [r7, #4]
 8006c46:	681b      	ldr	r3, [r3, #0]
 8006c48:	685b      	ldr	r3, [r3, #4]
 8006c4a:	61fb      	str	r3, [r7, #28]
 8006c4c:	687b      	ldr	r3, [r7, #4]
 8006c4e:	681b      	ldr	r3, [r3, #0]
 8006c50:	689b      	ldr	r3, [r3, #8]
 8006c52:	61bb      	str	r3, [r7, #24]
 8006c54:	69bb      	ldr	r3, [r7, #24]
 8006c56:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006c5a:	2b00      	cmp	r3, #0
 8006c5c:	d10e      	bne.n	8006c7c <HAL_SPI_IRQHandler+0x40>
 8006c5e:	69bb      	ldr	r3, [r7, #24]
 8006c60:	f003 0301 	and.w	r3, r3, #1
 8006c64:	2b00      	cmp	r3, #0
 8006c66:	d009      	beq.n	8006c7c <HAL_SPI_IRQHandler+0x40>
 8006c68:	69fb      	ldr	r3, [r7, #28]
 8006c6a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006c6e:	2b00      	cmp	r3, #0
 8006c70:	d004      	beq.n	8006c7c <HAL_SPI_IRQHandler+0x40>
 8006c72:	687b      	ldr	r3, [r7, #4]
 8006c74:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006c76:	6878      	ldr	r0, [r7, #4]
 8006c78:	4798      	blx	r3
 8006c7a:	e0ce      	b.n	8006e1a <HAL_SPI_IRQHandler+0x1de>
 8006c7c:	69bb      	ldr	r3, [r7, #24]
 8006c7e:	f003 0302 	and.w	r3, r3, #2
 8006c82:	2b00      	cmp	r3, #0
 8006c84:	d009      	beq.n	8006c9a <HAL_SPI_IRQHandler+0x5e>
 8006c86:	69fb      	ldr	r3, [r7, #28]
 8006c88:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006c8c:	2b00      	cmp	r3, #0
 8006c8e:	d004      	beq.n	8006c9a <HAL_SPI_IRQHandler+0x5e>
 8006c90:	687b      	ldr	r3, [r7, #4]
 8006c92:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006c94:	6878      	ldr	r0, [r7, #4]
 8006c96:	4798      	blx	r3
 8006c98:	e0bf      	b.n	8006e1a <HAL_SPI_IRQHandler+0x1de>
 8006c9a:	69bb      	ldr	r3, [r7, #24]
 8006c9c:	f003 0320 	and.w	r3, r3, #32
 8006ca0:	2b00      	cmp	r3, #0
 8006ca2:	d10a      	bne.n	8006cba <HAL_SPI_IRQHandler+0x7e>
 8006ca4:	69bb      	ldr	r3, [r7, #24]
 8006ca6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006caa:	2b00      	cmp	r3, #0
 8006cac:	d105      	bne.n	8006cba <HAL_SPI_IRQHandler+0x7e>
 8006cae:	69bb      	ldr	r3, [r7, #24]
 8006cb0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006cb4:	2b00      	cmp	r3, #0
 8006cb6:	f000 80b0 	beq.w	8006e1a <HAL_SPI_IRQHandler+0x1de>
 8006cba:	69fb      	ldr	r3, [r7, #28]
 8006cbc:	f003 0320 	and.w	r3, r3, #32
 8006cc0:	2b00      	cmp	r3, #0
 8006cc2:	f000 80aa 	beq.w	8006e1a <HAL_SPI_IRQHandler+0x1de>
 8006cc6:	69bb      	ldr	r3, [r7, #24]
 8006cc8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006ccc:	2b00      	cmp	r3, #0
 8006cce:	d023      	beq.n	8006d18 <HAL_SPI_IRQHandler+0xdc>
 8006cd0:	687b      	ldr	r3, [r7, #4]
 8006cd2:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 8006cd6:	b2db      	uxtb	r3, r3
 8006cd8:	2b03      	cmp	r3, #3
 8006cda:	d011      	beq.n	8006d00 <HAL_SPI_IRQHandler+0xc4>
 8006cdc:	687b      	ldr	r3, [r7, #4]
 8006cde:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006ce0:	f043 0204 	orr.w	r2, r3, #4
 8006ce4:	687b      	ldr	r3, [r7, #4]
 8006ce6:	661a      	str	r2, [r3, #96]	; 0x60
 8006ce8:	2300      	movs	r3, #0
 8006cea:	617b      	str	r3, [r7, #20]
 8006cec:	687b      	ldr	r3, [r7, #4]
 8006cee:	681b      	ldr	r3, [r3, #0]
 8006cf0:	68db      	ldr	r3, [r3, #12]
 8006cf2:	617b      	str	r3, [r7, #20]
 8006cf4:	687b      	ldr	r3, [r7, #4]
 8006cf6:	681b      	ldr	r3, [r3, #0]
 8006cf8:	689b      	ldr	r3, [r3, #8]
 8006cfa:	617b      	str	r3, [r7, #20]
 8006cfc:	697b      	ldr	r3, [r7, #20]
 8006cfe:	e00b      	b.n	8006d18 <HAL_SPI_IRQHandler+0xdc>
 8006d00:	2300      	movs	r3, #0
 8006d02:	613b      	str	r3, [r7, #16]
 8006d04:	687b      	ldr	r3, [r7, #4]
 8006d06:	681b      	ldr	r3, [r3, #0]
 8006d08:	68db      	ldr	r3, [r3, #12]
 8006d0a:	613b      	str	r3, [r7, #16]
 8006d0c:	687b      	ldr	r3, [r7, #4]
 8006d0e:	681b      	ldr	r3, [r3, #0]
 8006d10:	689b      	ldr	r3, [r3, #8]
 8006d12:	613b      	str	r3, [r7, #16]
 8006d14:	693b      	ldr	r3, [r7, #16]
 8006d16:	e080      	b.n	8006e1a <HAL_SPI_IRQHandler+0x1de>
 8006d18:	69bb      	ldr	r3, [r7, #24]
 8006d1a:	f003 0320 	and.w	r3, r3, #32
 8006d1e:	2b00      	cmp	r3, #0
 8006d20:	d014      	beq.n	8006d4c <HAL_SPI_IRQHandler+0x110>
 8006d22:	687b      	ldr	r3, [r7, #4]
 8006d24:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006d26:	f043 0201 	orr.w	r2, r3, #1
 8006d2a:	687b      	ldr	r3, [r7, #4]
 8006d2c:	661a      	str	r2, [r3, #96]	; 0x60
 8006d2e:	2300      	movs	r3, #0
 8006d30:	60fb      	str	r3, [r7, #12]
 8006d32:	687b      	ldr	r3, [r7, #4]
 8006d34:	681b      	ldr	r3, [r3, #0]
 8006d36:	689b      	ldr	r3, [r3, #8]
 8006d38:	60fb      	str	r3, [r7, #12]
 8006d3a:	687b      	ldr	r3, [r7, #4]
 8006d3c:	681b      	ldr	r3, [r3, #0]
 8006d3e:	681a      	ldr	r2, [r3, #0]
 8006d40:	687b      	ldr	r3, [r7, #4]
 8006d42:	681b      	ldr	r3, [r3, #0]
 8006d44:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006d48:	601a      	str	r2, [r3, #0]
 8006d4a:	68fb      	ldr	r3, [r7, #12]
 8006d4c:	69bb      	ldr	r3, [r7, #24]
 8006d4e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006d52:	2b00      	cmp	r3, #0
 8006d54:	d00c      	beq.n	8006d70 <HAL_SPI_IRQHandler+0x134>
 8006d56:	687b      	ldr	r3, [r7, #4]
 8006d58:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006d5a:	f043 0208 	orr.w	r2, r3, #8
 8006d5e:	687b      	ldr	r3, [r7, #4]
 8006d60:	661a      	str	r2, [r3, #96]	; 0x60
 8006d62:	2300      	movs	r3, #0
 8006d64:	60bb      	str	r3, [r7, #8]
 8006d66:	687b      	ldr	r3, [r7, #4]
 8006d68:	681b      	ldr	r3, [r3, #0]
 8006d6a:	689b      	ldr	r3, [r3, #8]
 8006d6c:	60bb      	str	r3, [r7, #8]
 8006d6e:	68bb      	ldr	r3, [r7, #8]
 8006d70:	687b      	ldr	r3, [r7, #4]
 8006d72:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006d74:	2b00      	cmp	r3, #0
 8006d76:	d04f      	beq.n	8006e18 <HAL_SPI_IRQHandler+0x1dc>
 8006d78:	687b      	ldr	r3, [r7, #4]
 8006d7a:	681b      	ldr	r3, [r3, #0]
 8006d7c:	685a      	ldr	r2, [r3, #4]
 8006d7e:	687b      	ldr	r3, [r7, #4]
 8006d80:	681b      	ldr	r3, [r3, #0]
 8006d82:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8006d86:	605a      	str	r2, [r3, #4]
 8006d88:	687b      	ldr	r3, [r7, #4]
 8006d8a:	2201      	movs	r2, #1
 8006d8c:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 8006d90:	69fb      	ldr	r3, [r7, #28]
 8006d92:	f003 0302 	and.w	r3, r3, #2
 8006d96:	2b00      	cmp	r3, #0
 8006d98:	d104      	bne.n	8006da4 <HAL_SPI_IRQHandler+0x168>
 8006d9a:	69fb      	ldr	r3, [r7, #28]
 8006d9c:	f003 0301 	and.w	r3, r3, #1
 8006da0:	2b00      	cmp	r3, #0
 8006da2:	d034      	beq.n	8006e0e <HAL_SPI_IRQHandler+0x1d2>
 8006da4:	687b      	ldr	r3, [r7, #4]
 8006da6:	681b      	ldr	r3, [r3, #0]
 8006da8:	685a      	ldr	r2, [r3, #4]
 8006daa:	687b      	ldr	r3, [r7, #4]
 8006dac:	681b      	ldr	r3, [r3, #0]
 8006dae:	f022 0203 	bic.w	r2, r2, #3
 8006db2:	605a      	str	r2, [r3, #4]
 8006db4:	687b      	ldr	r3, [r7, #4]
 8006db6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006db8:	2b00      	cmp	r3, #0
 8006dba:	d011      	beq.n	8006de0 <HAL_SPI_IRQHandler+0x1a4>
 8006dbc:	687b      	ldr	r3, [r7, #4]
 8006dbe:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006dc0:	4a17      	ldr	r2, [pc, #92]	; (8006e20 <HAL_SPI_IRQHandler+0x1e4>)
 8006dc2:	651a      	str	r2, [r3, #80]	; 0x50
 8006dc4:	687b      	ldr	r3, [r7, #4]
 8006dc6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006dc8:	4618      	mov	r0, r3
 8006dca:	f7fc fd3c 	bl	8003846 <HAL_DMA_Abort_IT>
 8006dce:	4603      	mov	r3, r0
 8006dd0:	2b00      	cmp	r3, #0
 8006dd2:	d005      	beq.n	8006de0 <HAL_SPI_IRQHandler+0x1a4>
 8006dd4:	687b      	ldr	r3, [r7, #4]
 8006dd6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006dd8:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8006ddc:	687b      	ldr	r3, [r7, #4]
 8006dde:	661a      	str	r2, [r3, #96]	; 0x60
 8006de0:	687b      	ldr	r3, [r7, #4]
 8006de2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006de4:	2b00      	cmp	r3, #0
 8006de6:	d016      	beq.n	8006e16 <HAL_SPI_IRQHandler+0x1da>
 8006de8:	687b      	ldr	r3, [r7, #4]
 8006dea:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006dec:	4a0c      	ldr	r2, [pc, #48]	; (8006e20 <HAL_SPI_IRQHandler+0x1e4>)
 8006dee:	651a      	str	r2, [r3, #80]	; 0x50
 8006df0:	687b      	ldr	r3, [r7, #4]
 8006df2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006df4:	4618      	mov	r0, r3
 8006df6:	f7fc fd26 	bl	8003846 <HAL_DMA_Abort_IT>
 8006dfa:	4603      	mov	r3, r0
 8006dfc:	2b00      	cmp	r3, #0
 8006dfe:	d00a      	beq.n	8006e16 <HAL_SPI_IRQHandler+0x1da>
 8006e00:	687b      	ldr	r3, [r7, #4]
 8006e02:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006e04:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8006e08:	687b      	ldr	r3, [r7, #4]
 8006e0a:	661a      	str	r2, [r3, #96]	; 0x60
 8006e0c:	e003      	b.n	8006e16 <HAL_SPI_IRQHandler+0x1da>
 8006e0e:	6878      	ldr	r0, [r7, #4]
 8006e10:	f000 f808 	bl	8006e24 <HAL_SPI_ErrorCallback>
 8006e14:	e000      	b.n	8006e18 <HAL_SPI_IRQHandler+0x1dc>
 8006e16:	bf00      	nop
 8006e18:	bf00      	nop
 8006e1a:	3720      	adds	r7, #32
 8006e1c:	46bd      	mov	sp, r7
 8006e1e:	bd80      	pop	{r7, pc}
 8006e20:	08006e39 	.word	0x08006e39

08006e24 <HAL_SPI_ErrorCallback>:
 8006e24:	b480      	push	{r7}
 8006e26:	b083      	sub	sp, #12
 8006e28:	af00      	add	r7, sp, #0
 8006e2a:	6078      	str	r0, [r7, #4]
 8006e2c:	bf00      	nop
 8006e2e:	370c      	adds	r7, #12
 8006e30:	46bd      	mov	sp, r7
 8006e32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e36:	4770      	bx	lr

08006e38 <SPI_DMAAbortOnError>:
 8006e38:	b580      	push	{r7, lr}
 8006e3a:	b084      	sub	sp, #16
 8006e3c:	af00      	add	r7, sp, #0
 8006e3e:	6078      	str	r0, [r7, #4]
 8006e40:	687b      	ldr	r3, [r7, #4]
 8006e42:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006e44:	60fb      	str	r3, [r7, #12]
 8006e46:	68fb      	ldr	r3, [r7, #12]
 8006e48:	2200      	movs	r2, #0
 8006e4a:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8006e4e:	68fb      	ldr	r3, [r7, #12]
 8006e50:	2200      	movs	r2, #0
 8006e52:	87da      	strh	r2, [r3, #62]	; 0x3e
 8006e54:	68f8      	ldr	r0, [r7, #12]
 8006e56:	f7ff ffe5 	bl	8006e24 <HAL_SPI_ErrorCallback>
 8006e5a:	bf00      	nop
 8006e5c:	3710      	adds	r7, #16
 8006e5e:	46bd      	mov	sp, r7
 8006e60:	bd80      	pop	{r7, pc}
	...

08006e64 <SPI_WaitFlagStateUntilTimeout>:
 8006e64:	b580      	push	{r7, lr}
 8006e66:	b088      	sub	sp, #32
 8006e68:	af00      	add	r7, sp, #0
 8006e6a:	60f8      	str	r0, [r7, #12]
 8006e6c:	60b9      	str	r1, [r7, #8]
 8006e6e:	603b      	str	r3, [r7, #0]
 8006e70:	4613      	mov	r3, r2
 8006e72:	71fb      	strb	r3, [r7, #7]
 8006e74:	f7fc fb36 	bl	80034e4 <HAL_GetTick>
 8006e78:	4602      	mov	r2, r0
 8006e7a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006e7c:	1a9b      	subs	r3, r3, r2
 8006e7e:	683a      	ldr	r2, [r7, #0]
 8006e80:	4413      	add	r3, r2
 8006e82:	61fb      	str	r3, [r7, #28]
 8006e84:	f7fc fb2e 	bl	80034e4 <HAL_GetTick>
 8006e88:	61b8      	str	r0, [r7, #24]
 8006e8a:	4b39      	ldr	r3, [pc, #228]	; (8006f70 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8006e8c:	681b      	ldr	r3, [r3, #0]
 8006e8e:	015b      	lsls	r3, r3, #5
 8006e90:	0d1b      	lsrs	r3, r3, #20
 8006e92:	69fa      	ldr	r2, [r7, #28]
 8006e94:	fb02 f303 	mul.w	r3, r2, r3
 8006e98:	617b      	str	r3, [r7, #20]
 8006e9a:	e054      	b.n	8006f46 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8006e9c:	683b      	ldr	r3, [r7, #0]
 8006e9e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006ea2:	d050      	beq.n	8006f46 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8006ea4:	f7fc fb1e 	bl	80034e4 <HAL_GetTick>
 8006ea8:	4602      	mov	r2, r0
 8006eaa:	69bb      	ldr	r3, [r7, #24]
 8006eac:	1ad3      	subs	r3, r2, r3
 8006eae:	69fa      	ldr	r2, [r7, #28]
 8006eb0:	429a      	cmp	r2, r3
 8006eb2:	d902      	bls.n	8006eba <SPI_WaitFlagStateUntilTimeout+0x56>
 8006eb4:	69fb      	ldr	r3, [r7, #28]
 8006eb6:	2b00      	cmp	r3, #0
 8006eb8:	d13d      	bne.n	8006f36 <SPI_WaitFlagStateUntilTimeout+0xd2>
 8006eba:	68fb      	ldr	r3, [r7, #12]
 8006ebc:	681b      	ldr	r3, [r3, #0]
 8006ebe:	685a      	ldr	r2, [r3, #4]
 8006ec0:	68fb      	ldr	r3, [r7, #12]
 8006ec2:	681b      	ldr	r3, [r3, #0]
 8006ec4:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8006ec8:	605a      	str	r2, [r3, #4]
 8006eca:	68fb      	ldr	r3, [r7, #12]
 8006ecc:	685b      	ldr	r3, [r3, #4]
 8006ece:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8006ed2:	d111      	bne.n	8006ef8 <SPI_WaitFlagStateUntilTimeout+0x94>
 8006ed4:	68fb      	ldr	r3, [r7, #12]
 8006ed6:	689b      	ldr	r3, [r3, #8]
 8006ed8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8006edc:	d004      	beq.n	8006ee8 <SPI_WaitFlagStateUntilTimeout+0x84>
 8006ede:	68fb      	ldr	r3, [r7, #12]
 8006ee0:	689b      	ldr	r3, [r3, #8]
 8006ee2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8006ee6:	d107      	bne.n	8006ef8 <SPI_WaitFlagStateUntilTimeout+0x94>
 8006ee8:	68fb      	ldr	r3, [r7, #12]
 8006eea:	681b      	ldr	r3, [r3, #0]
 8006eec:	681a      	ldr	r2, [r3, #0]
 8006eee:	68fb      	ldr	r3, [r7, #12]
 8006ef0:	681b      	ldr	r3, [r3, #0]
 8006ef2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006ef6:	601a      	str	r2, [r3, #0]
 8006ef8:	68fb      	ldr	r3, [r7, #12]
 8006efa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006efc:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006f00:	d10f      	bne.n	8006f22 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8006f02:	68fb      	ldr	r3, [r7, #12]
 8006f04:	681b      	ldr	r3, [r3, #0]
 8006f06:	681a      	ldr	r2, [r3, #0]
 8006f08:	68fb      	ldr	r3, [r7, #12]
 8006f0a:	681b      	ldr	r3, [r3, #0]
 8006f0c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8006f10:	601a      	str	r2, [r3, #0]
 8006f12:	68fb      	ldr	r3, [r7, #12]
 8006f14:	681b      	ldr	r3, [r3, #0]
 8006f16:	681a      	ldr	r2, [r3, #0]
 8006f18:	68fb      	ldr	r3, [r7, #12]
 8006f1a:	681b      	ldr	r3, [r3, #0]
 8006f1c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8006f20:	601a      	str	r2, [r3, #0]
 8006f22:	68fb      	ldr	r3, [r7, #12]
 8006f24:	2201      	movs	r2, #1
 8006f26:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 8006f2a:	68fb      	ldr	r3, [r7, #12]
 8006f2c:	2200      	movs	r2, #0
 8006f2e:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 8006f32:	2303      	movs	r3, #3
 8006f34:	e017      	b.n	8006f66 <SPI_WaitFlagStateUntilTimeout+0x102>
 8006f36:	697b      	ldr	r3, [r7, #20]
 8006f38:	2b00      	cmp	r3, #0
 8006f3a:	d101      	bne.n	8006f40 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8006f3c:	2300      	movs	r3, #0
 8006f3e:	61fb      	str	r3, [r7, #28]
 8006f40:	697b      	ldr	r3, [r7, #20]
 8006f42:	3b01      	subs	r3, #1
 8006f44:	617b      	str	r3, [r7, #20]
 8006f46:	68fb      	ldr	r3, [r7, #12]
 8006f48:	681b      	ldr	r3, [r3, #0]
 8006f4a:	689a      	ldr	r2, [r3, #8]
 8006f4c:	68bb      	ldr	r3, [r7, #8]
 8006f4e:	4013      	ands	r3, r2
 8006f50:	68ba      	ldr	r2, [r7, #8]
 8006f52:	429a      	cmp	r2, r3
 8006f54:	bf0c      	ite	eq
 8006f56:	2301      	moveq	r3, #1
 8006f58:	2300      	movne	r3, #0
 8006f5a:	b2db      	uxtb	r3, r3
 8006f5c:	461a      	mov	r2, r3
 8006f5e:	79fb      	ldrb	r3, [r7, #7]
 8006f60:	429a      	cmp	r2, r3
 8006f62:	d19b      	bne.n	8006e9c <SPI_WaitFlagStateUntilTimeout+0x38>
 8006f64:	2300      	movs	r3, #0
 8006f66:	4618      	mov	r0, r3
 8006f68:	3720      	adds	r7, #32
 8006f6a:	46bd      	mov	sp, r7
 8006f6c:	bd80      	pop	{r7, pc}
 8006f6e:	bf00      	nop
 8006f70:	20000084 	.word	0x20000084

08006f74 <SPI_WaitFifoStateUntilTimeout>:
 8006f74:	b580      	push	{r7, lr}
 8006f76:	b08a      	sub	sp, #40	; 0x28
 8006f78:	af00      	add	r7, sp, #0
 8006f7a:	60f8      	str	r0, [r7, #12]
 8006f7c:	60b9      	str	r1, [r7, #8]
 8006f7e:	607a      	str	r2, [r7, #4]
 8006f80:	603b      	str	r3, [r7, #0]
 8006f82:	2300      	movs	r3, #0
 8006f84:	75fb      	strb	r3, [r7, #23]
 8006f86:	f7fc faad 	bl	80034e4 <HAL_GetTick>
 8006f8a:	4602      	mov	r2, r0
 8006f8c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006f8e:	1a9b      	subs	r3, r3, r2
 8006f90:	683a      	ldr	r2, [r7, #0]
 8006f92:	4413      	add	r3, r2
 8006f94:	627b      	str	r3, [r7, #36]	; 0x24
 8006f96:	f7fc faa5 	bl	80034e4 <HAL_GetTick>
 8006f9a:	6238      	str	r0, [r7, #32]
 8006f9c:	68fb      	ldr	r3, [r7, #12]
 8006f9e:	681b      	ldr	r3, [r3, #0]
 8006fa0:	330c      	adds	r3, #12
 8006fa2:	61fb      	str	r3, [r7, #28]
 8006fa4:	4b3d      	ldr	r3, [pc, #244]	; (800709c <SPI_WaitFifoStateUntilTimeout+0x128>)
 8006fa6:	681a      	ldr	r2, [r3, #0]
 8006fa8:	4613      	mov	r3, r2
 8006faa:	009b      	lsls	r3, r3, #2
 8006fac:	4413      	add	r3, r2
 8006fae:	00da      	lsls	r2, r3, #3
 8006fb0:	1ad3      	subs	r3, r2, r3
 8006fb2:	0d1b      	lsrs	r3, r3, #20
 8006fb4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006fb6:	fb02 f303 	mul.w	r3, r2, r3
 8006fba:	61bb      	str	r3, [r7, #24]
 8006fbc:	e060      	b.n	8007080 <SPI_WaitFifoStateUntilTimeout+0x10c>
 8006fbe:	68bb      	ldr	r3, [r7, #8]
 8006fc0:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 8006fc4:	d107      	bne.n	8006fd6 <SPI_WaitFifoStateUntilTimeout+0x62>
 8006fc6:	687b      	ldr	r3, [r7, #4]
 8006fc8:	2b00      	cmp	r3, #0
 8006fca:	d104      	bne.n	8006fd6 <SPI_WaitFifoStateUntilTimeout+0x62>
 8006fcc:	69fb      	ldr	r3, [r7, #28]
 8006fce:	781b      	ldrb	r3, [r3, #0]
 8006fd0:	b2db      	uxtb	r3, r3
 8006fd2:	75fb      	strb	r3, [r7, #23]
 8006fd4:	7dfb      	ldrb	r3, [r7, #23]
 8006fd6:	683b      	ldr	r3, [r7, #0]
 8006fd8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006fdc:	d050      	beq.n	8007080 <SPI_WaitFifoStateUntilTimeout+0x10c>
 8006fde:	f7fc fa81 	bl	80034e4 <HAL_GetTick>
 8006fe2:	4602      	mov	r2, r0
 8006fe4:	6a3b      	ldr	r3, [r7, #32]
 8006fe6:	1ad3      	subs	r3, r2, r3
 8006fe8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006fea:	429a      	cmp	r2, r3
 8006fec:	d902      	bls.n	8006ff4 <SPI_WaitFifoStateUntilTimeout+0x80>
 8006fee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006ff0:	2b00      	cmp	r3, #0
 8006ff2:	d13d      	bne.n	8007070 <SPI_WaitFifoStateUntilTimeout+0xfc>
 8006ff4:	68fb      	ldr	r3, [r7, #12]
 8006ff6:	681b      	ldr	r3, [r3, #0]
 8006ff8:	685a      	ldr	r2, [r3, #4]
 8006ffa:	68fb      	ldr	r3, [r7, #12]
 8006ffc:	681b      	ldr	r3, [r3, #0]
 8006ffe:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007002:	605a      	str	r2, [r3, #4]
 8007004:	68fb      	ldr	r3, [r7, #12]
 8007006:	685b      	ldr	r3, [r3, #4]
 8007008:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800700c:	d111      	bne.n	8007032 <SPI_WaitFifoStateUntilTimeout+0xbe>
 800700e:	68fb      	ldr	r3, [r7, #12]
 8007010:	689b      	ldr	r3, [r3, #8]
 8007012:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007016:	d004      	beq.n	8007022 <SPI_WaitFifoStateUntilTimeout+0xae>
 8007018:	68fb      	ldr	r3, [r7, #12]
 800701a:	689b      	ldr	r3, [r3, #8]
 800701c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007020:	d107      	bne.n	8007032 <SPI_WaitFifoStateUntilTimeout+0xbe>
 8007022:	68fb      	ldr	r3, [r7, #12]
 8007024:	681b      	ldr	r3, [r3, #0]
 8007026:	681a      	ldr	r2, [r3, #0]
 8007028:	68fb      	ldr	r3, [r7, #12]
 800702a:	681b      	ldr	r3, [r3, #0]
 800702c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007030:	601a      	str	r2, [r3, #0]
 8007032:	68fb      	ldr	r3, [r7, #12]
 8007034:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007036:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800703a:	d10f      	bne.n	800705c <SPI_WaitFifoStateUntilTimeout+0xe8>
 800703c:	68fb      	ldr	r3, [r7, #12]
 800703e:	681b      	ldr	r3, [r3, #0]
 8007040:	681a      	ldr	r2, [r3, #0]
 8007042:	68fb      	ldr	r3, [r7, #12]
 8007044:	681b      	ldr	r3, [r3, #0]
 8007046:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800704a:	601a      	str	r2, [r3, #0]
 800704c:	68fb      	ldr	r3, [r7, #12]
 800704e:	681b      	ldr	r3, [r3, #0]
 8007050:	681a      	ldr	r2, [r3, #0]
 8007052:	68fb      	ldr	r3, [r7, #12]
 8007054:	681b      	ldr	r3, [r3, #0]
 8007056:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800705a:	601a      	str	r2, [r3, #0]
 800705c:	68fb      	ldr	r3, [r7, #12]
 800705e:	2201      	movs	r2, #1
 8007060:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 8007064:	68fb      	ldr	r3, [r7, #12]
 8007066:	2200      	movs	r2, #0
 8007068:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 800706c:	2303      	movs	r3, #3
 800706e:	e010      	b.n	8007092 <SPI_WaitFifoStateUntilTimeout+0x11e>
 8007070:	69bb      	ldr	r3, [r7, #24]
 8007072:	2b00      	cmp	r3, #0
 8007074:	d101      	bne.n	800707a <SPI_WaitFifoStateUntilTimeout+0x106>
 8007076:	2300      	movs	r3, #0
 8007078:	627b      	str	r3, [r7, #36]	; 0x24
 800707a:	69bb      	ldr	r3, [r7, #24]
 800707c:	3b01      	subs	r3, #1
 800707e:	61bb      	str	r3, [r7, #24]
 8007080:	68fb      	ldr	r3, [r7, #12]
 8007082:	681b      	ldr	r3, [r3, #0]
 8007084:	689a      	ldr	r2, [r3, #8]
 8007086:	68bb      	ldr	r3, [r7, #8]
 8007088:	4013      	ands	r3, r2
 800708a:	687a      	ldr	r2, [r7, #4]
 800708c:	429a      	cmp	r2, r3
 800708e:	d196      	bne.n	8006fbe <SPI_WaitFifoStateUntilTimeout+0x4a>
 8007090:	2300      	movs	r3, #0
 8007092:	4618      	mov	r0, r3
 8007094:	3728      	adds	r7, #40	; 0x28
 8007096:	46bd      	mov	sp, r7
 8007098:	bd80      	pop	{r7, pc}
 800709a:	bf00      	nop
 800709c:	20000084 	.word	0x20000084

080070a0 <SPI_EndRxTransaction>:
 80070a0:	b580      	push	{r7, lr}
 80070a2:	b088      	sub	sp, #32
 80070a4:	af02      	add	r7, sp, #8
 80070a6:	60f8      	str	r0, [r7, #12]
 80070a8:	60b9      	str	r1, [r7, #8]
 80070aa:	607a      	str	r2, [r7, #4]
 80070ac:	68fb      	ldr	r3, [r7, #12]
 80070ae:	685b      	ldr	r3, [r3, #4]
 80070b0:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80070b4:	d111      	bne.n	80070da <SPI_EndRxTransaction+0x3a>
 80070b6:	68fb      	ldr	r3, [r7, #12]
 80070b8:	689b      	ldr	r3, [r3, #8]
 80070ba:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80070be:	d004      	beq.n	80070ca <SPI_EndRxTransaction+0x2a>
 80070c0:	68fb      	ldr	r3, [r7, #12]
 80070c2:	689b      	ldr	r3, [r3, #8]
 80070c4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80070c8:	d107      	bne.n	80070da <SPI_EndRxTransaction+0x3a>
 80070ca:	68fb      	ldr	r3, [r7, #12]
 80070cc:	681b      	ldr	r3, [r3, #0]
 80070ce:	681a      	ldr	r2, [r3, #0]
 80070d0:	68fb      	ldr	r3, [r7, #12]
 80070d2:	681b      	ldr	r3, [r3, #0]
 80070d4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80070d8:	601a      	str	r2, [r3, #0]
 80070da:	68fb      	ldr	r3, [r7, #12]
 80070dc:	685b      	ldr	r3, [r3, #4]
 80070de:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80070e2:	d112      	bne.n	800710a <SPI_EndRxTransaction+0x6a>
 80070e4:	687b      	ldr	r3, [r7, #4]
 80070e6:	9300      	str	r3, [sp, #0]
 80070e8:	68bb      	ldr	r3, [r7, #8]
 80070ea:	2200      	movs	r2, #0
 80070ec:	2180      	movs	r1, #128	; 0x80
 80070ee:	68f8      	ldr	r0, [r7, #12]
 80070f0:	f7ff feb8 	bl	8006e64 <SPI_WaitFlagStateUntilTimeout>
 80070f4:	4603      	mov	r3, r0
 80070f6:	2b00      	cmp	r3, #0
 80070f8:	d021      	beq.n	800713e <SPI_EndRxTransaction+0x9e>
 80070fa:	68fb      	ldr	r3, [r7, #12]
 80070fc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80070fe:	f043 0220 	orr.w	r2, r3, #32
 8007102:	68fb      	ldr	r3, [r7, #12]
 8007104:	661a      	str	r2, [r3, #96]	; 0x60
 8007106:	2303      	movs	r3, #3
 8007108:	e03d      	b.n	8007186 <SPI_EndRxTransaction+0xe6>
 800710a:	4b21      	ldr	r3, [pc, #132]	; (8007190 <SPI_EndRxTransaction+0xf0>)
 800710c:	681b      	ldr	r3, [r3, #0]
 800710e:	4a21      	ldr	r2, [pc, #132]	; (8007194 <SPI_EndRxTransaction+0xf4>)
 8007110:	fba2 2303 	umull	r2, r3, r2, r3
 8007114:	0d5b      	lsrs	r3, r3, #21
 8007116:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800711a:	fb02 f303 	mul.w	r3, r2, r3
 800711e:	617b      	str	r3, [r7, #20]
 8007120:	697b      	ldr	r3, [r7, #20]
 8007122:	2b00      	cmp	r3, #0
 8007124:	d00a      	beq.n	800713c <SPI_EndRxTransaction+0x9c>
 8007126:	697b      	ldr	r3, [r7, #20]
 8007128:	3b01      	subs	r3, #1
 800712a:	617b      	str	r3, [r7, #20]
 800712c:	68fb      	ldr	r3, [r7, #12]
 800712e:	681b      	ldr	r3, [r3, #0]
 8007130:	689b      	ldr	r3, [r3, #8]
 8007132:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007136:	2b80      	cmp	r3, #128	; 0x80
 8007138:	d0f2      	beq.n	8007120 <SPI_EndRxTransaction+0x80>
 800713a:	e000      	b.n	800713e <SPI_EndRxTransaction+0x9e>
 800713c:	bf00      	nop
 800713e:	68fb      	ldr	r3, [r7, #12]
 8007140:	685b      	ldr	r3, [r3, #4]
 8007142:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007146:	d11d      	bne.n	8007184 <SPI_EndRxTransaction+0xe4>
 8007148:	68fb      	ldr	r3, [r7, #12]
 800714a:	689b      	ldr	r3, [r3, #8]
 800714c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007150:	d004      	beq.n	800715c <SPI_EndRxTransaction+0xbc>
 8007152:	68fb      	ldr	r3, [r7, #12]
 8007154:	689b      	ldr	r3, [r3, #8]
 8007156:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800715a:	d113      	bne.n	8007184 <SPI_EndRxTransaction+0xe4>
 800715c:	687b      	ldr	r3, [r7, #4]
 800715e:	9300      	str	r3, [sp, #0]
 8007160:	68bb      	ldr	r3, [r7, #8]
 8007162:	2200      	movs	r2, #0
 8007164:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8007168:	68f8      	ldr	r0, [r7, #12]
 800716a:	f7ff ff03 	bl	8006f74 <SPI_WaitFifoStateUntilTimeout>
 800716e:	4603      	mov	r3, r0
 8007170:	2b00      	cmp	r3, #0
 8007172:	d007      	beq.n	8007184 <SPI_EndRxTransaction+0xe4>
 8007174:	68fb      	ldr	r3, [r7, #12]
 8007176:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007178:	f043 0220 	orr.w	r2, r3, #32
 800717c:	68fb      	ldr	r3, [r7, #12]
 800717e:	661a      	str	r2, [r3, #96]	; 0x60
 8007180:	2303      	movs	r3, #3
 8007182:	e000      	b.n	8007186 <SPI_EndRxTransaction+0xe6>
 8007184:	2300      	movs	r3, #0
 8007186:	4618      	mov	r0, r3
 8007188:	3718      	adds	r7, #24
 800718a:	46bd      	mov	sp, r7
 800718c:	bd80      	pop	{r7, pc}
 800718e:	bf00      	nop
 8007190:	20000084 	.word	0x20000084
 8007194:	165e9f81 	.word	0x165e9f81

08007198 <SPI_EndRxTxTransaction>:
 8007198:	b580      	push	{r7, lr}
 800719a:	b088      	sub	sp, #32
 800719c:	af02      	add	r7, sp, #8
 800719e:	60f8      	str	r0, [r7, #12]
 80071a0:	60b9      	str	r1, [r7, #8]
 80071a2:	607a      	str	r2, [r7, #4]
 80071a4:	687b      	ldr	r3, [r7, #4]
 80071a6:	9300      	str	r3, [sp, #0]
 80071a8:	68bb      	ldr	r3, [r7, #8]
 80071aa:	2200      	movs	r2, #0
 80071ac:	f44f 51c0 	mov.w	r1, #6144	; 0x1800
 80071b0:	68f8      	ldr	r0, [r7, #12]
 80071b2:	f7ff fedf 	bl	8006f74 <SPI_WaitFifoStateUntilTimeout>
 80071b6:	4603      	mov	r3, r0
 80071b8:	2b00      	cmp	r3, #0
 80071ba:	d007      	beq.n	80071cc <SPI_EndRxTxTransaction+0x34>
 80071bc:	68fb      	ldr	r3, [r7, #12]
 80071be:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80071c0:	f043 0220 	orr.w	r2, r3, #32
 80071c4:	68fb      	ldr	r3, [r7, #12]
 80071c6:	661a      	str	r2, [r3, #96]	; 0x60
 80071c8:	2303      	movs	r3, #3
 80071ca:	e046      	b.n	800725a <SPI_EndRxTxTransaction+0xc2>
 80071cc:	4b25      	ldr	r3, [pc, #148]	; (8007264 <SPI_EndRxTxTransaction+0xcc>)
 80071ce:	681b      	ldr	r3, [r3, #0]
 80071d0:	4a25      	ldr	r2, [pc, #148]	; (8007268 <SPI_EndRxTxTransaction+0xd0>)
 80071d2:	fba2 2303 	umull	r2, r3, r2, r3
 80071d6:	0d5b      	lsrs	r3, r3, #21
 80071d8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80071dc:	fb02 f303 	mul.w	r3, r2, r3
 80071e0:	617b      	str	r3, [r7, #20]
 80071e2:	68fb      	ldr	r3, [r7, #12]
 80071e4:	685b      	ldr	r3, [r3, #4]
 80071e6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80071ea:	d112      	bne.n	8007212 <SPI_EndRxTxTransaction+0x7a>
 80071ec:	687b      	ldr	r3, [r7, #4]
 80071ee:	9300      	str	r3, [sp, #0]
 80071f0:	68bb      	ldr	r3, [r7, #8]
 80071f2:	2200      	movs	r2, #0
 80071f4:	2180      	movs	r1, #128	; 0x80
 80071f6:	68f8      	ldr	r0, [r7, #12]
 80071f8:	f7ff fe34 	bl	8006e64 <SPI_WaitFlagStateUntilTimeout>
 80071fc:	4603      	mov	r3, r0
 80071fe:	2b00      	cmp	r3, #0
 8007200:	d016      	beq.n	8007230 <SPI_EndRxTxTransaction+0x98>
 8007202:	68fb      	ldr	r3, [r7, #12]
 8007204:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007206:	f043 0220 	orr.w	r2, r3, #32
 800720a:	68fb      	ldr	r3, [r7, #12]
 800720c:	661a      	str	r2, [r3, #96]	; 0x60
 800720e:	2303      	movs	r3, #3
 8007210:	e023      	b.n	800725a <SPI_EndRxTxTransaction+0xc2>
 8007212:	697b      	ldr	r3, [r7, #20]
 8007214:	2b00      	cmp	r3, #0
 8007216:	d00a      	beq.n	800722e <SPI_EndRxTxTransaction+0x96>
 8007218:	697b      	ldr	r3, [r7, #20]
 800721a:	3b01      	subs	r3, #1
 800721c:	617b      	str	r3, [r7, #20]
 800721e:	68fb      	ldr	r3, [r7, #12]
 8007220:	681b      	ldr	r3, [r3, #0]
 8007222:	689b      	ldr	r3, [r3, #8]
 8007224:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007228:	2b80      	cmp	r3, #128	; 0x80
 800722a:	d0f2      	beq.n	8007212 <SPI_EndRxTxTransaction+0x7a>
 800722c:	e000      	b.n	8007230 <SPI_EndRxTxTransaction+0x98>
 800722e:	bf00      	nop
 8007230:	687b      	ldr	r3, [r7, #4]
 8007232:	9300      	str	r3, [sp, #0]
 8007234:	68bb      	ldr	r3, [r7, #8]
 8007236:	2200      	movs	r2, #0
 8007238:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 800723c:	68f8      	ldr	r0, [r7, #12]
 800723e:	f7ff fe99 	bl	8006f74 <SPI_WaitFifoStateUntilTimeout>
 8007242:	4603      	mov	r3, r0
 8007244:	2b00      	cmp	r3, #0
 8007246:	d007      	beq.n	8007258 <SPI_EndRxTxTransaction+0xc0>
 8007248:	68fb      	ldr	r3, [r7, #12]
 800724a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800724c:	f043 0220 	orr.w	r2, r3, #32
 8007250:	68fb      	ldr	r3, [r7, #12]
 8007252:	661a      	str	r2, [r3, #96]	; 0x60
 8007254:	2303      	movs	r3, #3
 8007256:	e000      	b.n	800725a <SPI_EndRxTxTransaction+0xc2>
 8007258:	2300      	movs	r3, #0
 800725a:	4618      	mov	r0, r3
 800725c:	3718      	adds	r7, #24
 800725e:	46bd      	mov	sp, r7
 8007260:	bd80      	pop	{r7, pc}
 8007262:	bf00      	nop
 8007264:	20000084 	.word	0x20000084
 8007268:	165e9f81 	.word	0x165e9f81

0800726c <HAL_TIM_Base_Init>:
 800726c:	b580      	push	{r7, lr}
 800726e:	b082      	sub	sp, #8
 8007270:	af00      	add	r7, sp, #0
 8007272:	6078      	str	r0, [r7, #4]
 8007274:	687b      	ldr	r3, [r7, #4]
 8007276:	2b00      	cmp	r3, #0
 8007278:	d101      	bne.n	800727e <HAL_TIM_Base_Init+0x12>
 800727a:	2301      	movs	r3, #1
 800727c:	e049      	b.n	8007312 <HAL_TIM_Base_Init+0xa6>
 800727e:	687b      	ldr	r3, [r7, #4]
 8007280:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007284:	b2db      	uxtb	r3, r3
 8007286:	2b00      	cmp	r3, #0
 8007288:	d106      	bne.n	8007298 <HAL_TIM_Base_Init+0x2c>
 800728a:	687b      	ldr	r3, [r7, #4]
 800728c:	2200      	movs	r2, #0
 800728e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007292:	6878      	ldr	r0, [r7, #4]
 8007294:	f7fb ff4c 	bl	8003130 <HAL_TIM_Base_MspInit>
 8007298:	687b      	ldr	r3, [r7, #4]
 800729a:	2202      	movs	r2, #2
 800729c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80072a0:	687b      	ldr	r3, [r7, #4]
 80072a2:	681a      	ldr	r2, [r3, #0]
 80072a4:	687b      	ldr	r3, [r7, #4]
 80072a6:	3304      	adds	r3, #4
 80072a8:	4619      	mov	r1, r3
 80072aa:	4610      	mov	r0, r2
 80072ac:	f000 fdd6 	bl	8007e5c <TIM_Base_SetConfig>
 80072b0:	687b      	ldr	r3, [r7, #4]
 80072b2:	2201      	movs	r2, #1
 80072b4:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 80072b8:	687b      	ldr	r3, [r7, #4]
 80072ba:	2201      	movs	r2, #1
 80072bc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80072c0:	687b      	ldr	r3, [r7, #4]
 80072c2:	2201      	movs	r2, #1
 80072c4:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80072c8:	687b      	ldr	r3, [r7, #4]
 80072ca:	2201      	movs	r2, #1
 80072cc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80072d0:	687b      	ldr	r3, [r7, #4]
 80072d2:	2201      	movs	r2, #1
 80072d4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80072d8:	687b      	ldr	r3, [r7, #4]
 80072da:	2201      	movs	r2, #1
 80072dc:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80072e0:	687b      	ldr	r3, [r7, #4]
 80072e2:	2201      	movs	r2, #1
 80072e4:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80072e8:	687b      	ldr	r3, [r7, #4]
 80072ea:	2201      	movs	r2, #1
 80072ec:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80072f0:	687b      	ldr	r3, [r7, #4]
 80072f2:	2201      	movs	r2, #1
 80072f4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80072f8:	687b      	ldr	r3, [r7, #4]
 80072fa:	2201      	movs	r2, #1
 80072fc:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8007300:	687b      	ldr	r3, [r7, #4]
 8007302:	2201      	movs	r2, #1
 8007304:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 8007308:	687b      	ldr	r3, [r7, #4]
 800730a:	2201      	movs	r2, #1
 800730c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007310:	2300      	movs	r3, #0
 8007312:	4618      	mov	r0, r3
 8007314:	3708      	adds	r7, #8
 8007316:	46bd      	mov	sp, r7
 8007318:	bd80      	pop	{r7, pc}
	...

0800731c <HAL_TIM_Base_Start_IT>:
 800731c:	b480      	push	{r7}
 800731e:	b085      	sub	sp, #20
 8007320:	af00      	add	r7, sp, #0
 8007322:	6078      	str	r0, [r7, #4]
 8007324:	687b      	ldr	r3, [r7, #4]
 8007326:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800732a:	b2db      	uxtb	r3, r3
 800732c:	2b01      	cmp	r3, #1
 800732e:	d001      	beq.n	8007334 <HAL_TIM_Base_Start_IT+0x18>
 8007330:	2301      	movs	r3, #1
 8007332:	e054      	b.n	80073de <HAL_TIM_Base_Start_IT+0xc2>
 8007334:	687b      	ldr	r3, [r7, #4]
 8007336:	2202      	movs	r2, #2
 8007338:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800733c:	687b      	ldr	r3, [r7, #4]
 800733e:	681b      	ldr	r3, [r3, #0]
 8007340:	68da      	ldr	r2, [r3, #12]
 8007342:	687b      	ldr	r3, [r7, #4]
 8007344:	681b      	ldr	r3, [r3, #0]
 8007346:	f042 0201 	orr.w	r2, r2, #1
 800734a:	60da      	str	r2, [r3, #12]
 800734c:	687b      	ldr	r3, [r7, #4]
 800734e:	681b      	ldr	r3, [r3, #0]
 8007350:	4a26      	ldr	r2, [pc, #152]	; (80073ec <HAL_TIM_Base_Start_IT+0xd0>)
 8007352:	4293      	cmp	r3, r2
 8007354:	d022      	beq.n	800739c <HAL_TIM_Base_Start_IT+0x80>
 8007356:	687b      	ldr	r3, [r7, #4]
 8007358:	681b      	ldr	r3, [r3, #0]
 800735a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800735e:	d01d      	beq.n	800739c <HAL_TIM_Base_Start_IT+0x80>
 8007360:	687b      	ldr	r3, [r7, #4]
 8007362:	681b      	ldr	r3, [r3, #0]
 8007364:	4a22      	ldr	r2, [pc, #136]	; (80073f0 <HAL_TIM_Base_Start_IT+0xd4>)
 8007366:	4293      	cmp	r3, r2
 8007368:	d018      	beq.n	800739c <HAL_TIM_Base_Start_IT+0x80>
 800736a:	687b      	ldr	r3, [r7, #4]
 800736c:	681b      	ldr	r3, [r3, #0]
 800736e:	4a21      	ldr	r2, [pc, #132]	; (80073f4 <HAL_TIM_Base_Start_IT+0xd8>)
 8007370:	4293      	cmp	r3, r2
 8007372:	d013      	beq.n	800739c <HAL_TIM_Base_Start_IT+0x80>
 8007374:	687b      	ldr	r3, [r7, #4]
 8007376:	681b      	ldr	r3, [r3, #0]
 8007378:	4a1f      	ldr	r2, [pc, #124]	; (80073f8 <HAL_TIM_Base_Start_IT+0xdc>)
 800737a:	4293      	cmp	r3, r2
 800737c:	d00e      	beq.n	800739c <HAL_TIM_Base_Start_IT+0x80>
 800737e:	687b      	ldr	r3, [r7, #4]
 8007380:	681b      	ldr	r3, [r3, #0]
 8007382:	4a1e      	ldr	r2, [pc, #120]	; (80073fc <HAL_TIM_Base_Start_IT+0xe0>)
 8007384:	4293      	cmp	r3, r2
 8007386:	d009      	beq.n	800739c <HAL_TIM_Base_Start_IT+0x80>
 8007388:	687b      	ldr	r3, [r7, #4]
 800738a:	681b      	ldr	r3, [r3, #0]
 800738c:	4a1c      	ldr	r2, [pc, #112]	; (8007400 <HAL_TIM_Base_Start_IT+0xe4>)
 800738e:	4293      	cmp	r3, r2
 8007390:	d004      	beq.n	800739c <HAL_TIM_Base_Start_IT+0x80>
 8007392:	687b      	ldr	r3, [r7, #4]
 8007394:	681b      	ldr	r3, [r3, #0]
 8007396:	4a1b      	ldr	r2, [pc, #108]	; (8007404 <HAL_TIM_Base_Start_IT+0xe8>)
 8007398:	4293      	cmp	r3, r2
 800739a:	d115      	bne.n	80073c8 <HAL_TIM_Base_Start_IT+0xac>
 800739c:	687b      	ldr	r3, [r7, #4]
 800739e:	681b      	ldr	r3, [r3, #0]
 80073a0:	689a      	ldr	r2, [r3, #8]
 80073a2:	4b19      	ldr	r3, [pc, #100]	; (8007408 <HAL_TIM_Base_Start_IT+0xec>)
 80073a4:	4013      	ands	r3, r2
 80073a6:	60fb      	str	r3, [r7, #12]
 80073a8:	68fb      	ldr	r3, [r7, #12]
 80073aa:	2b06      	cmp	r3, #6
 80073ac:	d015      	beq.n	80073da <HAL_TIM_Base_Start_IT+0xbe>
 80073ae:	68fb      	ldr	r3, [r7, #12]
 80073b0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80073b4:	d011      	beq.n	80073da <HAL_TIM_Base_Start_IT+0xbe>
 80073b6:	687b      	ldr	r3, [r7, #4]
 80073b8:	681b      	ldr	r3, [r3, #0]
 80073ba:	681a      	ldr	r2, [r3, #0]
 80073bc:	687b      	ldr	r3, [r7, #4]
 80073be:	681b      	ldr	r3, [r3, #0]
 80073c0:	f042 0201 	orr.w	r2, r2, #1
 80073c4:	601a      	str	r2, [r3, #0]
 80073c6:	e008      	b.n	80073da <HAL_TIM_Base_Start_IT+0xbe>
 80073c8:	687b      	ldr	r3, [r7, #4]
 80073ca:	681b      	ldr	r3, [r3, #0]
 80073cc:	681a      	ldr	r2, [r3, #0]
 80073ce:	687b      	ldr	r3, [r7, #4]
 80073d0:	681b      	ldr	r3, [r3, #0]
 80073d2:	f042 0201 	orr.w	r2, r2, #1
 80073d6:	601a      	str	r2, [r3, #0]
 80073d8:	e000      	b.n	80073dc <HAL_TIM_Base_Start_IT+0xc0>
 80073da:	bf00      	nop
 80073dc:	2300      	movs	r3, #0
 80073de:	4618      	mov	r0, r3
 80073e0:	3714      	adds	r7, #20
 80073e2:	46bd      	mov	sp, r7
 80073e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073e8:	4770      	bx	lr
 80073ea:	bf00      	nop
 80073ec:	40010000 	.word	0x40010000
 80073f0:	40000400 	.word	0x40000400
 80073f4:	40000800 	.word	0x40000800
 80073f8:	40000c00 	.word	0x40000c00
 80073fc:	40010400 	.word	0x40010400
 8007400:	40014000 	.word	0x40014000
 8007404:	40001800 	.word	0x40001800
 8007408:	00010007 	.word	0x00010007

0800740c <HAL_TIM_PWM_Init>:
 800740c:	b580      	push	{r7, lr}
 800740e:	b082      	sub	sp, #8
 8007410:	af00      	add	r7, sp, #0
 8007412:	6078      	str	r0, [r7, #4]
 8007414:	687b      	ldr	r3, [r7, #4]
 8007416:	2b00      	cmp	r3, #0
 8007418:	d101      	bne.n	800741e <HAL_TIM_PWM_Init+0x12>
 800741a:	2301      	movs	r3, #1
 800741c:	e049      	b.n	80074b2 <HAL_TIM_PWM_Init+0xa6>
 800741e:	687b      	ldr	r3, [r7, #4]
 8007420:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007424:	b2db      	uxtb	r3, r3
 8007426:	2b00      	cmp	r3, #0
 8007428:	d106      	bne.n	8007438 <HAL_TIM_PWM_Init+0x2c>
 800742a:	687b      	ldr	r3, [r7, #4]
 800742c:	2200      	movs	r2, #0
 800742e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007432:	6878      	ldr	r0, [r7, #4]
 8007434:	f000 f841 	bl	80074ba <HAL_TIM_PWM_MspInit>
 8007438:	687b      	ldr	r3, [r7, #4]
 800743a:	2202      	movs	r2, #2
 800743c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007440:	687b      	ldr	r3, [r7, #4]
 8007442:	681a      	ldr	r2, [r3, #0]
 8007444:	687b      	ldr	r3, [r7, #4]
 8007446:	3304      	adds	r3, #4
 8007448:	4619      	mov	r1, r3
 800744a:	4610      	mov	r0, r2
 800744c:	f000 fd06 	bl	8007e5c <TIM_Base_SetConfig>
 8007450:	687b      	ldr	r3, [r7, #4]
 8007452:	2201      	movs	r2, #1
 8007454:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8007458:	687b      	ldr	r3, [r7, #4]
 800745a:	2201      	movs	r2, #1
 800745c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007460:	687b      	ldr	r3, [r7, #4]
 8007462:	2201      	movs	r2, #1
 8007464:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8007468:	687b      	ldr	r3, [r7, #4]
 800746a:	2201      	movs	r2, #1
 800746c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8007470:	687b      	ldr	r3, [r7, #4]
 8007472:	2201      	movs	r2, #1
 8007474:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8007478:	687b      	ldr	r3, [r7, #4]
 800747a:	2201      	movs	r2, #1
 800747c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8007480:	687b      	ldr	r3, [r7, #4]
 8007482:	2201      	movs	r2, #1
 8007484:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8007488:	687b      	ldr	r3, [r7, #4]
 800748a:	2201      	movs	r2, #1
 800748c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8007490:	687b      	ldr	r3, [r7, #4]
 8007492:	2201      	movs	r2, #1
 8007494:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8007498:	687b      	ldr	r3, [r7, #4]
 800749a:	2201      	movs	r2, #1
 800749c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80074a0:	687b      	ldr	r3, [r7, #4]
 80074a2:	2201      	movs	r2, #1
 80074a4:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 80074a8:	687b      	ldr	r3, [r7, #4]
 80074aa:	2201      	movs	r2, #1
 80074ac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80074b0:	2300      	movs	r3, #0
 80074b2:	4618      	mov	r0, r3
 80074b4:	3708      	adds	r7, #8
 80074b6:	46bd      	mov	sp, r7
 80074b8:	bd80      	pop	{r7, pc}

080074ba <HAL_TIM_PWM_MspInit>:
 80074ba:	b480      	push	{r7}
 80074bc:	b083      	sub	sp, #12
 80074be:	af00      	add	r7, sp, #0
 80074c0:	6078      	str	r0, [r7, #4]
 80074c2:	bf00      	nop
 80074c4:	370c      	adds	r7, #12
 80074c6:	46bd      	mov	sp, r7
 80074c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074cc:	4770      	bx	lr
	...

080074d0 <HAL_TIM_PWM_Start>:
 80074d0:	b580      	push	{r7, lr}
 80074d2:	b084      	sub	sp, #16
 80074d4:	af00      	add	r7, sp, #0
 80074d6:	6078      	str	r0, [r7, #4]
 80074d8:	6039      	str	r1, [r7, #0]
 80074da:	683b      	ldr	r3, [r7, #0]
 80074dc:	2b00      	cmp	r3, #0
 80074de:	d109      	bne.n	80074f4 <HAL_TIM_PWM_Start+0x24>
 80074e0:	687b      	ldr	r3, [r7, #4]
 80074e2:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80074e6:	b2db      	uxtb	r3, r3
 80074e8:	2b01      	cmp	r3, #1
 80074ea:	bf14      	ite	ne
 80074ec:	2301      	movne	r3, #1
 80074ee:	2300      	moveq	r3, #0
 80074f0:	b2db      	uxtb	r3, r3
 80074f2:	e03c      	b.n	800756e <HAL_TIM_PWM_Start+0x9e>
 80074f4:	683b      	ldr	r3, [r7, #0]
 80074f6:	2b04      	cmp	r3, #4
 80074f8:	d109      	bne.n	800750e <HAL_TIM_PWM_Start+0x3e>
 80074fa:	687b      	ldr	r3, [r7, #4]
 80074fc:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8007500:	b2db      	uxtb	r3, r3
 8007502:	2b01      	cmp	r3, #1
 8007504:	bf14      	ite	ne
 8007506:	2301      	movne	r3, #1
 8007508:	2300      	moveq	r3, #0
 800750a:	b2db      	uxtb	r3, r3
 800750c:	e02f      	b.n	800756e <HAL_TIM_PWM_Start+0x9e>
 800750e:	683b      	ldr	r3, [r7, #0]
 8007510:	2b08      	cmp	r3, #8
 8007512:	d109      	bne.n	8007528 <HAL_TIM_PWM_Start+0x58>
 8007514:	687b      	ldr	r3, [r7, #4]
 8007516:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800751a:	b2db      	uxtb	r3, r3
 800751c:	2b01      	cmp	r3, #1
 800751e:	bf14      	ite	ne
 8007520:	2301      	movne	r3, #1
 8007522:	2300      	moveq	r3, #0
 8007524:	b2db      	uxtb	r3, r3
 8007526:	e022      	b.n	800756e <HAL_TIM_PWM_Start+0x9e>
 8007528:	683b      	ldr	r3, [r7, #0]
 800752a:	2b0c      	cmp	r3, #12
 800752c:	d109      	bne.n	8007542 <HAL_TIM_PWM_Start+0x72>
 800752e:	687b      	ldr	r3, [r7, #4]
 8007530:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8007534:	b2db      	uxtb	r3, r3
 8007536:	2b01      	cmp	r3, #1
 8007538:	bf14      	ite	ne
 800753a:	2301      	movne	r3, #1
 800753c:	2300      	moveq	r3, #0
 800753e:	b2db      	uxtb	r3, r3
 8007540:	e015      	b.n	800756e <HAL_TIM_PWM_Start+0x9e>
 8007542:	683b      	ldr	r3, [r7, #0]
 8007544:	2b10      	cmp	r3, #16
 8007546:	d109      	bne.n	800755c <HAL_TIM_PWM_Start+0x8c>
 8007548:	687b      	ldr	r3, [r7, #4]
 800754a:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800754e:	b2db      	uxtb	r3, r3
 8007550:	2b01      	cmp	r3, #1
 8007552:	bf14      	ite	ne
 8007554:	2301      	movne	r3, #1
 8007556:	2300      	moveq	r3, #0
 8007558:	b2db      	uxtb	r3, r3
 800755a:	e008      	b.n	800756e <HAL_TIM_PWM_Start+0x9e>
 800755c:	687b      	ldr	r3, [r7, #4]
 800755e:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 8007562:	b2db      	uxtb	r3, r3
 8007564:	2b01      	cmp	r3, #1
 8007566:	bf14      	ite	ne
 8007568:	2301      	movne	r3, #1
 800756a:	2300      	moveq	r3, #0
 800756c:	b2db      	uxtb	r3, r3
 800756e:	2b00      	cmp	r3, #0
 8007570:	d001      	beq.n	8007576 <HAL_TIM_PWM_Start+0xa6>
 8007572:	2301      	movs	r3, #1
 8007574:	e092      	b.n	800769c <HAL_TIM_PWM_Start+0x1cc>
 8007576:	683b      	ldr	r3, [r7, #0]
 8007578:	2b00      	cmp	r3, #0
 800757a:	d104      	bne.n	8007586 <HAL_TIM_PWM_Start+0xb6>
 800757c:	687b      	ldr	r3, [r7, #4]
 800757e:	2202      	movs	r2, #2
 8007580:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007584:	e023      	b.n	80075ce <HAL_TIM_PWM_Start+0xfe>
 8007586:	683b      	ldr	r3, [r7, #0]
 8007588:	2b04      	cmp	r3, #4
 800758a:	d104      	bne.n	8007596 <HAL_TIM_PWM_Start+0xc6>
 800758c:	687b      	ldr	r3, [r7, #4]
 800758e:	2202      	movs	r2, #2
 8007590:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8007594:	e01b      	b.n	80075ce <HAL_TIM_PWM_Start+0xfe>
 8007596:	683b      	ldr	r3, [r7, #0]
 8007598:	2b08      	cmp	r3, #8
 800759a:	d104      	bne.n	80075a6 <HAL_TIM_PWM_Start+0xd6>
 800759c:	687b      	ldr	r3, [r7, #4]
 800759e:	2202      	movs	r2, #2
 80075a0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80075a4:	e013      	b.n	80075ce <HAL_TIM_PWM_Start+0xfe>
 80075a6:	683b      	ldr	r3, [r7, #0]
 80075a8:	2b0c      	cmp	r3, #12
 80075aa:	d104      	bne.n	80075b6 <HAL_TIM_PWM_Start+0xe6>
 80075ac:	687b      	ldr	r3, [r7, #4]
 80075ae:	2202      	movs	r2, #2
 80075b0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80075b4:	e00b      	b.n	80075ce <HAL_TIM_PWM_Start+0xfe>
 80075b6:	683b      	ldr	r3, [r7, #0]
 80075b8:	2b10      	cmp	r3, #16
 80075ba:	d104      	bne.n	80075c6 <HAL_TIM_PWM_Start+0xf6>
 80075bc:	687b      	ldr	r3, [r7, #4]
 80075be:	2202      	movs	r2, #2
 80075c0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80075c4:	e003      	b.n	80075ce <HAL_TIM_PWM_Start+0xfe>
 80075c6:	687b      	ldr	r3, [r7, #4]
 80075c8:	2202      	movs	r2, #2
 80075ca:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80075ce:	687b      	ldr	r3, [r7, #4]
 80075d0:	681b      	ldr	r3, [r3, #0]
 80075d2:	2201      	movs	r2, #1
 80075d4:	6839      	ldr	r1, [r7, #0]
 80075d6:	4618      	mov	r0, r3
 80075d8:	f000 ffd8 	bl	800858c <TIM_CCxChannelCmd>
 80075dc:	687b      	ldr	r3, [r7, #4]
 80075de:	681b      	ldr	r3, [r3, #0]
 80075e0:	4a30      	ldr	r2, [pc, #192]	; (80076a4 <HAL_TIM_PWM_Start+0x1d4>)
 80075e2:	4293      	cmp	r3, r2
 80075e4:	d004      	beq.n	80075f0 <HAL_TIM_PWM_Start+0x120>
 80075e6:	687b      	ldr	r3, [r7, #4]
 80075e8:	681b      	ldr	r3, [r3, #0]
 80075ea:	4a2f      	ldr	r2, [pc, #188]	; (80076a8 <HAL_TIM_PWM_Start+0x1d8>)
 80075ec:	4293      	cmp	r3, r2
 80075ee:	d101      	bne.n	80075f4 <HAL_TIM_PWM_Start+0x124>
 80075f0:	2301      	movs	r3, #1
 80075f2:	e000      	b.n	80075f6 <HAL_TIM_PWM_Start+0x126>
 80075f4:	2300      	movs	r3, #0
 80075f6:	2b00      	cmp	r3, #0
 80075f8:	d007      	beq.n	800760a <HAL_TIM_PWM_Start+0x13a>
 80075fa:	687b      	ldr	r3, [r7, #4]
 80075fc:	681b      	ldr	r3, [r3, #0]
 80075fe:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8007600:	687b      	ldr	r3, [r7, #4]
 8007602:	681b      	ldr	r3, [r3, #0]
 8007604:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8007608:	645a      	str	r2, [r3, #68]	; 0x44
 800760a:	687b      	ldr	r3, [r7, #4]
 800760c:	681b      	ldr	r3, [r3, #0]
 800760e:	4a25      	ldr	r2, [pc, #148]	; (80076a4 <HAL_TIM_PWM_Start+0x1d4>)
 8007610:	4293      	cmp	r3, r2
 8007612:	d022      	beq.n	800765a <HAL_TIM_PWM_Start+0x18a>
 8007614:	687b      	ldr	r3, [r7, #4]
 8007616:	681b      	ldr	r3, [r3, #0]
 8007618:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800761c:	d01d      	beq.n	800765a <HAL_TIM_PWM_Start+0x18a>
 800761e:	687b      	ldr	r3, [r7, #4]
 8007620:	681b      	ldr	r3, [r3, #0]
 8007622:	4a22      	ldr	r2, [pc, #136]	; (80076ac <HAL_TIM_PWM_Start+0x1dc>)
 8007624:	4293      	cmp	r3, r2
 8007626:	d018      	beq.n	800765a <HAL_TIM_PWM_Start+0x18a>
 8007628:	687b      	ldr	r3, [r7, #4]
 800762a:	681b      	ldr	r3, [r3, #0]
 800762c:	4a20      	ldr	r2, [pc, #128]	; (80076b0 <HAL_TIM_PWM_Start+0x1e0>)
 800762e:	4293      	cmp	r3, r2
 8007630:	d013      	beq.n	800765a <HAL_TIM_PWM_Start+0x18a>
 8007632:	687b      	ldr	r3, [r7, #4]
 8007634:	681b      	ldr	r3, [r3, #0]
 8007636:	4a1f      	ldr	r2, [pc, #124]	; (80076b4 <HAL_TIM_PWM_Start+0x1e4>)
 8007638:	4293      	cmp	r3, r2
 800763a:	d00e      	beq.n	800765a <HAL_TIM_PWM_Start+0x18a>
 800763c:	687b      	ldr	r3, [r7, #4]
 800763e:	681b      	ldr	r3, [r3, #0]
 8007640:	4a19      	ldr	r2, [pc, #100]	; (80076a8 <HAL_TIM_PWM_Start+0x1d8>)
 8007642:	4293      	cmp	r3, r2
 8007644:	d009      	beq.n	800765a <HAL_TIM_PWM_Start+0x18a>
 8007646:	687b      	ldr	r3, [r7, #4]
 8007648:	681b      	ldr	r3, [r3, #0]
 800764a:	4a1b      	ldr	r2, [pc, #108]	; (80076b8 <HAL_TIM_PWM_Start+0x1e8>)
 800764c:	4293      	cmp	r3, r2
 800764e:	d004      	beq.n	800765a <HAL_TIM_PWM_Start+0x18a>
 8007650:	687b      	ldr	r3, [r7, #4]
 8007652:	681b      	ldr	r3, [r3, #0]
 8007654:	4a19      	ldr	r2, [pc, #100]	; (80076bc <HAL_TIM_PWM_Start+0x1ec>)
 8007656:	4293      	cmp	r3, r2
 8007658:	d115      	bne.n	8007686 <HAL_TIM_PWM_Start+0x1b6>
 800765a:	687b      	ldr	r3, [r7, #4]
 800765c:	681b      	ldr	r3, [r3, #0]
 800765e:	689a      	ldr	r2, [r3, #8]
 8007660:	4b17      	ldr	r3, [pc, #92]	; (80076c0 <HAL_TIM_PWM_Start+0x1f0>)
 8007662:	4013      	ands	r3, r2
 8007664:	60fb      	str	r3, [r7, #12]
 8007666:	68fb      	ldr	r3, [r7, #12]
 8007668:	2b06      	cmp	r3, #6
 800766a:	d015      	beq.n	8007698 <HAL_TIM_PWM_Start+0x1c8>
 800766c:	68fb      	ldr	r3, [r7, #12]
 800766e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007672:	d011      	beq.n	8007698 <HAL_TIM_PWM_Start+0x1c8>
 8007674:	687b      	ldr	r3, [r7, #4]
 8007676:	681b      	ldr	r3, [r3, #0]
 8007678:	681a      	ldr	r2, [r3, #0]
 800767a:	687b      	ldr	r3, [r7, #4]
 800767c:	681b      	ldr	r3, [r3, #0]
 800767e:	f042 0201 	orr.w	r2, r2, #1
 8007682:	601a      	str	r2, [r3, #0]
 8007684:	e008      	b.n	8007698 <HAL_TIM_PWM_Start+0x1c8>
 8007686:	687b      	ldr	r3, [r7, #4]
 8007688:	681b      	ldr	r3, [r3, #0]
 800768a:	681a      	ldr	r2, [r3, #0]
 800768c:	687b      	ldr	r3, [r7, #4]
 800768e:	681b      	ldr	r3, [r3, #0]
 8007690:	f042 0201 	orr.w	r2, r2, #1
 8007694:	601a      	str	r2, [r3, #0]
 8007696:	e000      	b.n	800769a <HAL_TIM_PWM_Start+0x1ca>
 8007698:	bf00      	nop
 800769a:	2300      	movs	r3, #0
 800769c:	4618      	mov	r0, r3
 800769e:	3710      	adds	r7, #16
 80076a0:	46bd      	mov	sp, r7
 80076a2:	bd80      	pop	{r7, pc}
 80076a4:	40010000 	.word	0x40010000
 80076a8:	40010400 	.word	0x40010400
 80076ac:	40000400 	.word	0x40000400
 80076b0:	40000800 	.word	0x40000800
 80076b4:	40000c00 	.word	0x40000c00
 80076b8:	40014000 	.word	0x40014000
 80076bc:	40001800 	.word	0x40001800
 80076c0:	00010007 	.word	0x00010007

080076c4 <HAL_TIM_Encoder_Init>:
 80076c4:	b580      	push	{r7, lr}
 80076c6:	b086      	sub	sp, #24
 80076c8:	af00      	add	r7, sp, #0
 80076ca:	6078      	str	r0, [r7, #4]
 80076cc:	6039      	str	r1, [r7, #0]
 80076ce:	687b      	ldr	r3, [r7, #4]
 80076d0:	2b00      	cmp	r3, #0
 80076d2:	d101      	bne.n	80076d8 <HAL_TIM_Encoder_Init+0x14>
 80076d4:	2301      	movs	r3, #1
 80076d6:	e08f      	b.n	80077f8 <HAL_TIM_Encoder_Init+0x134>
 80076d8:	687b      	ldr	r3, [r7, #4]
 80076da:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80076de:	b2db      	uxtb	r3, r3
 80076e0:	2b00      	cmp	r3, #0
 80076e2:	d106      	bne.n	80076f2 <HAL_TIM_Encoder_Init+0x2e>
 80076e4:	687b      	ldr	r3, [r7, #4]
 80076e6:	2200      	movs	r2, #0
 80076e8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80076ec:	6878      	ldr	r0, [r7, #4]
 80076ee:	f7fb fd6b 	bl	80031c8 <HAL_TIM_Encoder_MspInit>
 80076f2:	687b      	ldr	r3, [r7, #4]
 80076f4:	2202      	movs	r2, #2
 80076f6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80076fa:	687b      	ldr	r3, [r7, #4]
 80076fc:	681b      	ldr	r3, [r3, #0]
 80076fe:	6899      	ldr	r1, [r3, #8]
 8007700:	687b      	ldr	r3, [r7, #4]
 8007702:	681a      	ldr	r2, [r3, #0]
 8007704:	4b3e      	ldr	r3, [pc, #248]	; (8007800 <HAL_TIM_Encoder_Init+0x13c>)
 8007706:	400b      	ands	r3, r1
 8007708:	6093      	str	r3, [r2, #8]
 800770a:	687b      	ldr	r3, [r7, #4]
 800770c:	681a      	ldr	r2, [r3, #0]
 800770e:	687b      	ldr	r3, [r7, #4]
 8007710:	3304      	adds	r3, #4
 8007712:	4619      	mov	r1, r3
 8007714:	4610      	mov	r0, r2
 8007716:	f000 fba1 	bl	8007e5c <TIM_Base_SetConfig>
 800771a:	687b      	ldr	r3, [r7, #4]
 800771c:	681b      	ldr	r3, [r3, #0]
 800771e:	689b      	ldr	r3, [r3, #8]
 8007720:	617b      	str	r3, [r7, #20]
 8007722:	687b      	ldr	r3, [r7, #4]
 8007724:	681b      	ldr	r3, [r3, #0]
 8007726:	699b      	ldr	r3, [r3, #24]
 8007728:	613b      	str	r3, [r7, #16]
 800772a:	687b      	ldr	r3, [r7, #4]
 800772c:	681b      	ldr	r3, [r3, #0]
 800772e:	6a1b      	ldr	r3, [r3, #32]
 8007730:	60fb      	str	r3, [r7, #12]
 8007732:	683b      	ldr	r3, [r7, #0]
 8007734:	681b      	ldr	r3, [r3, #0]
 8007736:	697a      	ldr	r2, [r7, #20]
 8007738:	4313      	orrs	r3, r2
 800773a:	617b      	str	r3, [r7, #20]
 800773c:	693a      	ldr	r2, [r7, #16]
 800773e:	4b31      	ldr	r3, [pc, #196]	; (8007804 <HAL_TIM_Encoder_Init+0x140>)
 8007740:	4013      	ands	r3, r2
 8007742:	613b      	str	r3, [r7, #16]
 8007744:	683b      	ldr	r3, [r7, #0]
 8007746:	689a      	ldr	r2, [r3, #8]
 8007748:	683b      	ldr	r3, [r7, #0]
 800774a:	699b      	ldr	r3, [r3, #24]
 800774c:	021b      	lsls	r3, r3, #8
 800774e:	4313      	orrs	r3, r2
 8007750:	693a      	ldr	r2, [r7, #16]
 8007752:	4313      	orrs	r3, r2
 8007754:	613b      	str	r3, [r7, #16]
 8007756:	693a      	ldr	r2, [r7, #16]
 8007758:	4b2b      	ldr	r3, [pc, #172]	; (8007808 <HAL_TIM_Encoder_Init+0x144>)
 800775a:	4013      	ands	r3, r2
 800775c:	613b      	str	r3, [r7, #16]
 800775e:	693a      	ldr	r2, [r7, #16]
 8007760:	4b2a      	ldr	r3, [pc, #168]	; (800780c <HAL_TIM_Encoder_Init+0x148>)
 8007762:	4013      	ands	r3, r2
 8007764:	613b      	str	r3, [r7, #16]
 8007766:	683b      	ldr	r3, [r7, #0]
 8007768:	68da      	ldr	r2, [r3, #12]
 800776a:	683b      	ldr	r3, [r7, #0]
 800776c:	69db      	ldr	r3, [r3, #28]
 800776e:	021b      	lsls	r3, r3, #8
 8007770:	4313      	orrs	r3, r2
 8007772:	693a      	ldr	r2, [r7, #16]
 8007774:	4313      	orrs	r3, r2
 8007776:	613b      	str	r3, [r7, #16]
 8007778:	683b      	ldr	r3, [r7, #0]
 800777a:	691b      	ldr	r3, [r3, #16]
 800777c:	011a      	lsls	r2, r3, #4
 800777e:	683b      	ldr	r3, [r7, #0]
 8007780:	6a1b      	ldr	r3, [r3, #32]
 8007782:	031b      	lsls	r3, r3, #12
 8007784:	4313      	orrs	r3, r2
 8007786:	693a      	ldr	r2, [r7, #16]
 8007788:	4313      	orrs	r3, r2
 800778a:	613b      	str	r3, [r7, #16]
 800778c:	68fb      	ldr	r3, [r7, #12]
 800778e:	f023 0322 	bic.w	r3, r3, #34	; 0x22
 8007792:	60fb      	str	r3, [r7, #12]
 8007794:	68fb      	ldr	r3, [r7, #12]
 8007796:	f023 0388 	bic.w	r3, r3, #136	; 0x88
 800779a:	60fb      	str	r3, [r7, #12]
 800779c:	683b      	ldr	r3, [r7, #0]
 800779e:	685a      	ldr	r2, [r3, #4]
 80077a0:	683b      	ldr	r3, [r7, #0]
 80077a2:	695b      	ldr	r3, [r3, #20]
 80077a4:	011b      	lsls	r3, r3, #4
 80077a6:	4313      	orrs	r3, r2
 80077a8:	68fa      	ldr	r2, [r7, #12]
 80077aa:	4313      	orrs	r3, r2
 80077ac:	60fb      	str	r3, [r7, #12]
 80077ae:	687b      	ldr	r3, [r7, #4]
 80077b0:	681b      	ldr	r3, [r3, #0]
 80077b2:	697a      	ldr	r2, [r7, #20]
 80077b4:	609a      	str	r2, [r3, #8]
 80077b6:	687b      	ldr	r3, [r7, #4]
 80077b8:	681b      	ldr	r3, [r3, #0]
 80077ba:	693a      	ldr	r2, [r7, #16]
 80077bc:	619a      	str	r2, [r3, #24]
 80077be:	687b      	ldr	r3, [r7, #4]
 80077c0:	681b      	ldr	r3, [r3, #0]
 80077c2:	68fa      	ldr	r2, [r7, #12]
 80077c4:	621a      	str	r2, [r3, #32]
 80077c6:	687b      	ldr	r3, [r7, #4]
 80077c8:	2201      	movs	r2, #1
 80077ca:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 80077ce:	687b      	ldr	r3, [r7, #4]
 80077d0:	2201      	movs	r2, #1
 80077d2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80077d6:	687b      	ldr	r3, [r7, #4]
 80077d8:	2201      	movs	r2, #1
 80077da:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80077de:	687b      	ldr	r3, [r7, #4]
 80077e0:	2201      	movs	r2, #1
 80077e2:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80077e6:	687b      	ldr	r3, [r7, #4]
 80077e8:	2201      	movs	r2, #1
 80077ea:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80077ee:	687b      	ldr	r3, [r7, #4]
 80077f0:	2201      	movs	r2, #1
 80077f2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80077f6:	2300      	movs	r3, #0
 80077f8:	4618      	mov	r0, r3
 80077fa:	3718      	adds	r7, #24
 80077fc:	46bd      	mov	sp, r7
 80077fe:	bd80      	pop	{r7, pc}
 8007800:	fffebff8 	.word	0xfffebff8
 8007804:	fffffcfc 	.word	0xfffffcfc
 8007808:	fffff3f3 	.word	0xfffff3f3
 800780c:	ffff0f0f 	.word	0xffff0f0f

08007810 <HAL_TIM_IRQHandler>:
 8007810:	b580      	push	{r7, lr}
 8007812:	b082      	sub	sp, #8
 8007814:	af00      	add	r7, sp, #0
 8007816:	6078      	str	r0, [r7, #4]
 8007818:	687b      	ldr	r3, [r7, #4]
 800781a:	681b      	ldr	r3, [r3, #0]
 800781c:	691b      	ldr	r3, [r3, #16]
 800781e:	f003 0302 	and.w	r3, r3, #2
 8007822:	2b02      	cmp	r3, #2
 8007824:	d122      	bne.n	800786c <HAL_TIM_IRQHandler+0x5c>
 8007826:	687b      	ldr	r3, [r7, #4]
 8007828:	681b      	ldr	r3, [r3, #0]
 800782a:	68db      	ldr	r3, [r3, #12]
 800782c:	f003 0302 	and.w	r3, r3, #2
 8007830:	2b02      	cmp	r3, #2
 8007832:	d11b      	bne.n	800786c <HAL_TIM_IRQHandler+0x5c>
 8007834:	687b      	ldr	r3, [r7, #4]
 8007836:	681b      	ldr	r3, [r3, #0]
 8007838:	f06f 0202 	mvn.w	r2, #2
 800783c:	611a      	str	r2, [r3, #16]
 800783e:	687b      	ldr	r3, [r7, #4]
 8007840:	2201      	movs	r2, #1
 8007842:	771a      	strb	r2, [r3, #28]
 8007844:	687b      	ldr	r3, [r7, #4]
 8007846:	681b      	ldr	r3, [r3, #0]
 8007848:	699b      	ldr	r3, [r3, #24]
 800784a:	f003 0303 	and.w	r3, r3, #3
 800784e:	2b00      	cmp	r3, #0
 8007850:	d003      	beq.n	800785a <HAL_TIM_IRQHandler+0x4a>
 8007852:	6878      	ldr	r0, [r7, #4]
 8007854:	f000 fae4 	bl	8007e20 <HAL_TIM_IC_CaptureCallback>
 8007858:	e005      	b.n	8007866 <HAL_TIM_IRQHandler+0x56>
 800785a:	6878      	ldr	r0, [r7, #4]
 800785c:	f000 fad6 	bl	8007e0c <HAL_TIM_OC_DelayElapsedCallback>
 8007860:	6878      	ldr	r0, [r7, #4]
 8007862:	f000 fae7 	bl	8007e34 <HAL_TIM_PWM_PulseFinishedCallback>
 8007866:	687b      	ldr	r3, [r7, #4]
 8007868:	2200      	movs	r2, #0
 800786a:	771a      	strb	r2, [r3, #28]
 800786c:	687b      	ldr	r3, [r7, #4]
 800786e:	681b      	ldr	r3, [r3, #0]
 8007870:	691b      	ldr	r3, [r3, #16]
 8007872:	f003 0304 	and.w	r3, r3, #4
 8007876:	2b04      	cmp	r3, #4
 8007878:	d122      	bne.n	80078c0 <HAL_TIM_IRQHandler+0xb0>
 800787a:	687b      	ldr	r3, [r7, #4]
 800787c:	681b      	ldr	r3, [r3, #0]
 800787e:	68db      	ldr	r3, [r3, #12]
 8007880:	f003 0304 	and.w	r3, r3, #4
 8007884:	2b04      	cmp	r3, #4
 8007886:	d11b      	bne.n	80078c0 <HAL_TIM_IRQHandler+0xb0>
 8007888:	687b      	ldr	r3, [r7, #4]
 800788a:	681b      	ldr	r3, [r3, #0]
 800788c:	f06f 0204 	mvn.w	r2, #4
 8007890:	611a      	str	r2, [r3, #16]
 8007892:	687b      	ldr	r3, [r7, #4]
 8007894:	2202      	movs	r2, #2
 8007896:	771a      	strb	r2, [r3, #28]
 8007898:	687b      	ldr	r3, [r7, #4]
 800789a:	681b      	ldr	r3, [r3, #0]
 800789c:	699b      	ldr	r3, [r3, #24]
 800789e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80078a2:	2b00      	cmp	r3, #0
 80078a4:	d003      	beq.n	80078ae <HAL_TIM_IRQHandler+0x9e>
 80078a6:	6878      	ldr	r0, [r7, #4]
 80078a8:	f000 faba 	bl	8007e20 <HAL_TIM_IC_CaptureCallback>
 80078ac:	e005      	b.n	80078ba <HAL_TIM_IRQHandler+0xaa>
 80078ae:	6878      	ldr	r0, [r7, #4]
 80078b0:	f000 faac 	bl	8007e0c <HAL_TIM_OC_DelayElapsedCallback>
 80078b4:	6878      	ldr	r0, [r7, #4]
 80078b6:	f000 fabd 	bl	8007e34 <HAL_TIM_PWM_PulseFinishedCallback>
 80078ba:	687b      	ldr	r3, [r7, #4]
 80078bc:	2200      	movs	r2, #0
 80078be:	771a      	strb	r2, [r3, #28]
 80078c0:	687b      	ldr	r3, [r7, #4]
 80078c2:	681b      	ldr	r3, [r3, #0]
 80078c4:	691b      	ldr	r3, [r3, #16]
 80078c6:	f003 0308 	and.w	r3, r3, #8
 80078ca:	2b08      	cmp	r3, #8
 80078cc:	d122      	bne.n	8007914 <HAL_TIM_IRQHandler+0x104>
 80078ce:	687b      	ldr	r3, [r7, #4]
 80078d0:	681b      	ldr	r3, [r3, #0]
 80078d2:	68db      	ldr	r3, [r3, #12]
 80078d4:	f003 0308 	and.w	r3, r3, #8
 80078d8:	2b08      	cmp	r3, #8
 80078da:	d11b      	bne.n	8007914 <HAL_TIM_IRQHandler+0x104>
 80078dc:	687b      	ldr	r3, [r7, #4]
 80078de:	681b      	ldr	r3, [r3, #0]
 80078e0:	f06f 0208 	mvn.w	r2, #8
 80078e4:	611a      	str	r2, [r3, #16]
 80078e6:	687b      	ldr	r3, [r7, #4]
 80078e8:	2204      	movs	r2, #4
 80078ea:	771a      	strb	r2, [r3, #28]
 80078ec:	687b      	ldr	r3, [r7, #4]
 80078ee:	681b      	ldr	r3, [r3, #0]
 80078f0:	69db      	ldr	r3, [r3, #28]
 80078f2:	f003 0303 	and.w	r3, r3, #3
 80078f6:	2b00      	cmp	r3, #0
 80078f8:	d003      	beq.n	8007902 <HAL_TIM_IRQHandler+0xf2>
 80078fa:	6878      	ldr	r0, [r7, #4]
 80078fc:	f000 fa90 	bl	8007e20 <HAL_TIM_IC_CaptureCallback>
 8007900:	e005      	b.n	800790e <HAL_TIM_IRQHandler+0xfe>
 8007902:	6878      	ldr	r0, [r7, #4]
 8007904:	f000 fa82 	bl	8007e0c <HAL_TIM_OC_DelayElapsedCallback>
 8007908:	6878      	ldr	r0, [r7, #4]
 800790a:	f000 fa93 	bl	8007e34 <HAL_TIM_PWM_PulseFinishedCallback>
 800790e:	687b      	ldr	r3, [r7, #4]
 8007910:	2200      	movs	r2, #0
 8007912:	771a      	strb	r2, [r3, #28]
 8007914:	687b      	ldr	r3, [r7, #4]
 8007916:	681b      	ldr	r3, [r3, #0]
 8007918:	691b      	ldr	r3, [r3, #16]
 800791a:	f003 0310 	and.w	r3, r3, #16
 800791e:	2b10      	cmp	r3, #16
 8007920:	d122      	bne.n	8007968 <HAL_TIM_IRQHandler+0x158>
 8007922:	687b      	ldr	r3, [r7, #4]
 8007924:	681b      	ldr	r3, [r3, #0]
 8007926:	68db      	ldr	r3, [r3, #12]
 8007928:	f003 0310 	and.w	r3, r3, #16
 800792c:	2b10      	cmp	r3, #16
 800792e:	d11b      	bne.n	8007968 <HAL_TIM_IRQHandler+0x158>
 8007930:	687b      	ldr	r3, [r7, #4]
 8007932:	681b      	ldr	r3, [r3, #0]
 8007934:	f06f 0210 	mvn.w	r2, #16
 8007938:	611a      	str	r2, [r3, #16]
 800793a:	687b      	ldr	r3, [r7, #4]
 800793c:	2208      	movs	r2, #8
 800793e:	771a      	strb	r2, [r3, #28]
 8007940:	687b      	ldr	r3, [r7, #4]
 8007942:	681b      	ldr	r3, [r3, #0]
 8007944:	69db      	ldr	r3, [r3, #28]
 8007946:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800794a:	2b00      	cmp	r3, #0
 800794c:	d003      	beq.n	8007956 <HAL_TIM_IRQHandler+0x146>
 800794e:	6878      	ldr	r0, [r7, #4]
 8007950:	f000 fa66 	bl	8007e20 <HAL_TIM_IC_CaptureCallback>
 8007954:	e005      	b.n	8007962 <HAL_TIM_IRQHandler+0x152>
 8007956:	6878      	ldr	r0, [r7, #4]
 8007958:	f000 fa58 	bl	8007e0c <HAL_TIM_OC_DelayElapsedCallback>
 800795c:	6878      	ldr	r0, [r7, #4]
 800795e:	f000 fa69 	bl	8007e34 <HAL_TIM_PWM_PulseFinishedCallback>
 8007962:	687b      	ldr	r3, [r7, #4]
 8007964:	2200      	movs	r2, #0
 8007966:	771a      	strb	r2, [r3, #28]
 8007968:	687b      	ldr	r3, [r7, #4]
 800796a:	681b      	ldr	r3, [r3, #0]
 800796c:	691b      	ldr	r3, [r3, #16]
 800796e:	f003 0301 	and.w	r3, r3, #1
 8007972:	2b01      	cmp	r3, #1
 8007974:	d10e      	bne.n	8007994 <HAL_TIM_IRQHandler+0x184>
 8007976:	687b      	ldr	r3, [r7, #4]
 8007978:	681b      	ldr	r3, [r3, #0]
 800797a:	68db      	ldr	r3, [r3, #12]
 800797c:	f003 0301 	and.w	r3, r3, #1
 8007980:	2b01      	cmp	r3, #1
 8007982:	d107      	bne.n	8007994 <HAL_TIM_IRQHandler+0x184>
 8007984:	687b      	ldr	r3, [r7, #4]
 8007986:	681b      	ldr	r3, [r3, #0]
 8007988:	f06f 0201 	mvn.w	r2, #1
 800798c:	611a      	str	r2, [r3, #16]
 800798e:	6878      	ldr	r0, [r7, #4]
 8007990:	f7fa fe32 	bl	80025f8 <HAL_TIM_PeriodElapsedCallback>
 8007994:	687b      	ldr	r3, [r7, #4]
 8007996:	681b      	ldr	r3, [r3, #0]
 8007998:	691b      	ldr	r3, [r3, #16]
 800799a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800799e:	2b80      	cmp	r3, #128	; 0x80
 80079a0:	d10e      	bne.n	80079c0 <HAL_TIM_IRQHandler+0x1b0>
 80079a2:	687b      	ldr	r3, [r7, #4]
 80079a4:	681b      	ldr	r3, [r3, #0]
 80079a6:	68db      	ldr	r3, [r3, #12]
 80079a8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80079ac:	2b80      	cmp	r3, #128	; 0x80
 80079ae:	d107      	bne.n	80079c0 <HAL_TIM_IRQHandler+0x1b0>
 80079b0:	687b      	ldr	r3, [r7, #4]
 80079b2:	681b      	ldr	r3, [r3, #0]
 80079b4:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80079b8:	611a      	str	r2, [r3, #16]
 80079ba:	6878      	ldr	r0, [r7, #4]
 80079bc:	f000 fea4 	bl	8008708 <HAL_TIMEx_BreakCallback>
 80079c0:	687b      	ldr	r3, [r7, #4]
 80079c2:	681b      	ldr	r3, [r3, #0]
 80079c4:	691b      	ldr	r3, [r3, #16]
 80079c6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80079ca:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80079ce:	d10e      	bne.n	80079ee <HAL_TIM_IRQHandler+0x1de>
 80079d0:	687b      	ldr	r3, [r7, #4]
 80079d2:	681b      	ldr	r3, [r3, #0]
 80079d4:	68db      	ldr	r3, [r3, #12]
 80079d6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80079da:	2b80      	cmp	r3, #128	; 0x80
 80079dc:	d107      	bne.n	80079ee <HAL_TIM_IRQHandler+0x1de>
 80079de:	687b      	ldr	r3, [r7, #4]
 80079e0:	681b      	ldr	r3, [r3, #0]
 80079e2:	f46f 7280 	mvn.w	r2, #256	; 0x100
 80079e6:	611a      	str	r2, [r3, #16]
 80079e8:	6878      	ldr	r0, [r7, #4]
 80079ea:	f000 fe97 	bl	800871c <HAL_TIMEx_Break2Callback>
 80079ee:	687b      	ldr	r3, [r7, #4]
 80079f0:	681b      	ldr	r3, [r3, #0]
 80079f2:	691b      	ldr	r3, [r3, #16]
 80079f4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80079f8:	2b40      	cmp	r3, #64	; 0x40
 80079fa:	d10e      	bne.n	8007a1a <HAL_TIM_IRQHandler+0x20a>
 80079fc:	687b      	ldr	r3, [r7, #4]
 80079fe:	681b      	ldr	r3, [r3, #0]
 8007a00:	68db      	ldr	r3, [r3, #12]
 8007a02:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007a06:	2b40      	cmp	r3, #64	; 0x40
 8007a08:	d107      	bne.n	8007a1a <HAL_TIM_IRQHandler+0x20a>
 8007a0a:	687b      	ldr	r3, [r7, #4]
 8007a0c:	681b      	ldr	r3, [r3, #0]
 8007a0e:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8007a12:	611a      	str	r2, [r3, #16]
 8007a14:	6878      	ldr	r0, [r7, #4]
 8007a16:	f000 fa17 	bl	8007e48 <HAL_TIM_TriggerCallback>
 8007a1a:	687b      	ldr	r3, [r7, #4]
 8007a1c:	681b      	ldr	r3, [r3, #0]
 8007a1e:	691b      	ldr	r3, [r3, #16]
 8007a20:	f003 0320 	and.w	r3, r3, #32
 8007a24:	2b20      	cmp	r3, #32
 8007a26:	d10e      	bne.n	8007a46 <HAL_TIM_IRQHandler+0x236>
 8007a28:	687b      	ldr	r3, [r7, #4]
 8007a2a:	681b      	ldr	r3, [r3, #0]
 8007a2c:	68db      	ldr	r3, [r3, #12]
 8007a2e:	f003 0320 	and.w	r3, r3, #32
 8007a32:	2b20      	cmp	r3, #32
 8007a34:	d107      	bne.n	8007a46 <HAL_TIM_IRQHandler+0x236>
 8007a36:	687b      	ldr	r3, [r7, #4]
 8007a38:	681b      	ldr	r3, [r3, #0]
 8007a3a:	f06f 0220 	mvn.w	r2, #32
 8007a3e:	611a      	str	r2, [r3, #16]
 8007a40:	6878      	ldr	r0, [r7, #4]
 8007a42:	f000 fe57 	bl	80086f4 <HAL_TIMEx_CommutCallback>
 8007a46:	bf00      	nop
 8007a48:	3708      	adds	r7, #8
 8007a4a:	46bd      	mov	sp, r7
 8007a4c:	bd80      	pop	{r7, pc}
	...

08007a50 <HAL_TIM_PWM_ConfigChannel>:
 8007a50:	b580      	push	{r7, lr}
 8007a52:	b086      	sub	sp, #24
 8007a54:	af00      	add	r7, sp, #0
 8007a56:	60f8      	str	r0, [r7, #12]
 8007a58:	60b9      	str	r1, [r7, #8]
 8007a5a:	607a      	str	r2, [r7, #4]
 8007a5c:	2300      	movs	r3, #0
 8007a5e:	75fb      	strb	r3, [r7, #23]
 8007a60:	68fb      	ldr	r3, [r7, #12]
 8007a62:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007a66:	2b01      	cmp	r3, #1
 8007a68:	d101      	bne.n	8007a6e <HAL_TIM_PWM_ConfigChannel+0x1e>
 8007a6a:	2302      	movs	r3, #2
 8007a6c:	e0ff      	b.n	8007c6e <HAL_TIM_PWM_ConfigChannel+0x21e>
 8007a6e:	68fb      	ldr	r3, [r7, #12]
 8007a70:	2201      	movs	r2, #1
 8007a72:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007a76:	687b      	ldr	r3, [r7, #4]
 8007a78:	2b14      	cmp	r3, #20
 8007a7a:	f200 80f0 	bhi.w	8007c5e <HAL_TIM_PWM_ConfigChannel+0x20e>
 8007a7e:	a201      	add	r2, pc, #4	; (adr r2, 8007a84 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8007a80:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007a84:	08007ad9 	.word	0x08007ad9
 8007a88:	08007c5f 	.word	0x08007c5f
 8007a8c:	08007c5f 	.word	0x08007c5f
 8007a90:	08007c5f 	.word	0x08007c5f
 8007a94:	08007b19 	.word	0x08007b19
 8007a98:	08007c5f 	.word	0x08007c5f
 8007a9c:	08007c5f 	.word	0x08007c5f
 8007aa0:	08007c5f 	.word	0x08007c5f
 8007aa4:	08007b5b 	.word	0x08007b5b
 8007aa8:	08007c5f 	.word	0x08007c5f
 8007aac:	08007c5f 	.word	0x08007c5f
 8007ab0:	08007c5f 	.word	0x08007c5f
 8007ab4:	08007b9b 	.word	0x08007b9b
 8007ab8:	08007c5f 	.word	0x08007c5f
 8007abc:	08007c5f 	.word	0x08007c5f
 8007ac0:	08007c5f 	.word	0x08007c5f
 8007ac4:	08007bdd 	.word	0x08007bdd
 8007ac8:	08007c5f 	.word	0x08007c5f
 8007acc:	08007c5f 	.word	0x08007c5f
 8007ad0:	08007c5f 	.word	0x08007c5f
 8007ad4:	08007c1d 	.word	0x08007c1d
 8007ad8:	68fb      	ldr	r3, [r7, #12]
 8007ada:	681b      	ldr	r3, [r3, #0]
 8007adc:	68b9      	ldr	r1, [r7, #8]
 8007ade:	4618      	mov	r0, r3
 8007ae0:	f000 fa5c 	bl	8007f9c <TIM_OC1_SetConfig>
 8007ae4:	68fb      	ldr	r3, [r7, #12]
 8007ae6:	681b      	ldr	r3, [r3, #0]
 8007ae8:	699a      	ldr	r2, [r3, #24]
 8007aea:	68fb      	ldr	r3, [r7, #12]
 8007aec:	681b      	ldr	r3, [r3, #0]
 8007aee:	f042 0208 	orr.w	r2, r2, #8
 8007af2:	619a      	str	r2, [r3, #24]
 8007af4:	68fb      	ldr	r3, [r7, #12]
 8007af6:	681b      	ldr	r3, [r3, #0]
 8007af8:	699a      	ldr	r2, [r3, #24]
 8007afa:	68fb      	ldr	r3, [r7, #12]
 8007afc:	681b      	ldr	r3, [r3, #0]
 8007afe:	f022 0204 	bic.w	r2, r2, #4
 8007b02:	619a      	str	r2, [r3, #24]
 8007b04:	68fb      	ldr	r3, [r7, #12]
 8007b06:	681b      	ldr	r3, [r3, #0]
 8007b08:	6999      	ldr	r1, [r3, #24]
 8007b0a:	68bb      	ldr	r3, [r7, #8]
 8007b0c:	691a      	ldr	r2, [r3, #16]
 8007b0e:	68fb      	ldr	r3, [r7, #12]
 8007b10:	681b      	ldr	r3, [r3, #0]
 8007b12:	430a      	orrs	r2, r1
 8007b14:	619a      	str	r2, [r3, #24]
 8007b16:	e0a5      	b.n	8007c64 <HAL_TIM_PWM_ConfigChannel+0x214>
 8007b18:	68fb      	ldr	r3, [r7, #12]
 8007b1a:	681b      	ldr	r3, [r3, #0]
 8007b1c:	68b9      	ldr	r1, [r7, #8]
 8007b1e:	4618      	mov	r0, r3
 8007b20:	f000 faae 	bl	8008080 <TIM_OC2_SetConfig>
 8007b24:	68fb      	ldr	r3, [r7, #12]
 8007b26:	681b      	ldr	r3, [r3, #0]
 8007b28:	699a      	ldr	r2, [r3, #24]
 8007b2a:	68fb      	ldr	r3, [r7, #12]
 8007b2c:	681b      	ldr	r3, [r3, #0]
 8007b2e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8007b32:	619a      	str	r2, [r3, #24]
 8007b34:	68fb      	ldr	r3, [r7, #12]
 8007b36:	681b      	ldr	r3, [r3, #0]
 8007b38:	699a      	ldr	r2, [r3, #24]
 8007b3a:	68fb      	ldr	r3, [r7, #12]
 8007b3c:	681b      	ldr	r3, [r3, #0]
 8007b3e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007b42:	619a      	str	r2, [r3, #24]
 8007b44:	68fb      	ldr	r3, [r7, #12]
 8007b46:	681b      	ldr	r3, [r3, #0]
 8007b48:	6999      	ldr	r1, [r3, #24]
 8007b4a:	68bb      	ldr	r3, [r7, #8]
 8007b4c:	691b      	ldr	r3, [r3, #16]
 8007b4e:	021a      	lsls	r2, r3, #8
 8007b50:	68fb      	ldr	r3, [r7, #12]
 8007b52:	681b      	ldr	r3, [r3, #0]
 8007b54:	430a      	orrs	r2, r1
 8007b56:	619a      	str	r2, [r3, #24]
 8007b58:	e084      	b.n	8007c64 <HAL_TIM_PWM_ConfigChannel+0x214>
 8007b5a:	68fb      	ldr	r3, [r7, #12]
 8007b5c:	681b      	ldr	r3, [r3, #0]
 8007b5e:	68b9      	ldr	r1, [r7, #8]
 8007b60:	4618      	mov	r0, r3
 8007b62:	f000 fb05 	bl	8008170 <TIM_OC3_SetConfig>
 8007b66:	68fb      	ldr	r3, [r7, #12]
 8007b68:	681b      	ldr	r3, [r3, #0]
 8007b6a:	69da      	ldr	r2, [r3, #28]
 8007b6c:	68fb      	ldr	r3, [r7, #12]
 8007b6e:	681b      	ldr	r3, [r3, #0]
 8007b70:	f042 0208 	orr.w	r2, r2, #8
 8007b74:	61da      	str	r2, [r3, #28]
 8007b76:	68fb      	ldr	r3, [r7, #12]
 8007b78:	681b      	ldr	r3, [r3, #0]
 8007b7a:	69da      	ldr	r2, [r3, #28]
 8007b7c:	68fb      	ldr	r3, [r7, #12]
 8007b7e:	681b      	ldr	r3, [r3, #0]
 8007b80:	f022 0204 	bic.w	r2, r2, #4
 8007b84:	61da      	str	r2, [r3, #28]
 8007b86:	68fb      	ldr	r3, [r7, #12]
 8007b88:	681b      	ldr	r3, [r3, #0]
 8007b8a:	69d9      	ldr	r1, [r3, #28]
 8007b8c:	68bb      	ldr	r3, [r7, #8]
 8007b8e:	691a      	ldr	r2, [r3, #16]
 8007b90:	68fb      	ldr	r3, [r7, #12]
 8007b92:	681b      	ldr	r3, [r3, #0]
 8007b94:	430a      	orrs	r2, r1
 8007b96:	61da      	str	r2, [r3, #28]
 8007b98:	e064      	b.n	8007c64 <HAL_TIM_PWM_ConfigChannel+0x214>
 8007b9a:	68fb      	ldr	r3, [r7, #12]
 8007b9c:	681b      	ldr	r3, [r3, #0]
 8007b9e:	68b9      	ldr	r1, [r7, #8]
 8007ba0:	4618      	mov	r0, r3
 8007ba2:	f000 fb5b 	bl	800825c <TIM_OC4_SetConfig>
 8007ba6:	68fb      	ldr	r3, [r7, #12]
 8007ba8:	681b      	ldr	r3, [r3, #0]
 8007baa:	69da      	ldr	r2, [r3, #28]
 8007bac:	68fb      	ldr	r3, [r7, #12]
 8007bae:	681b      	ldr	r3, [r3, #0]
 8007bb0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8007bb4:	61da      	str	r2, [r3, #28]
 8007bb6:	68fb      	ldr	r3, [r7, #12]
 8007bb8:	681b      	ldr	r3, [r3, #0]
 8007bba:	69da      	ldr	r2, [r3, #28]
 8007bbc:	68fb      	ldr	r3, [r7, #12]
 8007bbe:	681b      	ldr	r3, [r3, #0]
 8007bc0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007bc4:	61da      	str	r2, [r3, #28]
 8007bc6:	68fb      	ldr	r3, [r7, #12]
 8007bc8:	681b      	ldr	r3, [r3, #0]
 8007bca:	69d9      	ldr	r1, [r3, #28]
 8007bcc:	68bb      	ldr	r3, [r7, #8]
 8007bce:	691b      	ldr	r3, [r3, #16]
 8007bd0:	021a      	lsls	r2, r3, #8
 8007bd2:	68fb      	ldr	r3, [r7, #12]
 8007bd4:	681b      	ldr	r3, [r3, #0]
 8007bd6:	430a      	orrs	r2, r1
 8007bd8:	61da      	str	r2, [r3, #28]
 8007bda:	e043      	b.n	8007c64 <HAL_TIM_PWM_ConfigChannel+0x214>
 8007bdc:	68fb      	ldr	r3, [r7, #12]
 8007bde:	681b      	ldr	r3, [r3, #0]
 8007be0:	68b9      	ldr	r1, [r7, #8]
 8007be2:	4618      	mov	r0, r3
 8007be4:	f000 fb92 	bl	800830c <TIM_OC5_SetConfig>
 8007be8:	68fb      	ldr	r3, [r7, #12]
 8007bea:	681b      	ldr	r3, [r3, #0]
 8007bec:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 8007bee:	68fb      	ldr	r3, [r7, #12]
 8007bf0:	681b      	ldr	r3, [r3, #0]
 8007bf2:	f042 0208 	orr.w	r2, r2, #8
 8007bf6:	655a      	str	r2, [r3, #84]	; 0x54
 8007bf8:	68fb      	ldr	r3, [r7, #12]
 8007bfa:	681b      	ldr	r3, [r3, #0]
 8007bfc:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 8007bfe:	68fb      	ldr	r3, [r7, #12]
 8007c00:	681b      	ldr	r3, [r3, #0]
 8007c02:	f022 0204 	bic.w	r2, r2, #4
 8007c06:	655a      	str	r2, [r3, #84]	; 0x54
 8007c08:	68fb      	ldr	r3, [r7, #12]
 8007c0a:	681b      	ldr	r3, [r3, #0]
 8007c0c:	6d59      	ldr	r1, [r3, #84]	; 0x54
 8007c0e:	68bb      	ldr	r3, [r7, #8]
 8007c10:	691a      	ldr	r2, [r3, #16]
 8007c12:	68fb      	ldr	r3, [r7, #12]
 8007c14:	681b      	ldr	r3, [r3, #0]
 8007c16:	430a      	orrs	r2, r1
 8007c18:	655a      	str	r2, [r3, #84]	; 0x54
 8007c1a:	e023      	b.n	8007c64 <HAL_TIM_PWM_ConfigChannel+0x214>
 8007c1c:	68fb      	ldr	r3, [r7, #12]
 8007c1e:	681b      	ldr	r3, [r3, #0]
 8007c20:	68b9      	ldr	r1, [r7, #8]
 8007c22:	4618      	mov	r0, r3
 8007c24:	f000 fbc4 	bl	80083b0 <TIM_OC6_SetConfig>
 8007c28:	68fb      	ldr	r3, [r7, #12]
 8007c2a:	681b      	ldr	r3, [r3, #0]
 8007c2c:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 8007c2e:	68fb      	ldr	r3, [r7, #12]
 8007c30:	681b      	ldr	r3, [r3, #0]
 8007c32:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8007c36:	655a      	str	r2, [r3, #84]	; 0x54
 8007c38:	68fb      	ldr	r3, [r7, #12]
 8007c3a:	681b      	ldr	r3, [r3, #0]
 8007c3c:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 8007c3e:	68fb      	ldr	r3, [r7, #12]
 8007c40:	681b      	ldr	r3, [r3, #0]
 8007c42:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007c46:	655a      	str	r2, [r3, #84]	; 0x54
 8007c48:	68fb      	ldr	r3, [r7, #12]
 8007c4a:	681b      	ldr	r3, [r3, #0]
 8007c4c:	6d59      	ldr	r1, [r3, #84]	; 0x54
 8007c4e:	68bb      	ldr	r3, [r7, #8]
 8007c50:	691b      	ldr	r3, [r3, #16]
 8007c52:	021a      	lsls	r2, r3, #8
 8007c54:	68fb      	ldr	r3, [r7, #12]
 8007c56:	681b      	ldr	r3, [r3, #0]
 8007c58:	430a      	orrs	r2, r1
 8007c5a:	655a      	str	r2, [r3, #84]	; 0x54
 8007c5c:	e002      	b.n	8007c64 <HAL_TIM_PWM_ConfigChannel+0x214>
 8007c5e:	2301      	movs	r3, #1
 8007c60:	75fb      	strb	r3, [r7, #23]
 8007c62:	bf00      	nop
 8007c64:	68fb      	ldr	r3, [r7, #12]
 8007c66:	2200      	movs	r2, #0
 8007c68:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007c6c:	7dfb      	ldrb	r3, [r7, #23]
 8007c6e:	4618      	mov	r0, r3
 8007c70:	3718      	adds	r7, #24
 8007c72:	46bd      	mov	sp, r7
 8007c74:	bd80      	pop	{r7, pc}
 8007c76:	bf00      	nop

08007c78 <HAL_TIM_ConfigClockSource>:
 8007c78:	b580      	push	{r7, lr}
 8007c7a:	b084      	sub	sp, #16
 8007c7c:	af00      	add	r7, sp, #0
 8007c7e:	6078      	str	r0, [r7, #4]
 8007c80:	6039      	str	r1, [r7, #0]
 8007c82:	2300      	movs	r3, #0
 8007c84:	73fb      	strb	r3, [r7, #15]
 8007c86:	687b      	ldr	r3, [r7, #4]
 8007c88:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007c8c:	2b01      	cmp	r3, #1
 8007c8e:	d101      	bne.n	8007c94 <HAL_TIM_ConfigClockSource+0x1c>
 8007c90:	2302      	movs	r3, #2
 8007c92:	e0b4      	b.n	8007dfe <HAL_TIM_ConfigClockSource+0x186>
 8007c94:	687b      	ldr	r3, [r7, #4]
 8007c96:	2201      	movs	r2, #1
 8007c98:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007c9c:	687b      	ldr	r3, [r7, #4]
 8007c9e:	2202      	movs	r2, #2
 8007ca0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007ca4:	687b      	ldr	r3, [r7, #4]
 8007ca6:	681b      	ldr	r3, [r3, #0]
 8007ca8:	689b      	ldr	r3, [r3, #8]
 8007caa:	60bb      	str	r3, [r7, #8]
 8007cac:	68ba      	ldr	r2, [r7, #8]
 8007cae:	4b56      	ldr	r3, [pc, #344]	; (8007e08 <HAL_TIM_ConfigClockSource+0x190>)
 8007cb0:	4013      	ands	r3, r2
 8007cb2:	60bb      	str	r3, [r7, #8]
 8007cb4:	68bb      	ldr	r3, [r7, #8]
 8007cb6:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8007cba:	60bb      	str	r3, [r7, #8]
 8007cbc:	687b      	ldr	r3, [r7, #4]
 8007cbe:	681b      	ldr	r3, [r3, #0]
 8007cc0:	68ba      	ldr	r2, [r7, #8]
 8007cc2:	609a      	str	r2, [r3, #8]
 8007cc4:	683b      	ldr	r3, [r7, #0]
 8007cc6:	681b      	ldr	r3, [r3, #0]
 8007cc8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007ccc:	d03e      	beq.n	8007d4c <HAL_TIM_ConfigClockSource+0xd4>
 8007cce:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007cd2:	f200 8087 	bhi.w	8007de4 <HAL_TIM_ConfigClockSource+0x16c>
 8007cd6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007cda:	f000 8086 	beq.w	8007dea <HAL_TIM_ConfigClockSource+0x172>
 8007cde:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007ce2:	d87f      	bhi.n	8007de4 <HAL_TIM_ConfigClockSource+0x16c>
 8007ce4:	2b70      	cmp	r3, #112	; 0x70
 8007ce6:	d01a      	beq.n	8007d1e <HAL_TIM_ConfigClockSource+0xa6>
 8007ce8:	2b70      	cmp	r3, #112	; 0x70
 8007cea:	d87b      	bhi.n	8007de4 <HAL_TIM_ConfigClockSource+0x16c>
 8007cec:	2b60      	cmp	r3, #96	; 0x60
 8007cee:	d050      	beq.n	8007d92 <HAL_TIM_ConfigClockSource+0x11a>
 8007cf0:	2b60      	cmp	r3, #96	; 0x60
 8007cf2:	d877      	bhi.n	8007de4 <HAL_TIM_ConfigClockSource+0x16c>
 8007cf4:	2b50      	cmp	r3, #80	; 0x50
 8007cf6:	d03c      	beq.n	8007d72 <HAL_TIM_ConfigClockSource+0xfa>
 8007cf8:	2b50      	cmp	r3, #80	; 0x50
 8007cfa:	d873      	bhi.n	8007de4 <HAL_TIM_ConfigClockSource+0x16c>
 8007cfc:	2b40      	cmp	r3, #64	; 0x40
 8007cfe:	d058      	beq.n	8007db2 <HAL_TIM_ConfigClockSource+0x13a>
 8007d00:	2b40      	cmp	r3, #64	; 0x40
 8007d02:	d86f      	bhi.n	8007de4 <HAL_TIM_ConfigClockSource+0x16c>
 8007d04:	2b30      	cmp	r3, #48	; 0x30
 8007d06:	d064      	beq.n	8007dd2 <HAL_TIM_ConfigClockSource+0x15a>
 8007d08:	2b30      	cmp	r3, #48	; 0x30
 8007d0a:	d86b      	bhi.n	8007de4 <HAL_TIM_ConfigClockSource+0x16c>
 8007d0c:	2b20      	cmp	r3, #32
 8007d0e:	d060      	beq.n	8007dd2 <HAL_TIM_ConfigClockSource+0x15a>
 8007d10:	2b20      	cmp	r3, #32
 8007d12:	d867      	bhi.n	8007de4 <HAL_TIM_ConfigClockSource+0x16c>
 8007d14:	2b00      	cmp	r3, #0
 8007d16:	d05c      	beq.n	8007dd2 <HAL_TIM_ConfigClockSource+0x15a>
 8007d18:	2b10      	cmp	r3, #16
 8007d1a:	d05a      	beq.n	8007dd2 <HAL_TIM_ConfigClockSource+0x15a>
 8007d1c:	e062      	b.n	8007de4 <HAL_TIM_ConfigClockSource+0x16c>
 8007d1e:	687b      	ldr	r3, [r7, #4]
 8007d20:	6818      	ldr	r0, [r3, #0]
 8007d22:	683b      	ldr	r3, [r7, #0]
 8007d24:	6899      	ldr	r1, [r3, #8]
 8007d26:	683b      	ldr	r3, [r7, #0]
 8007d28:	685a      	ldr	r2, [r3, #4]
 8007d2a:	683b      	ldr	r3, [r7, #0]
 8007d2c:	68db      	ldr	r3, [r3, #12]
 8007d2e:	f000 fc0d 	bl	800854c <TIM_ETR_SetConfig>
 8007d32:	687b      	ldr	r3, [r7, #4]
 8007d34:	681b      	ldr	r3, [r3, #0]
 8007d36:	689b      	ldr	r3, [r3, #8]
 8007d38:	60bb      	str	r3, [r7, #8]
 8007d3a:	68bb      	ldr	r3, [r7, #8]
 8007d3c:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8007d40:	60bb      	str	r3, [r7, #8]
 8007d42:	687b      	ldr	r3, [r7, #4]
 8007d44:	681b      	ldr	r3, [r3, #0]
 8007d46:	68ba      	ldr	r2, [r7, #8]
 8007d48:	609a      	str	r2, [r3, #8]
 8007d4a:	e04f      	b.n	8007dec <HAL_TIM_ConfigClockSource+0x174>
 8007d4c:	687b      	ldr	r3, [r7, #4]
 8007d4e:	6818      	ldr	r0, [r3, #0]
 8007d50:	683b      	ldr	r3, [r7, #0]
 8007d52:	6899      	ldr	r1, [r3, #8]
 8007d54:	683b      	ldr	r3, [r7, #0]
 8007d56:	685a      	ldr	r2, [r3, #4]
 8007d58:	683b      	ldr	r3, [r7, #0]
 8007d5a:	68db      	ldr	r3, [r3, #12]
 8007d5c:	f000 fbf6 	bl	800854c <TIM_ETR_SetConfig>
 8007d60:	687b      	ldr	r3, [r7, #4]
 8007d62:	681b      	ldr	r3, [r3, #0]
 8007d64:	689a      	ldr	r2, [r3, #8]
 8007d66:	687b      	ldr	r3, [r7, #4]
 8007d68:	681b      	ldr	r3, [r3, #0]
 8007d6a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8007d6e:	609a      	str	r2, [r3, #8]
 8007d70:	e03c      	b.n	8007dec <HAL_TIM_ConfigClockSource+0x174>
 8007d72:	687b      	ldr	r3, [r7, #4]
 8007d74:	6818      	ldr	r0, [r3, #0]
 8007d76:	683b      	ldr	r3, [r7, #0]
 8007d78:	6859      	ldr	r1, [r3, #4]
 8007d7a:	683b      	ldr	r3, [r7, #0]
 8007d7c:	68db      	ldr	r3, [r3, #12]
 8007d7e:	461a      	mov	r2, r3
 8007d80:	f000 fb6a 	bl	8008458 <TIM_TI1_ConfigInputStage>
 8007d84:	687b      	ldr	r3, [r7, #4]
 8007d86:	681b      	ldr	r3, [r3, #0]
 8007d88:	2150      	movs	r1, #80	; 0x50
 8007d8a:	4618      	mov	r0, r3
 8007d8c:	f000 fbc3 	bl	8008516 <TIM_ITRx_SetConfig>
 8007d90:	e02c      	b.n	8007dec <HAL_TIM_ConfigClockSource+0x174>
 8007d92:	687b      	ldr	r3, [r7, #4]
 8007d94:	6818      	ldr	r0, [r3, #0]
 8007d96:	683b      	ldr	r3, [r7, #0]
 8007d98:	6859      	ldr	r1, [r3, #4]
 8007d9a:	683b      	ldr	r3, [r7, #0]
 8007d9c:	68db      	ldr	r3, [r3, #12]
 8007d9e:	461a      	mov	r2, r3
 8007da0:	f000 fb89 	bl	80084b6 <TIM_TI2_ConfigInputStage>
 8007da4:	687b      	ldr	r3, [r7, #4]
 8007da6:	681b      	ldr	r3, [r3, #0]
 8007da8:	2160      	movs	r1, #96	; 0x60
 8007daa:	4618      	mov	r0, r3
 8007dac:	f000 fbb3 	bl	8008516 <TIM_ITRx_SetConfig>
 8007db0:	e01c      	b.n	8007dec <HAL_TIM_ConfigClockSource+0x174>
 8007db2:	687b      	ldr	r3, [r7, #4]
 8007db4:	6818      	ldr	r0, [r3, #0]
 8007db6:	683b      	ldr	r3, [r7, #0]
 8007db8:	6859      	ldr	r1, [r3, #4]
 8007dba:	683b      	ldr	r3, [r7, #0]
 8007dbc:	68db      	ldr	r3, [r3, #12]
 8007dbe:	461a      	mov	r2, r3
 8007dc0:	f000 fb4a 	bl	8008458 <TIM_TI1_ConfigInputStage>
 8007dc4:	687b      	ldr	r3, [r7, #4]
 8007dc6:	681b      	ldr	r3, [r3, #0]
 8007dc8:	2140      	movs	r1, #64	; 0x40
 8007dca:	4618      	mov	r0, r3
 8007dcc:	f000 fba3 	bl	8008516 <TIM_ITRx_SetConfig>
 8007dd0:	e00c      	b.n	8007dec <HAL_TIM_ConfigClockSource+0x174>
 8007dd2:	687b      	ldr	r3, [r7, #4]
 8007dd4:	681a      	ldr	r2, [r3, #0]
 8007dd6:	683b      	ldr	r3, [r7, #0]
 8007dd8:	681b      	ldr	r3, [r3, #0]
 8007dda:	4619      	mov	r1, r3
 8007ddc:	4610      	mov	r0, r2
 8007dde:	f000 fb9a 	bl	8008516 <TIM_ITRx_SetConfig>
 8007de2:	e003      	b.n	8007dec <HAL_TIM_ConfigClockSource+0x174>
 8007de4:	2301      	movs	r3, #1
 8007de6:	73fb      	strb	r3, [r7, #15]
 8007de8:	e000      	b.n	8007dec <HAL_TIM_ConfigClockSource+0x174>
 8007dea:	bf00      	nop
 8007dec:	687b      	ldr	r3, [r7, #4]
 8007dee:	2201      	movs	r2, #1
 8007df0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007df4:	687b      	ldr	r3, [r7, #4]
 8007df6:	2200      	movs	r2, #0
 8007df8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007dfc:	7bfb      	ldrb	r3, [r7, #15]
 8007dfe:	4618      	mov	r0, r3
 8007e00:	3710      	adds	r7, #16
 8007e02:	46bd      	mov	sp, r7
 8007e04:	bd80      	pop	{r7, pc}
 8007e06:	bf00      	nop
 8007e08:	fffeff88 	.word	0xfffeff88

08007e0c <HAL_TIM_OC_DelayElapsedCallback>:
 8007e0c:	b480      	push	{r7}
 8007e0e:	b083      	sub	sp, #12
 8007e10:	af00      	add	r7, sp, #0
 8007e12:	6078      	str	r0, [r7, #4]
 8007e14:	bf00      	nop
 8007e16:	370c      	adds	r7, #12
 8007e18:	46bd      	mov	sp, r7
 8007e1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e1e:	4770      	bx	lr

08007e20 <HAL_TIM_IC_CaptureCallback>:
 8007e20:	b480      	push	{r7}
 8007e22:	b083      	sub	sp, #12
 8007e24:	af00      	add	r7, sp, #0
 8007e26:	6078      	str	r0, [r7, #4]
 8007e28:	bf00      	nop
 8007e2a:	370c      	adds	r7, #12
 8007e2c:	46bd      	mov	sp, r7
 8007e2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e32:	4770      	bx	lr

08007e34 <HAL_TIM_PWM_PulseFinishedCallback>:
 8007e34:	b480      	push	{r7}
 8007e36:	b083      	sub	sp, #12
 8007e38:	af00      	add	r7, sp, #0
 8007e3a:	6078      	str	r0, [r7, #4]
 8007e3c:	bf00      	nop
 8007e3e:	370c      	adds	r7, #12
 8007e40:	46bd      	mov	sp, r7
 8007e42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e46:	4770      	bx	lr

08007e48 <HAL_TIM_TriggerCallback>:
 8007e48:	b480      	push	{r7}
 8007e4a:	b083      	sub	sp, #12
 8007e4c:	af00      	add	r7, sp, #0
 8007e4e:	6078      	str	r0, [r7, #4]
 8007e50:	bf00      	nop
 8007e52:	370c      	adds	r7, #12
 8007e54:	46bd      	mov	sp, r7
 8007e56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e5a:	4770      	bx	lr

08007e5c <TIM_Base_SetConfig>:
 8007e5c:	b480      	push	{r7}
 8007e5e:	b085      	sub	sp, #20
 8007e60:	af00      	add	r7, sp, #0
 8007e62:	6078      	str	r0, [r7, #4]
 8007e64:	6039      	str	r1, [r7, #0]
 8007e66:	687b      	ldr	r3, [r7, #4]
 8007e68:	681b      	ldr	r3, [r3, #0]
 8007e6a:	60fb      	str	r3, [r7, #12]
 8007e6c:	687b      	ldr	r3, [r7, #4]
 8007e6e:	4a40      	ldr	r2, [pc, #256]	; (8007f70 <TIM_Base_SetConfig+0x114>)
 8007e70:	4293      	cmp	r3, r2
 8007e72:	d013      	beq.n	8007e9c <TIM_Base_SetConfig+0x40>
 8007e74:	687b      	ldr	r3, [r7, #4]
 8007e76:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007e7a:	d00f      	beq.n	8007e9c <TIM_Base_SetConfig+0x40>
 8007e7c:	687b      	ldr	r3, [r7, #4]
 8007e7e:	4a3d      	ldr	r2, [pc, #244]	; (8007f74 <TIM_Base_SetConfig+0x118>)
 8007e80:	4293      	cmp	r3, r2
 8007e82:	d00b      	beq.n	8007e9c <TIM_Base_SetConfig+0x40>
 8007e84:	687b      	ldr	r3, [r7, #4]
 8007e86:	4a3c      	ldr	r2, [pc, #240]	; (8007f78 <TIM_Base_SetConfig+0x11c>)
 8007e88:	4293      	cmp	r3, r2
 8007e8a:	d007      	beq.n	8007e9c <TIM_Base_SetConfig+0x40>
 8007e8c:	687b      	ldr	r3, [r7, #4]
 8007e8e:	4a3b      	ldr	r2, [pc, #236]	; (8007f7c <TIM_Base_SetConfig+0x120>)
 8007e90:	4293      	cmp	r3, r2
 8007e92:	d003      	beq.n	8007e9c <TIM_Base_SetConfig+0x40>
 8007e94:	687b      	ldr	r3, [r7, #4]
 8007e96:	4a3a      	ldr	r2, [pc, #232]	; (8007f80 <TIM_Base_SetConfig+0x124>)
 8007e98:	4293      	cmp	r3, r2
 8007e9a:	d108      	bne.n	8007eae <TIM_Base_SetConfig+0x52>
 8007e9c:	68fb      	ldr	r3, [r7, #12]
 8007e9e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007ea2:	60fb      	str	r3, [r7, #12]
 8007ea4:	683b      	ldr	r3, [r7, #0]
 8007ea6:	685b      	ldr	r3, [r3, #4]
 8007ea8:	68fa      	ldr	r2, [r7, #12]
 8007eaa:	4313      	orrs	r3, r2
 8007eac:	60fb      	str	r3, [r7, #12]
 8007eae:	687b      	ldr	r3, [r7, #4]
 8007eb0:	4a2f      	ldr	r2, [pc, #188]	; (8007f70 <TIM_Base_SetConfig+0x114>)
 8007eb2:	4293      	cmp	r3, r2
 8007eb4:	d02b      	beq.n	8007f0e <TIM_Base_SetConfig+0xb2>
 8007eb6:	687b      	ldr	r3, [r7, #4]
 8007eb8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007ebc:	d027      	beq.n	8007f0e <TIM_Base_SetConfig+0xb2>
 8007ebe:	687b      	ldr	r3, [r7, #4]
 8007ec0:	4a2c      	ldr	r2, [pc, #176]	; (8007f74 <TIM_Base_SetConfig+0x118>)
 8007ec2:	4293      	cmp	r3, r2
 8007ec4:	d023      	beq.n	8007f0e <TIM_Base_SetConfig+0xb2>
 8007ec6:	687b      	ldr	r3, [r7, #4]
 8007ec8:	4a2b      	ldr	r2, [pc, #172]	; (8007f78 <TIM_Base_SetConfig+0x11c>)
 8007eca:	4293      	cmp	r3, r2
 8007ecc:	d01f      	beq.n	8007f0e <TIM_Base_SetConfig+0xb2>
 8007ece:	687b      	ldr	r3, [r7, #4]
 8007ed0:	4a2a      	ldr	r2, [pc, #168]	; (8007f7c <TIM_Base_SetConfig+0x120>)
 8007ed2:	4293      	cmp	r3, r2
 8007ed4:	d01b      	beq.n	8007f0e <TIM_Base_SetConfig+0xb2>
 8007ed6:	687b      	ldr	r3, [r7, #4]
 8007ed8:	4a29      	ldr	r2, [pc, #164]	; (8007f80 <TIM_Base_SetConfig+0x124>)
 8007eda:	4293      	cmp	r3, r2
 8007edc:	d017      	beq.n	8007f0e <TIM_Base_SetConfig+0xb2>
 8007ede:	687b      	ldr	r3, [r7, #4]
 8007ee0:	4a28      	ldr	r2, [pc, #160]	; (8007f84 <TIM_Base_SetConfig+0x128>)
 8007ee2:	4293      	cmp	r3, r2
 8007ee4:	d013      	beq.n	8007f0e <TIM_Base_SetConfig+0xb2>
 8007ee6:	687b      	ldr	r3, [r7, #4]
 8007ee8:	4a27      	ldr	r2, [pc, #156]	; (8007f88 <TIM_Base_SetConfig+0x12c>)
 8007eea:	4293      	cmp	r3, r2
 8007eec:	d00f      	beq.n	8007f0e <TIM_Base_SetConfig+0xb2>
 8007eee:	687b      	ldr	r3, [r7, #4]
 8007ef0:	4a26      	ldr	r2, [pc, #152]	; (8007f8c <TIM_Base_SetConfig+0x130>)
 8007ef2:	4293      	cmp	r3, r2
 8007ef4:	d00b      	beq.n	8007f0e <TIM_Base_SetConfig+0xb2>
 8007ef6:	687b      	ldr	r3, [r7, #4]
 8007ef8:	4a25      	ldr	r2, [pc, #148]	; (8007f90 <TIM_Base_SetConfig+0x134>)
 8007efa:	4293      	cmp	r3, r2
 8007efc:	d007      	beq.n	8007f0e <TIM_Base_SetConfig+0xb2>
 8007efe:	687b      	ldr	r3, [r7, #4]
 8007f00:	4a24      	ldr	r2, [pc, #144]	; (8007f94 <TIM_Base_SetConfig+0x138>)
 8007f02:	4293      	cmp	r3, r2
 8007f04:	d003      	beq.n	8007f0e <TIM_Base_SetConfig+0xb2>
 8007f06:	687b      	ldr	r3, [r7, #4]
 8007f08:	4a23      	ldr	r2, [pc, #140]	; (8007f98 <TIM_Base_SetConfig+0x13c>)
 8007f0a:	4293      	cmp	r3, r2
 8007f0c:	d108      	bne.n	8007f20 <TIM_Base_SetConfig+0xc4>
 8007f0e:	68fb      	ldr	r3, [r7, #12]
 8007f10:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007f14:	60fb      	str	r3, [r7, #12]
 8007f16:	683b      	ldr	r3, [r7, #0]
 8007f18:	68db      	ldr	r3, [r3, #12]
 8007f1a:	68fa      	ldr	r2, [r7, #12]
 8007f1c:	4313      	orrs	r3, r2
 8007f1e:	60fb      	str	r3, [r7, #12]
 8007f20:	68fb      	ldr	r3, [r7, #12]
 8007f22:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8007f26:	683b      	ldr	r3, [r7, #0]
 8007f28:	695b      	ldr	r3, [r3, #20]
 8007f2a:	4313      	orrs	r3, r2
 8007f2c:	60fb      	str	r3, [r7, #12]
 8007f2e:	687b      	ldr	r3, [r7, #4]
 8007f30:	68fa      	ldr	r2, [r7, #12]
 8007f32:	601a      	str	r2, [r3, #0]
 8007f34:	683b      	ldr	r3, [r7, #0]
 8007f36:	689a      	ldr	r2, [r3, #8]
 8007f38:	687b      	ldr	r3, [r7, #4]
 8007f3a:	62da      	str	r2, [r3, #44]	; 0x2c
 8007f3c:	683b      	ldr	r3, [r7, #0]
 8007f3e:	681a      	ldr	r2, [r3, #0]
 8007f40:	687b      	ldr	r3, [r7, #4]
 8007f42:	629a      	str	r2, [r3, #40]	; 0x28
 8007f44:	687b      	ldr	r3, [r7, #4]
 8007f46:	4a0a      	ldr	r2, [pc, #40]	; (8007f70 <TIM_Base_SetConfig+0x114>)
 8007f48:	4293      	cmp	r3, r2
 8007f4a:	d003      	beq.n	8007f54 <TIM_Base_SetConfig+0xf8>
 8007f4c:	687b      	ldr	r3, [r7, #4]
 8007f4e:	4a0c      	ldr	r2, [pc, #48]	; (8007f80 <TIM_Base_SetConfig+0x124>)
 8007f50:	4293      	cmp	r3, r2
 8007f52:	d103      	bne.n	8007f5c <TIM_Base_SetConfig+0x100>
 8007f54:	683b      	ldr	r3, [r7, #0]
 8007f56:	691a      	ldr	r2, [r3, #16]
 8007f58:	687b      	ldr	r3, [r7, #4]
 8007f5a:	631a      	str	r2, [r3, #48]	; 0x30
 8007f5c:	687b      	ldr	r3, [r7, #4]
 8007f5e:	2201      	movs	r2, #1
 8007f60:	615a      	str	r2, [r3, #20]
 8007f62:	bf00      	nop
 8007f64:	3714      	adds	r7, #20
 8007f66:	46bd      	mov	sp, r7
 8007f68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f6c:	4770      	bx	lr
 8007f6e:	bf00      	nop
 8007f70:	40010000 	.word	0x40010000
 8007f74:	40000400 	.word	0x40000400
 8007f78:	40000800 	.word	0x40000800
 8007f7c:	40000c00 	.word	0x40000c00
 8007f80:	40010400 	.word	0x40010400
 8007f84:	40014000 	.word	0x40014000
 8007f88:	40014400 	.word	0x40014400
 8007f8c:	40014800 	.word	0x40014800
 8007f90:	40001800 	.word	0x40001800
 8007f94:	40001c00 	.word	0x40001c00
 8007f98:	40002000 	.word	0x40002000

08007f9c <TIM_OC1_SetConfig>:
 8007f9c:	b480      	push	{r7}
 8007f9e:	b087      	sub	sp, #28
 8007fa0:	af00      	add	r7, sp, #0
 8007fa2:	6078      	str	r0, [r7, #4]
 8007fa4:	6039      	str	r1, [r7, #0]
 8007fa6:	687b      	ldr	r3, [r7, #4]
 8007fa8:	6a1b      	ldr	r3, [r3, #32]
 8007faa:	f023 0201 	bic.w	r2, r3, #1
 8007fae:	687b      	ldr	r3, [r7, #4]
 8007fb0:	621a      	str	r2, [r3, #32]
 8007fb2:	687b      	ldr	r3, [r7, #4]
 8007fb4:	6a1b      	ldr	r3, [r3, #32]
 8007fb6:	617b      	str	r3, [r7, #20]
 8007fb8:	687b      	ldr	r3, [r7, #4]
 8007fba:	685b      	ldr	r3, [r3, #4]
 8007fbc:	613b      	str	r3, [r7, #16]
 8007fbe:	687b      	ldr	r3, [r7, #4]
 8007fc0:	699b      	ldr	r3, [r3, #24]
 8007fc2:	60fb      	str	r3, [r7, #12]
 8007fc4:	68fa      	ldr	r2, [r7, #12]
 8007fc6:	4b2b      	ldr	r3, [pc, #172]	; (8008074 <TIM_OC1_SetConfig+0xd8>)
 8007fc8:	4013      	ands	r3, r2
 8007fca:	60fb      	str	r3, [r7, #12]
 8007fcc:	68fb      	ldr	r3, [r7, #12]
 8007fce:	f023 0303 	bic.w	r3, r3, #3
 8007fd2:	60fb      	str	r3, [r7, #12]
 8007fd4:	683b      	ldr	r3, [r7, #0]
 8007fd6:	681b      	ldr	r3, [r3, #0]
 8007fd8:	68fa      	ldr	r2, [r7, #12]
 8007fda:	4313      	orrs	r3, r2
 8007fdc:	60fb      	str	r3, [r7, #12]
 8007fde:	697b      	ldr	r3, [r7, #20]
 8007fe0:	f023 0302 	bic.w	r3, r3, #2
 8007fe4:	617b      	str	r3, [r7, #20]
 8007fe6:	683b      	ldr	r3, [r7, #0]
 8007fe8:	689b      	ldr	r3, [r3, #8]
 8007fea:	697a      	ldr	r2, [r7, #20]
 8007fec:	4313      	orrs	r3, r2
 8007fee:	617b      	str	r3, [r7, #20]
 8007ff0:	687b      	ldr	r3, [r7, #4]
 8007ff2:	4a21      	ldr	r2, [pc, #132]	; (8008078 <TIM_OC1_SetConfig+0xdc>)
 8007ff4:	4293      	cmp	r3, r2
 8007ff6:	d003      	beq.n	8008000 <TIM_OC1_SetConfig+0x64>
 8007ff8:	687b      	ldr	r3, [r7, #4]
 8007ffa:	4a20      	ldr	r2, [pc, #128]	; (800807c <TIM_OC1_SetConfig+0xe0>)
 8007ffc:	4293      	cmp	r3, r2
 8007ffe:	d10c      	bne.n	800801a <TIM_OC1_SetConfig+0x7e>
 8008000:	697b      	ldr	r3, [r7, #20]
 8008002:	f023 0308 	bic.w	r3, r3, #8
 8008006:	617b      	str	r3, [r7, #20]
 8008008:	683b      	ldr	r3, [r7, #0]
 800800a:	68db      	ldr	r3, [r3, #12]
 800800c:	697a      	ldr	r2, [r7, #20]
 800800e:	4313      	orrs	r3, r2
 8008010:	617b      	str	r3, [r7, #20]
 8008012:	697b      	ldr	r3, [r7, #20]
 8008014:	f023 0304 	bic.w	r3, r3, #4
 8008018:	617b      	str	r3, [r7, #20]
 800801a:	687b      	ldr	r3, [r7, #4]
 800801c:	4a16      	ldr	r2, [pc, #88]	; (8008078 <TIM_OC1_SetConfig+0xdc>)
 800801e:	4293      	cmp	r3, r2
 8008020:	d003      	beq.n	800802a <TIM_OC1_SetConfig+0x8e>
 8008022:	687b      	ldr	r3, [r7, #4]
 8008024:	4a15      	ldr	r2, [pc, #84]	; (800807c <TIM_OC1_SetConfig+0xe0>)
 8008026:	4293      	cmp	r3, r2
 8008028:	d111      	bne.n	800804e <TIM_OC1_SetConfig+0xb2>
 800802a:	693b      	ldr	r3, [r7, #16]
 800802c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8008030:	613b      	str	r3, [r7, #16]
 8008032:	693b      	ldr	r3, [r7, #16]
 8008034:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8008038:	613b      	str	r3, [r7, #16]
 800803a:	683b      	ldr	r3, [r7, #0]
 800803c:	695b      	ldr	r3, [r3, #20]
 800803e:	693a      	ldr	r2, [r7, #16]
 8008040:	4313      	orrs	r3, r2
 8008042:	613b      	str	r3, [r7, #16]
 8008044:	683b      	ldr	r3, [r7, #0]
 8008046:	699b      	ldr	r3, [r3, #24]
 8008048:	693a      	ldr	r2, [r7, #16]
 800804a:	4313      	orrs	r3, r2
 800804c:	613b      	str	r3, [r7, #16]
 800804e:	687b      	ldr	r3, [r7, #4]
 8008050:	693a      	ldr	r2, [r7, #16]
 8008052:	605a      	str	r2, [r3, #4]
 8008054:	687b      	ldr	r3, [r7, #4]
 8008056:	68fa      	ldr	r2, [r7, #12]
 8008058:	619a      	str	r2, [r3, #24]
 800805a:	683b      	ldr	r3, [r7, #0]
 800805c:	685a      	ldr	r2, [r3, #4]
 800805e:	687b      	ldr	r3, [r7, #4]
 8008060:	635a      	str	r2, [r3, #52]	; 0x34
 8008062:	687b      	ldr	r3, [r7, #4]
 8008064:	697a      	ldr	r2, [r7, #20]
 8008066:	621a      	str	r2, [r3, #32]
 8008068:	bf00      	nop
 800806a:	371c      	adds	r7, #28
 800806c:	46bd      	mov	sp, r7
 800806e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008072:	4770      	bx	lr
 8008074:	fffeff8f 	.word	0xfffeff8f
 8008078:	40010000 	.word	0x40010000
 800807c:	40010400 	.word	0x40010400

08008080 <TIM_OC2_SetConfig>:
 8008080:	b480      	push	{r7}
 8008082:	b087      	sub	sp, #28
 8008084:	af00      	add	r7, sp, #0
 8008086:	6078      	str	r0, [r7, #4]
 8008088:	6039      	str	r1, [r7, #0]
 800808a:	687b      	ldr	r3, [r7, #4]
 800808c:	6a1b      	ldr	r3, [r3, #32]
 800808e:	f023 0210 	bic.w	r2, r3, #16
 8008092:	687b      	ldr	r3, [r7, #4]
 8008094:	621a      	str	r2, [r3, #32]
 8008096:	687b      	ldr	r3, [r7, #4]
 8008098:	6a1b      	ldr	r3, [r3, #32]
 800809a:	617b      	str	r3, [r7, #20]
 800809c:	687b      	ldr	r3, [r7, #4]
 800809e:	685b      	ldr	r3, [r3, #4]
 80080a0:	613b      	str	r3, [r7, #16]
 80080a2:	687b      	ldr	r3, [r7, #4]
 80080a4:	699b      	ldr	r3, [r3, #24]
 80080a6:	60fb      	str	r3, [r7, #12]
 80080a8:	68fa      	ldr	r2, [r7, #12]
 80080aa:	4b2e      	ldr	r3, [pc, #184]	; (8008164 <TIM_OC2_SetConfig+0xe4>)
 80080ac:	4013      	ands	r3, r2
 80080ae:	60fb      	str	r3, [r7, #12]
 80080b0:	68fb      	ldr	r3, [r7, #12]
 80080b2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80080b6:	60fb      	str	r3, [r7, #12]
 80080b8:	683b      	ldr	r3, [r7, #0]
 80080ba:	681b      	ldr	r3, [r3, #0]
 80080bc:	021b      	lsls	r3, r3, #8
 80080be:	68fa      	ldr	r2, [r7, #12]
 80080c0:	4313      	orrs	r3, r2
 80080c2:	60fb      	str	r3, [r7, #12]
 80080c4:	697b      	ldr	r3, [r7, #20]
 80080c6:	f023 0320 	bic.w	r3, r3, #32
 80080ca:	617b      	str	r3, [r7, #20]
 80080cc:	683b      	ldr	r3, [r7, #0]
 80080ce:	689b      	ldr	r3, [r3, #8]
 80080d0:	011b      	lsls	r3, r3, #4
 80080d2:	697a      	ldr	r2, [r7, #20]
 80080d4:	4313      	orrs	r3, r2
 80080d6:	617b      	str	r3, [r7, #20]
 80080d8:	687b      	ldr	r3, [r7, #4]
 80080da:	4a23      	ldr	r2, [pc, #140]	; (8008168 <TIM_OC2_SetConfig+0xe8>)
 80080dc:	4293      	cmp	r3, r2
 80080de:	d003      	beq.n	80080e8 <TIM_OC2_SetConfig+0x68>
 80080e0:	687b      	ldr	r3, [r7, #4]
 80080e2:	4a22      	ldr	r2, [pc, #136]	; (800816c <TIM_OC2_SetConfig+0xec>)
 80080e4:	4293      	cmp	r3, r2
 80080e6:	d10d      	bne.n	8008104 <TIM_OC2_SetConfig+0x84>
 80080e8:	697b      	ldr	r3, [r7, #20]
 80080ea:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80080ee:	617b      	str	r3, [r7, #20]
 80080f0:	683b      	ldr	r3, [r7, #0]
 80080f2:	68db      	ldr	r3, [r3, #12]
 80080f4:	011b      	lsls	r3, r3, #4
 80080f6:	697a      	ldr	r2, [r7, #20]
 80080f8:	4313      	orrs	r3, r2
 80080fa:	617b      	str	r3, [r7, #20]
 80080fc:	697b      	ldr	r3, [r7, #20]
 80080fe:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8008102:	617b      	str	r3, [r7, #20]
 8008104:	687b      	ldr	r3, [r7, #4]
 8008106:	4a18      	ldr	r2, [pc, #96]	; (8008168 <TIM_OC2_SetConfig+0xe8>)
 8008108:	4293      	cmp	r3, r2
 800810a:	d003      	beq.n	8008114 <TIM_OC2_SetConfig+0x94>
 800810c:	687b      	ldr	r3, [r7, #4]
 800810e:	4a17      	ldr	r2, [pc, #92]	; (800816c <TIM_OC2_SetConfig+0xec>)
 8008110:	4293      	cmp	r3, r2
 8008112:	d113      	bne.n	800813c <TIM_OC2_SetConfig+0xbc>
 8008114:	693b      	ldr	r3, [r7, #16]
 8008116:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800811a:	613b      	str	r3, [r7, #16]
 800811c:	693b      	ldr	r3, [r7, #16]
 800811e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8008122:	613b      	str	r3, [r7, #16]
 8008124:	683b      	ldr	r3, [r7, #0]
 8008126:	695b      	ldr	r3, [r3, #20]
 8008128:	009b      	lsls	r3, r3, #2
 800812a:	693a      	ldr	r2, [r7, #16]
 800812c:	4313      	orrs	r3, r2
 800812e:	613b      	str	r3, [r7, #16]
 8008130:	683b      	ldr	r3, [r7, #0]
 8008132:	699b      	ldr	r3, [r3, #24]
 8008134:	009b      	lsls	r3, r3, #2
 8008136:	693a      	ldr	r2, [r7, #16]
 8008138:	4313      	orrs	r3, r2
 800813a:	613b      	str	r3, [r7, #16]
 800813c:	687b      	ldr	r3, [r7, #4]
 800813e:	693a      	ldr	r2, [r7, #16]
 8008140:	605a      	str	r2, [r3, #4]
 8008142:	687b      	ldr	r3, [r7, #4]
 8008144:	68fa      	ldr	r2, [r7, #12]
 8008146:	619a      	str	r2, [r3, #24]
 8008148:	683b      	ldr	r3, [r7, #0]
 800814a:	685a      	ldr	r2, [r3, #4]
 800814c:	687b      	ldr	r3, [r7, #4]
 800814e:	639a      	str	r2, [r3, #56]	; 0x38
 8008150:	687b      	ldr	r3, [r7, #4]
 8008152:	697a      	ldr	r2, [r7, #20]
 8008154:	621a      	str	r2, [r3, #32]
 8008156:	bf00      	nop
 8008158:	371c      	adds	r7, #28
 800815a:	46bd      	mov	sp, r7
 800815c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008160:	4770      	bx	lr
 8008162:	bf00      	nop
 8008164:	feff8fff 	.word	0xfeff8fff
 8008168:	40010000 	.word	0x40010000
 800816c:	40010400 	.word	0x40010400

08008170 <TIM_OC3_SetConfig>:
 8008170:	b480      	push	{r7}
 8008172:	b087      	sub	sp, #28
 8008174:	af00      	add	r7, sp, #0
 8008176:	6078      	str	r0, [r7, #4]
 8008178:	6039      	str	r1, [r7, #0]
 800817a:	687b      	ldr	r3, [r7, #4]
 800817c:	6a1b      	ldr	r3, [r3, #32]
 800817e:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8008182:	687b      	ldr	r3, [r7, #4]
 8008184:	621a      	str	r2, [r3, #32]
 8008186:	687b      	ldr	r3, [r7, #4]
 8008188:	6a1b      	ldr	r3, [r3, #32]
 800818a:	617b      	str	r3, [r7, #20]
 800818c:	687b      	ldr	r3, [r7, #4]
 800818e:	685b      	ldr	r3, [r3, #4]
 8008190:	613b      	str	r3, [r7, #16]
 8008192:	687b      	ldr	r3, [r7, #4]
 8008194:	69db      	ldr	r3, [r3, #28]
 8008196:	60fb      	str	r3, [r7, #12]
 8008198:	68fa      	ldr	r2, [r7, #12]
 800819a:	4b2d      	ldr	r3, [pc, #180]	; (8008250 <TIM_OC3_SetConfig+0xe0>)
 800819c:	4013      	ands	r3, r2
 800819e:	60fb      	str	r3, [r7, #12]
 80081a0:	68fb      	ldr	r3, [r7, #12]
 80081a2:	f023 0303 	bic.w	r3, r3, #3
 80081a6:	60fb      	str	r3, [r7, #12]
 80081a8:	683b      	ldr	r3, [r7, #0]
 80081aa:	681b      	ldr	r3, [r3, #0]
 80081ac:	68fa      	ldr	r2, [r7, #12]
 80081ae:	4313      	orrs	r3, r2
 80081b0:	60fb      	str	r3, [r7, #12]
 80081b2:	697b      	ldr	r3, [r7, #20]
 80081b4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80081b8:	617b      	str	r3, [r7, #20]
 80081ba:	683b      	ldr	r3, [r7, #0]
 80081bc:	689b      	ldr	r3, [r3, #8]
 80081be:	021b      	lsls	r3, r3, #8
 80081c0:	697a      	ldr	r2, [r7, #20]
 80081c2:	4313      	orrs	r3, r2
 80081c4:	617b      	str	r3, [r7, #20]
 80081c6:	687b      	ldr	r3, [r7, #4]
 80081c8:	4a22      	ldr	r2, [pc, #136]	; (8008254 <TIM_OC3_SetConfig+0xe4>)
 80081ca:	4293      	cmp	r3, r2
 80081cc:	d003      	beq.n	80081d6 <TIM_OC3_SetConfig+0x66>
 80081ce:	687b      	ldr	r3, [r7, #4]
 80081d0:	4a21      	ldr	r2, [pc, #132]	; (8008258 <TIM_OC3_SetConfig+0xe8>)
 80081d2:	4293      	cmp	r3, r2
 80081d4:	d10d      	bne.n	80081f2 <TIM_OC3_SetConfig+0x82>
 80081d6:	697b      	ldr	r3, [r7, #20]
 80081d8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80081dc:	617b      	str	r3, [r7, #20]
 80081de:	683b      	ldr	r3, [r7, #0]
 80081e0:	68db      	ldr	r3, [r3, #12]
 80081e2:	021b      	lsls	r3, r3, #8
 80081e4:	697a      	ldr	r2, [r7, #20]
 80081e6:	4313      	orrs	r3, r2
 80081e8:	617b      	str	r3, [r7, #20]
 80081ea:	697b      	ldr	r3, [r7, #20]
 80081ec:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80081f0:	617b      	str	r3, [r7, #20]
 80081f2:	687b      	ldr	r3, [r7, #4]
 80081f4:	4a17      	ldr	r2, [pc, #92]	; (8008254 <TIM_OC3_SetConfig+0xe4>)
 80081f6:	4293      	cmp	r3, r2
 80081f8:	d003      	beq.n	8008202 <TIM_OC3_SetConfig+0x92>
 80081fa:	687b      	ldr	r3, [r7, #4]
 80081fc:	4a16      	ldr	r2, [pc, #88]	; (8008258 <TIM_OC3_SetConfig+0xe8>)
 80081fe:	4293      	cmp	r3, r2
 8008200:	d113      	bne.n	800822a <TIM_OC3_SetConfig+0xba>
 8008202:	693b      	ldr	r3, [r7, #16]
 8008204:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8008208:	613b      	str	r3, [r7, #16]
 800820a:	693b      	ldr	r3, [r7, #16]
 800820c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8008210:	613b      	str	r3, [r7, #16]
 8008212:	683b      	ldr	r3, [r7, #0]
 8008214:	695b      	ldr	r3, [r3, #20]
 8008216:	011b      	lsls	r3, r3, #4
 8008218:	693a      	ldr	r2, [r7, #16]
 800821a:	4313      	orrs	r3, r2
 800821c:	613b      	str	r3, [r7, #16]
 800821e:	683b      	ldr	r3, [r7, #0]
 8008220:	699b      	ldr	r3, [r3, #24]
 8008222:	011b      	lsls	r3, r3, #4
 8008224:	693a      	ldr	r2, [r7, #16]
 8008226:	4313      	orrs	r3, r2
 8008228:	613b      	str	r3, [r7, #16]
 800822a:	687b      	ldr	r3, [r7, #4]
 800822c:	693a      	ldr	r2, [r7, #16]
 800822e:	605a      	str	r2, [r3, #4]
 8008230:	687b      	ldr	r3, [r7, #4]
 8008232:	68fa      	ldr	r2, [r7, #12]
 8008234:	61da      	str	r2, [r3, #28]
 8008236:	683b      	ldr	r3, [r7, #0]
 8008238:	685a      	ldr	r2, [r3, #4]
 800823a:	687b      	ldr	r3, [r7, #4]
 800823c:	63da      	str	r2, [r3, #60]	; 0x3c
 800823e:	687b      	ldr	r3, [r7, #4]
 8008240:	697a      	ldr	r2, [r7, #20]
 8008242:	621a      	str	r2, [r3, #32]
 8008244:	bf00      	nop
 8008246:	371c      	adds	r7, #28
 8008248:	46bd      	mov	sp, r7
 800824a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800824e:	4770      	bx	lr
 8008250:	fffeff8f 	.word	0xfffeff8f
 8008254:	40010000 	.word	0x40010000
 8008258:	40010400 	.word	0x40010400

0800825c <TIM_OC4_SetConfig>:
 800825c:	b480      	push	{r7}
 800825e:	b087      	sub	sp, #28
 8008260:	af00      	add	r7, sp, #0
 8008262:	6078      	str	r0, [r7, #4]
 8008264:	6039      	str	r1, [r7, #0]
 8008266:	687b      	ldr	r3, [r7, #4]
 8008268:	6a1b      	ldr	r3, [r3, #32]
 800826a:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800826e:	687b      	ldr	r3, [r7, #4]
 8008270:	621a      	str	r2, [r3, #32]
 8008272:	687b      	ldr	r3, [r7, #4]
 8008274:	6a1b      	ldr	r3, [r3, #32]
 8008276:	613b      	str	r3, [r7, #16]
 8008278:	687b      	ldr	r3, [r7, #4]
 800827a:	685b      	ldr	r3, [r3, #4]
 800827c:	617b      	str	r3, [r7, #20]
 800827e:	687b      	ldr	r3, [r7, #4]
 8008280:	69db      	ldr	r3, [r3, #28]
 8008282:	60fb      	str	r3, [r7, #12]
 8008284:	68fa      	ldr	r2, [r7, #12]
 8008286:	4b1e      	ldr	r3, [pc, #120]	; (8008300 <TIM_OC4_SetConfig+0xa4>)
 8008288:	4013      	ands	r3, r2
 800828a:	60fb      	str	r3, [r7, #12]
 800828c:	68fb      	ldr	r3, [r7, #12]
 800828e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008292:	60fb      	str	r3, [r7, #12]
 8008294:	683b      	ldr	r3, [r7, #0]
 8008296:	681b      	ldr	r3, [r3, #0]
 8008298:	021b      	lsls	r3, r3, #8
 800829a:	68fa      	ldr	r2, [r7, #12]
 800829c:	4313      	orrs	r3, r2
 800829e:	60fb      	str	r3, [r7, #12]
 80082a0:	693b      	ldr	r3, [r7, #16]
 80082a2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80082a6:	613b      	str	r3, [r7, #16]
 80082a8:	683b      	ldr	r3, [r7, #0]
 80082aa:	689b      	ldr	r3, [r3, #8]
 80082ac:	031b      	lsls	r3, r3, #12
 80082ae:	693a      	ldr	r2, [r7, #16]
 80082b0:	4313      	orrs	r3, r2
 80082b2:	613b      	str	r3, [r7, #16]
 80082b4:	687b      	ldr	r3, [r7, #4]
 80082b6:	4a13      	ldr	r2, [pc, #76]	; (8008304 <TIM_OC4_SetConfig+0xa8>)
 80082b8:	4293      	cmp	r3, r2
 80082ba:	d003      	beq.n	80082c4 <TIM_OC4_SetConfig+0x68>
 80082bc:	687b      	ldr	r3, [r7, #4]
 80082be:	4a12      	ldr	r2, [pc, #72]	; (8008308 <TIM_OC4_SetConfig+0xac>)
 80082c0:	4293      	cmp	r3, r2
 80082c2:	d109      	bne.n	80082d8 <TIM_OC4_SetConfig+0x7c>
 80082c4:	697b      	ldr	r3, [r7, #20]
 80082c6:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80082ca:	617b      	str	r3, [r7, #20]
 80082cc:	683b      	ldr	r3, [r7, #0]
 80082ce:	695b      	ldr	r3, [r3, #20]
 80082d0:	019b      	lsls	r3, r3, #6
 80082d2:	697a      	ldr	r2, [r7, #20]
 80082d4:	4313      	orrs	r3, r2
 80082d6:	617b      	str	r3, [r7, #20]
 80082d8:	687b      	ldr	r3, [r7, #4]
 80082da:	697a      	ldr	r2, [r7, #20]
 80082dc:	605a      	str	r2, [r3, #4]
 80082de:	687b      	ldr	r3, [r7, #4]
 80082e0:	68fa      	ldr	r2, [r7, #12]
 80082e2:	61da      	str	r2, [r3, #28]
 80082e4:	683b      	ldr	r3, [r7, #0]
 80082e6:	685a      	ldr	r2, [r3, #4]
 80082e8:	687b      	ldr	r3, [r7, #4]
 80082ea:	641a      	str	r2, [r3, #64]	; 0x40
 80082ec:	687b      	ldr	r3, [r7, #4]
 80082ee:	693a      	ldr	r2, [r7, #16]
 80082f0:	621a      	str	r2, [r3, #32]
 80082f2:	bf00      	nop
 80082f4:	371c      	adds	r7, #28
 80082f6:	46bd      	mov	sp, r7
 80082f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082fc:	4770      	bx	lr
 80082fe:	bf00      	nop
 8008300:	feff8fff 	.word	0xfeff8fff
 8008304:	40010000 	.word	0x40010000
 8008308:	40010400 	.word	0x40010400

0800830c <TIM_OC5_SetConfig>:
 800830c:	b480      	push	{r7}
 800830e:	b087      	sub	sp, #28
 8008310:	af00      	add	r7, sp, #0
 8008312:	6078      	str	r0, [r7, #4]
 8008314:	6039      	str	r1, [r7, #0]
 8008316:	687b      	ldr	r3, [r7, #4]
 8008318:	6a1b      	ldr	r3, [r3, #32]
 800831a:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 800831e:	687b      	ldr	r3, [r7, #4]
 8008320:	621a      	str	r2, [r3, #32]
 8008322:	687b      	ldr	r3, [r7, #4]
 8008324:	6a1b      	ldr	r3, [r3, #32]
 8008326:	613b      	str	r3, [r7, #16]
 8008328:	687b      	ldr	r3, [r7, #4]
 800832a:	685b      	ldr	r3, [r3, #4]
 800832c:	617b      	str	r3, [r7, #20]
 800832e:	687b      	ldr	r3, [r7, #4]
 8008330:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008332:	60fb      	str	r3, [r7, #12]
 8008334:	68fa      	ldr	r2, [r7, #12]
 8008336:	4b1b      	ldr	r3, [pc, #108]	; (80083a4 <TIM_OC5_SetConfig+0x98>)
 8008338:	4013      	ands	r3, r2
 800833a:	60fb      	str	r3, [r7, #12]
 800833c:	683b      	ldr	r3, [r7, #0]
 800833e:	681b      	ldr	r3, [r3, #0]
 8008340:	68fa      	ldr	r2, [r7, #12]
 8008342:	4313      	orrs	r3, r2
 8008344:	60fb      	str	r3, [r7, #12]
 8008346:	693b      	ldr	r3, [r7, #16]
 8008348:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800834c:	613b      	str	r3, [r7, #16]
 800834e:	683b      	ldr	r3, [r7, #0]
 8008350:	689b      	ldr	r3, [r3, #8]
 8008352:	041b      	lsls	r3, r3, #16
 8008354:	693a      	ldr	r2, [r7, #16]
 8008356:	4313      	orrs	r3, r2
 8008358:	613b      	str	r3, [r7, #16]
 800835a:	687b      	ldr	r3, [r7, #4]
 800835c:	4a12      	ldr	r2, [pc, #72]	; (80083a8 <TIM_OC5_SetConfig+0x9c>)
 800835e:	4293      	cmp	r3, r2
 8008360:	d003      	beq.n	800836a <TIM_OC5_SetConfig+0x5e>
 8008362:	687b      	ldr	r3, [r7, #4]
 8008364:	4a11      	ldr	r2, [pc, #68]	; (80083ac <TIM_OC5_SetConfig+0xa0>)
 8008366:	4293      	cmp	r3, r2
 8008368:	d109      	bne.n	800837e <TIM_OC5_SetConfig+0x72>
 800836a:	697b      	ldr	r3, [r7, #20]
 800836c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8008370:	617b      	str	r3, [r7, #20]
 8008372:	683b      	ldr	r3, [r7, #0]
 8008374:	695b      	ldr	r3, [r3, #20]
 8008376:	021b      	lsls	r3, r3, #8
 8008378:	697a      	ldr	r2, [r7, #20]
 800837a:	4313      	orrs	r3, r2
 800837c:	617b      	str	r3, [r7, #20]
 800837e:	687b      	ldr	r3, [r7, #4]
 8008380:	697a      	ldr	r2, [r7, #20]
 8008382:	605a      	str	r2, [r3, #4]
 8008384:	687b      	ldr	r3, [r7, #4]
 8008386:	68fa      	ldr	r2, [r7, #12]
 8008388:	655a      	str	r2, [r3, #84]	; 0x54
 800838a:	683b      	ldr	r3, [r7, #0]
 800838c:	685a      	ldr	r2, [r3, #4]
 800838e:	687b      	ldr	r3, [r7, #4]
 8008390:	659a      	str	r2, [r3, #88]	; 0x58
 8008392:	687b      	ldr	r3, [r7, #4]
 8008394:	693a      	ldr	r2, [r7, #16]
 8008396:	621a      	str	r2, [r3, #32]
 8008398:	bf00      	nop
 800839a:	371c      	adds	r7, #28
 800839c:	46bd      	mov	sp, r7
 800839e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083a2:	4770      	bx	lr
 80083a4:	fffeff8f 	.word	0xfffeff8f
 80083a8:	40010000 	.word	0x40010000
 80083ac:	40010400 	.word	0x40010400

080083b0 <TIM_OC6_SetConfig>:
 80083b0:	b480      	push	{r7}
 80083b2:	b087      	sub	sp, #28
 80083b4:	af00      	add	r7, sp, #0
 80083b6:	6078      	str	r0, [r7, #4]
 80083b8:	6039      	str	r1, [r7, #0]
 80083ba:	687b      	ldr	r3, [r7, #4]
 80083bc:	6a1b      	ldr	r3, [r3, #32]
 80083be:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 80083c2:	687b      	ldr	r3, [r7, #4]
 80083c4:	621a      	str	r2, [r3, #32]
 80083c6:	687b      	ldr	r3, [r7, #4]
 80083c8:	6a1b      	ldr	r3, [r3, #32]
 80083ca:	613b      	str	r3, [r7, #16]
 80083cc:	687b      	ldr	r3, [r7, #4]
 80083ce:	685b      	ldr	r3, [r3, #4]
 80083d0:	617b      	str	r3, [r7, #20]
 80083d2:	687b      	ldr	r3, [r7, #4]
 80083d4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80083d6:	60fb      	str	r3, [r7, #12]
 80083d8:	68fa      	ldr	r2, [r7, #12]
 80083da:	4b1c      	ldr	r3, [pc, #112]	; (800844c <TIM_OC6_SetConfig+0x9c>)
 80083dc:	4013      	ands	r3, r2
 80083de:	60fb      	str	r3, [r7, #12]
 80083e0:	683b      	ldr	r3, [r7, #0]
 80083e2:	681b      	ldr	r3, [r3, #0]
 80083e4:	021b      	lsls	r3, r3, #8
 80083e6:	68fa      	ldr	r2, [r7, #12]
 80083e8:	4313      	orrs	r3, r2
 80083ea:	60fb      	str	r3, [r7, #12]
 80083ec:	693b      	ldr	r3, [r7, #16]
 80083ee:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80083f2:	613b      	str	r3, [r7, #16]
 80083f4:	683b      	ldr	r3, [r7, #0]
 80083f6:	689b      	ldr	r3, [r3, #8]
 80083f8:	051b      	lsls	r3, r3, #20
 80083fa:	693a      	ldr	r2, [r7, #16]
 80083fc:	4313      	orrs	r3, r2
 80083fe:	613b      	str	r3, [r7, #16]
 8008400:	687b      	ldr	r3, [r7, #4]
 8008402:	4a13      	ldr	r2, [pc, #76]	; (8008450 <TIM_OC6_SetConfig+0xa0>)
 8008404:	4293      	cmp	r3, r2
 8008406:	d003      	beq.n	8008410 <TIM_OC6_SetConfig+0x60>
 8008408:	687b      	ldr	r3, [r7, #4]
 800840a:	4a12      	ldr	r2, [pc, #72]	; (8008454 <TIM_OC6_SetConfig+0xa4>)
 800840c:	4293      	cmp	r3, r2
 800840e:	d109      	bne.n	8008424 <TIM_OC6_SetConfig+0x74>
 8008410:	697b      	ldr	r3, [r7, #20]
 8008412:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8008416:	617b      	str	r3, [r7, #20]
 8008418:	683b      	ldr	r3, [r7, #0]
 800841a:	695b      	ldr	r3, [r3, #20]
 800841c:	029b      	lsls	r3, r3, #10
 800841e:	697a      	ldr	r2, [r7, #20]
 8008420:	4313      	orrs	r3, r2
 8008422:	617b      	str	r3, [r7, #20]
 8008424:	687b      	ldr	r3, [r7, #4]
 8008426:	697a      	ldr	r2, [r7, #20]
 8008428:	605a      	str	r2, [r3, #4]
 800842a:	687b      	ldr	r3, [r7, #4]
 800842c:	68fa      	ldr	r2, [r7, #12]
 800842e:	655a      	str	r2, [r3, #84]	; 0x54
 8008430:	683b      	ldr	r3, [r7, #0]
 8008432:	685a      	ldr	r2, [r3, #4]
 8008434:	687b      	ldr	r3, [r7, #4]
 8008436:	65da      	str	r2, [r3, #92]	; 0x5c
 8008438:	687b      	ldr	r3, [r7, #4]
 800843a:	693a      	ldr	r2, [r7, #16]
 800843c:	621a      	str	r2, [r3, #32]
 800843e:	bf00      	nop
 8008440:	371c      	adds	r7, #28
 8008442:	46bd      	mov	sp, r7
 8008444:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008448:	4770      	bx	lr
 800844a:	bf00      	nop
 800844c:	feff8fff 	.word	0xfeff8fff
 8008450:	40010000 	.word	0x40010000
 8008454:	40010400 	.word	0x40010400

08008458 <TIM_TI1_ConfigInputStage>:
 8008458:	b480      	push	{r7}
 800845a:	b087      	sub	sp, #28
 800845c:	af00      	add	r7, sp, #0
 800845e:	60f8      	str	r0, [r7, #12]
 8008460:	60b9      	str	r1, [r7, #8]
 8008462:	607a      	str	r2, [r7, #4]
 8008464:	68fb      	ldr	r3, [r7, #12]
 8008466:	6a1b      	ldr	r3, [r3, #32]
 8008468:	617b      	str	r3, [r7, #20]
 800846a:	68fb      	ldr	r3, [r7, #12]
 800846c:	6a1b      	ldr	r3, [r3, #32]
 800846e:	f023 0201 	bic.w	r2, r3, #1
 8008472:	68fb      	ldr	r3, [r7, #12]
 8008474:	621a      	str	r2, [r3, #32]
 8008476:	68fb      	ldr	r3, [r7, #12]
 8008478:	699b      	ldr	r3, [r3, #24]
 800847a:	613b      	str	r3, [r7, #16]
 800847c:	693b      	ldr	r3, [r7, #16]
 800847e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8008482:	613b      	str	r3, [r7, #16]
 8008484:	687b      	ldr	r3, [r7, #4]
 8008486:	011b      	lsls	r3, r3, #4
 8008488:	693a      	ldr	r2, [r7, #16]
 800848a:	4313      	orrs	r3, r2
 800848c:	613b      	str	r3, [r7, #16]
 800848e:	697b      	ldr	r3, [r7, #20]
 8008490:	f023 030a 	bic.w	r3, r3, #10
 8008494:	617b      	str	r3, [r7, #20]
 8008496:	697a      	ldr	r2, [r7, #20]
 8008498:	68bb      	ldr	r3, [r7, #8]
 800849a:	4313      	orrs	r3, r2
 800849c:	617b      	str	r3, [r7, #20]
 800849e:	68fb      	ldr	r3, [r7, #12]
 80084a0:	693a      	ldr	r2, [r7, #16]
 80084a2:	619a      	str	r2, [r3, #24]
 80084a4:	68fb      	ldr	r3, [r7, #12]
 80084a6:	697a      	ldr	r2, [r7, #20]
 80084a8:	621a      	str	r2, [r3, #32]
 80084aa:	bf00      	nop
 80084ac:	371c      	adds	r7, #28
 80084ae:	46bd      	mov	sp, r7
 80084b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084b4:	4770      	bx	lr

080084b6 <TIM_TI2_ConfigInputStage>:
 80084b6:	b480      	push	{r7}
 80084b8:	b087      	sub	sp, #28
 80084ba:	af00      	add	r7, sp, #0
 80084bc:	60f8      	str	r0, [r7, #12]
 80084be:	60b9      	str	r1, [r7, #8]
 80084c0:	607a      	str	r2, [r7, #4]
 80084c2:	68fb      	ldr	r3, [r7, #12]
 80084c4:	6a1b      	ldr	r3, [r3, #32]
 80084c6:	f023 0210 	bic.w	r2, r3, #16
 80084ca:	68fb      	ldr	r3, [r7, #12]
 80084cc:	621a      	str	r2, [r3, #32]
 80084ce:	68fb      	ldr	r3, [r7, #12]
 80084d0:	699b      	ldr	r3, [r3, #24]
 80084d2:	617b      	str	r3, [r7, #20]
 80084d4:	68fb      	ldr	r3, [r7, #12]
 80084d6:	6a1b      	ldr	r3, [r3, #32]
 80084d8:	613b      	str	r3, [r7, #16]
 80084da:	697b      	ldr	r3, [r7, #20]
 80084dc:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80084e0:	617b      	str	r3, [r7, #20]
 80084e2:	687b      	ldr	r3, [r7, #4]
 80084e4:	031b      	lsls	r3, r3, #12
 80084e6:	697a      	ldr	r2, [r7, #20]
 80084e8:	4313      	orrs	r3, r2
 80084ea:	617b      	str	r3, [r7, #20]
 80084ec:	693b      	ldr	r3, [r7, #16]
 80084ee:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 80084f2:	613b      	str	r3, [r7, #16]
 80084f4:	68bb      	ldr	r3, [r7, #8]
 80084f6:	011b      	lsls	r3, r3, #4
 80084f8:	693a      	ldr	r2, [r7, #16]
 80084fa:	4313      	orrs	r3, r2
 80084fc:	613b      	str	r3, [r7, #16]
 80084fe:	68fb      	ldr	r3, [r7, #12]
 8008500:	697a      	ldr	r2, [r7, #20]
 8008502:	619a      	str	r2, [r3, #24]
 8008504:	68fb      	ldr	r3, [r7, #12]
 8008506:	693a      	ldr	r2, [r7, #16]
 8008508:	621a      	str	r2, [r3, #32]
 800850a:	bf00      	nop
 800850c:	371c      	adds	r7, #28
 800850e:	46bd      	mov	sp, r7
 8008510:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008514:	4770      	bx	lr

08008516 <TIM_ITRx_SetConfig>:
 8008516:	b480      	push	{r7}
 8008518:	b085      	sub	sp, #20
 800851a:	af00      	add	r7, sp, #0
 800851c:	6078      	str	r0, [r7, #4]
 800851e:	6039      	str	r1, [r7, #0]
 8008520:	687b      	ldr	r3, [r7, #4]
 8008522:	689b      	ldr	r3, [r3, #8]
 8008524:	60fb      	str	r3, [r7, #12]
 8008526:	68fb      	ldr	r3, [r7, #12]
 8008528:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800852c:	60fb      	str	r3, [r7, #12]
 800852e:	683a      	ldr	r2, [r7, #0]
 8008530:	68fb      	ldr	r3, [r7, #12]
 8008532:	4313      	orrs	r3, r2
 8008534:	f043 0307 	orr.w	r3, r3, #7
 8008538:	60fb      	str	r3, [r7, #12]
 800853a:	687b      	ldr	r3, [r7, #4]
 800853c:	68fa      	ldr	r2, [r7, #12]
 800853e:	609a      	str	r2, [r3, #8]
 8008540:	bf00      	nop
 8008542:	3714      	adds	r7, #20
 8008544:	46bd      	mov	sp, r7
 8008546:	f85d 7b04 	ldr.w	r7, [sp], #4
 800854a:	4770      	bx	lr

0800854c <TIM_ETR_SetConfig>:
 800854c:	b480      	push	{r7}
 800854e:	b087      	sub	sp, #28
 8008550:	af00      	add	r7, sp, #0
 8008552:	60f8      	str	r0, [r7, #12]
 8008554:	60b9      	str	r1, [r7, #8]
 8008556:	607a      	str	r2, [r7, #4]
 8008558:	603b      	str	r3, [r7, #0]
 800855a:	68fb      	ldr	r3, [r7, #12]
 800855c:	689b      	ldr	r3, [r3, #8]
 800855e:	617b      	str	r3, [r7, #20]
 8008560:	697b      	ldr	r3, [r7, #20]
 8008562:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8008566:	617b      	str	r3, [r7, #20]
 8008568:	683b      	ldr	r3, [r7, #0]
 800856a:	021a      	lsls	r2, r3, #8
 800856c:	687b      	ldr	r3, [r7, #4]
 800856e:	431a      	orrs	r2, r3
 8008570:	68bb      	ldr	r3, [r7, #8]
 8008572:	4313      	orrs	r3, r2
 8008574:	697a      	ldr	r2, [r7, #20]
 8008576:	4313      	orrs	r3, r2
 8008578:	617b      	str	r3, [r7, #20]
 800857a:	68fb      	ldr	r3, [r7, #12]
 800857c:	697a      	ldr	r2, [r7, #20]
 800857e:	609a      	str	r2, [r3, #8]
 8008580:	bf00      	nop
 8008582:	371c      	adds	r7, #28
 8008584:	46bd      	mov	sp, r7
 8008586:	f85d 7b04 	ldr.w	r7, [sp], #4
 800858a:	4770      	bx	lr

0800858c <TIM_CCxChannelCmd>:
 800858c:	b480      	push	{r7}
 800858e:	b087      	sub	sp, #28
 8008590:	af00      	add	r7, sp, #0
 8008592:	60f8      	str	r0, [r7, #12]
 8008594:	60b9      	str	r1, [r7, #8]
 8008596:	607a      	str	r2, [r7, #4]
 8008598:	68bb      	ldr	r3, [r7, #8]
 800859a:	f003 031f 	and.w	r3, r3, #31
 800859e:	2201      	movs	r2, #1
 80085a0:	fa02 f303 	lsl.w	r3, r2, r3
 80085a4:	617b      	str	r3, [r7, #20]
 80085a6:	68fb      	ldr	r3, [r7, #12]
 80085a8:	6a1a      	ldr	r2, [r3, #32]
 80085aa:	697b      	ldr	r3, [r7, #20]
 80085ac:	43db      	mvns	r3, r3
 80085ae:	401a      	ands	r2, r3
 80085b0:	68fb      	ldr	r3, [r7, #12]
 80085b2:	621a      	str	r2, [r3, #32]
 80085b4:	68fb      	ldr	r3, [r7, #12]
 80085b6:	6a1a      	ldr	r2, [r3, #32]
 80085b8:	68bb      	ldr	r3, [r7, #8]
 80085ba:	f003 031f 	and.w	r3, r3, #31
 80085be:	6879      	ldr	r1, [r7, #4]
 80085c0:	fa01 f303 	lsl.w	r3, r1, r3
 80085c4:	431a      	orrs	r2, r3
 80085c6:	68fb      	ldr	r3, [r7, #12]
 80085c8:	621a      	str	r2, [r3, #32]
 80085ca:	bf00      	nop
 80085cc:	371c      	adds	r7, #28
 80085ce:	46bd      	mov	sp, r7
 80085d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085d4:	4770      	bx	lr
	...

080085d8 <HAL_TIMEx_MasterConfigSynchronization>:
 80085d8:	b480      	push	{r7}
 80085da:	b085      	sub	sp, #20
 80085dc:	af00      	add	r7, sp, #0
 80085de:	6078      	str	r0, [r7, #4]
 80085e0:	6039      	str	r1, [r7, #0]
 80085e2:	687b      	ldr	r3, [r7, #4]
 80085e4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80085e8:	2b01      	cmp	r3, #1
 80085ea:	d101      	bne.n	80085f0 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80085ec:	2302      	movs	r3, #2
 80085ee:	e06d      	b.n	80086cc <HAL_TIMEx_MasterConfigSynchronization+0xf4>
 80085f0:	687b      	ldr	r3, [r7, #4]
 80085f2:	2201      	movs	r2, #1
 80085f4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80085f8:	687b      	ldr	r3, [r7, #4]
 80085fa:	2202      	movs	r2, #2
 80085fc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008600:	687b      	ldr	r3, [r7, #4]
 8008602:	681b      	ldr	r3, [r3, #0]
 8008604:	685b      	ldr	r3, [r3, #4]
 8008606:	60fb      	str	r3, [r7, #12]
 8008608:	687b      	ldr	r3, [r7, #4]
 800860a:	681b      	ldr	r3, [r3, #0]
 800860c:	689b      	ldr	r3, [r3, #8]
 800860e:	60bb      	str	r3, [r7, #8]
 8008610:	687b      	ldr	r3, [r7, #4]
 8008612:	681b      	ldr	r3, [r3, #0]
 8008614:	4a30      	ldr	r2, [pc, #192]	; (80086d8 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 8008616:	4293      	cmp	r3, r2
 8008618:	d004      	beq.n	8008624 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 800861a:	687b      	ldr	r3, [r7, #4]
 800861c:	681b      	ldr	r3, [r3, #0]
 800861e:	4a2f      	ldr	r2, [pc, #188]	; (80086dc <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 8008620:	4293      	cmp	r3, r2
 8008622:	d108      	bne.n	8008636 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008624:	68fb      	ldr	r3, [r7, #12]
 8008626:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800862a:	60fb      	str	r3, [r7, #12]
 800862c:	683b      	ldr	r3, [r7, #0]
 800862e:	685b      	ldr	r3, [r3, #4]
 8008630:	68fa      	ldr	r2, [r7, #12]
 8008632:	4313      	orrs	r3, r2
 8008634:	60fb      	str	r3, [r7, #12]
 8008636:	68fb      	ldr	r3, [r7, #12]
 8008638:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800863c:	60fb      	str	r3, [r7, #12]
 800863e:	683b      	ldr	r3, [r7, #0]
 8008640:	681b      	ldr	r3, [r3, #0]
 8008642:	68fa      	ldr	r2, [r7, #12]
 8008644:	4313      	orrs	r3, r2
 8008646:	60fb      	str	r3, [r7, #12]
 8008648:	687b      	ldr	r3, [r7, #4]
 800864a:	681b      	ldr	r3, [r3, #0]
 800864c:	68fa      	ldr	r2, [r7, #12]
 800864e:	605a      	str	r2, [r3, #4]
 8008650:	687b      	ldr	r3, [r7, #4]
 8008652:	681b      	ldr	r3, [r3, #0]
 8008654:	4a20      	ldr	r2, [pc, #128]	; (80086d8 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 8008656:	4293      	cmp	r3, r2
 8008658:	d022      	beq.n	80086a0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800865a:	687b      	ldr	r3, [r7, #4]
 800865c:	681b      	ldr	r3, [r3, #0]
 800865e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008662:	d01d      	beq.n	80086a0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8008664:	687b      	ldr	r3, [r7, #4]
 8008666:	681b      	ldr	r3, [r3, #0]
 8008668:	4a1d      	ldr	r2, [pc, #116]	; (80086e0 <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 800866a:	4293      	cmp	r3, r2
 800866c:	d018      	beq.n	80086a0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800866e:	687b      	ldr	r3, [r7, #4]
 8008670:	681b      	ldr	r3, [r3, #0]
 8008672:	4a1c      	ldr	r2, [pc, #112]	; (80086e4 <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 8008674:	4293      	cmp	r3, r2
 8008676:	d013      	beq.n	80086a0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8008678:	687b      	ldr	r3, [r7, #4]
 800867a:	681b      	ldr	r3, [r3, #0]
 800867c:	4a1a      	ldr	r2, [pc, #104]	; (80086e8 <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 800867e:	4293      	cmp	r3, r2
 8008680:	d00e      	beq.n	80086a0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8008682:	687b      	ldr	r3, [r7, #4]
 8008684:	681b      	ldr	r3, [r3, #0]
 8008686:	4a15      	ldr	r2, [pc, #84]	; (80086dc <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 8008688:	4293      	cmp	r3, r2
 800868a:	d009      	beq.n	80086a0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800868c:	687b      	ldr	r3, [r7, #4]
 800868e:	681b      	ldr	r3, [r3, #0]
 8008690:	4a16      	ldr	r2, [pc, #88]	; (80086ec <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 8008692:	4293      	cmp	r3, r2
 8008694:	d004      	beq.n	80086a0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8008696:	687b      	ldr	r3, [r7, #4]
 8008698:	681b      	ldr	r3, [r3, #0]
 800869a:	4a15      	ldr	r2, [pc, #84]	; (80086f0 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 800869c:	4293      	cmp	r3, r2
 800869e:	d10c      	bne.n	80086ba <HAL_TIMEx_MasterConfigSynchronization+0xe2>
 80086a0:	68bb      	ldr	r3, [r7, #8]
 80086a2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80086a6:	60bb      	str	r3, [r7, #8]
 80086a8:	683b      	ldr	r3, [r7, #0]
 80086aa:	689b      	ldr	r3, [r3, #8]
 80086ac:	68ba      	ldr	r2, [r7, #8]
 80086ae:	4313      	orrs	r3, r2
 80086b0:	60bb      	str	r3, [r7, #8]
 80086b2:	687b      	ldr	r3, [r7, #4]
 80086b4:	681b      	ldr	r3, [r3, #0]
 80086b6:	68ba      	ldr	r2, [r7, #8]
 80086b8:	609a      	str	r2, [r3, #8]
 80086ba:	687b      	ldr	r3, [r7, #4]
 80086bc:	2201      	movs	r2, #1
 80086be:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80086c2:	687b      	ldr	r3, [r7, #4]
 80086c4:	2200      	movs	r2, #0
 80086c6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80086ca:	2300      	movs	r3, #0
 80086cc:	4618      	mov	r0, r3
 80086ce:	3714      	adds	r7, #20
 80086d0:	46bd      	mov	sp, r7
 80086d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086d6:	4770      	bx	lr
 80086d8:	40010000 	.word	0x40010000
 80086dc:	40010400 	.word	0x40010400
 80086e0:	40000400 	.word	0x40000400
 80086e4:	40000800 	.word	0x40000800
 80086e8:	40000c00 	.word	0x40000c00
 80086ec:	40014000 	.word	0x40014000
 80086f0:	40001800 	.word	0x40001800

080086f4 <HAL_TIMEx_CommutCallback>:
 80086f4:	b480      	push	{r7}
 80086f6:	b083      	sub	sp, #12
 80086f8:	af00      	add	r7, sp, #0
 80086fa:	6078      	str	r0, [r7, #4]
 80086fc:	bf00      	nop
 80086fe:	370c      	adds	r7, #12
 8008700:	46bd      	mov	sp, r7
 8008702:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008706:	4770      	bx	lr

08008708 <HAL_TIMEx_BreakCallback>:
 8008708:	b480      	push	{r7}
 800870a:	b083      	sub	sp, #12
 800870c:	af00      	add	r7, sp, #0
 800870e:	6078      	str	r0, [r7, #4]
 8008710:	bf00      	nop
 8008712:	370c      	adds	r7, #12
 8008714:	46bd      	mov	sp, r7
 8008716:	f85d 7b04 	ldr.w	r7, [sp], #4
 800871a:	4770      	bx	lr

0800871c <HAL_TIMEx_Break2Callback>:
 800871c:	b480      	push	{r7}
 800871e:	b083      	sub	sp, #12
 8008720:	af00      	add	r7, sp, #0
 8008722:	6078      	str	r0, [r7, #4]
 8008724:	bf00      	nop
 8008726:	370c      	adds	r7, #12
 8008728:	46bd      	mov	sp, r7
 800872a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800872e:	4770      	bx	lr

08008730 <HAL_UART_Init>:
 8008730:	b580      	push	{r7, lr}
 8008732:	b082      	sub	sp, #8
 8008734:	af00      	add	r7, sp, #0
 8008736:	6078      	str	r0, [r7, #4]
 8008738:	687b      	ldr	r3, [r7, #4]
 800873a:	2b00      	cmp	r3, #0
 800873c:	d101      	bne.n	8008742 <HAL_UART_Init+0x12>
 800873e:	2301      	movs	r3, #1
 8008740:	e040      	b.n	80087c4 <HAL_UART_Init+0x94>
 8008742:	687b      	ldr	r3, [r7, #4]
 8008744:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8008746:	2b00      	cmp	r3, #0
 8008748:	d106      	bne.n	8008758 <HAL_UART_Init+0x28>
 800874a:	687b      	ldr	r3, [r7, #4]
 800874c:	2200      	movs	r2, #0
 800874e:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 8008752:	6878      	ldr	r0, [r7, #4]
 8008754:	f7fa fde4 	bl	8003320 <HAL_UART_MspInit>
 8008758:	687b      	ldr	r3, [r7, #4]
 800875a:	2224      	movs	r2, #36	; 0x24
 800875c:	67da      	str	r2, [r3, #124]	; 0x7c
 800875e:	687b      	ldr	r3, [r7, #4]
 8008760:	681b      	ldr	r3, [r3, #0]
 8008762:	681a      	ldr	r2, [r3, #0]
 8008764:	687b      	ldr	r3, [r7, #4]
 8008766:	681b      	ldr	r3, [r3, #0]
 8008768:	f022 0201 	bic.w	r2, r2, #1
 800876c:	601a      	str	r2, [r3, #0]
 800876e:	6878      	ldr	r0, [r7, #4]
 8008770:	f000 fbc0 	bl	8008ef4 <UART_SetConfig>
 8008774:	4603      	mov	r3, r0
 8008776:	2b01      	cmp	r3, #1
 8008778:	d101      	bne.n	800877e <HAL_UART_Init+0x4e>
 800877a:	2301      	movs	r3, #1
 800877c:	e022      	b.n	80087c4 <HAL_UART_Init+0x94>
 800877e:	687b      	ldr	r3, [r7, #4]
 8008780:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008782:	2b00      	cmp	r3, #0
 8008784:	d002      	beq.n	800878c <HAL_UART_Init+0x5c>
 8008786:	6878      	ldr	r0, [r7, #4]
 8008788:	f000 fe18 	bl	80093bc <UART_AdvFeatureConfig>
 800878c:	687b      	ldr	r3, [r7, #4]
 800878e:	681b      	ldr	r3, [r3, #0]
 8008790:	685a      	ldr	r2, [r3, #4]
 8008792:	687b      	ldr	r3, [r7, #4]
 8008794:	681b      	ldr	r3, [r3, #0]
 8008796:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800879a:	605a      	str	r2, [r3, #4]
 800879c:	687b      	ldr	r3, [r7, #4]
 800879e:	681b      	ldr	r3, [r3, #0]
 80087a0:	689a      	ldr	r2, [r3, #8]
 80087a2:	687b      	ldr	r3, [r7, #4]
 80087a4:	681b      	ldr	r3, [r3, #0]
 80087a6:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80087aa:	609a      	str	r2, [r3, #8]
 80087ac:	687b      	ldr	r3, [r7, #4]
 80087ae:	681b      	ldr	r3, [r3, #0]
 80087b0:	681a      	ldr	r2, [r3, #0]
 80087b2:	687b      	ldr	r3, [r7, #4]
 80087b4:	681b      	ldr	r3, [r3, #0]
 80087b6:	f042 0201 	orr.w	r2, r2, #1
 80087ba:	601a      	str	r2, [r3, #0]
 80087bc:	6878      	ldr	r0, [r7, #4]
 80087be:	f000 fe9f 	bl	8009500 <UART_CheckIdleState>
 80087c2:	4603      	mov	r3, r0
 80087c4:	4618      	mov	r0, r3
 80087c6:	3708      	adds	r7, #8
 80087c8:	46bd      	mov	sp, r7
 80087ca:	bd80      	pop	{r7, pc}

080087cc <HAL_UART_Transmit_IT>:
 80087cc:	b480      	push	{r7}
 80087ce:	b08b      	sub	sp, #44	; 0x2c
 80087d0:	af00      	add	r7, sp, #0
 80087d2:	60f8      	str	r0, [r7, #12]
 80087d4:	60b9      	str	r1, [r7, #8]
 80087d6:	4613      	mov	r3, r2
 80087d8:	80fb      	strh	r3, [r7, #6]
 80087da:	68fb      	ldr	r3, [r7, #12]
 80087dc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80087de:	2b20      	cmp	r3, #32
 80087e0:	d147      	bne.n	8008872 <HAL_UART_Transmit_IT+0xa6>
 80087e2:	68bb      	ldr	r3, [r7, #8]
 80087e4:	2b00      	cmp	r3, #0
 80087e6:	d002      	beq.n	80087ee <HAL_UART_Transmit_IT+0x22>
 80087e8:	88fb      	ldrh	r3, [r7, #6]
 80087ea:	2b00      	cmp	r3, #0
 80087ec:	d101      	bne.n	80087f2 <HAL_UART_Transmit_IT+0x26>
 80087ee:	2301      	movs	r3, #1
 80087f0:	e040      	b.n	8008874 <HAL_UART_Transmit_IT+0xa8>
 80087f2:	68fb      	ldr	r3, [r7, #12]
 80087f4:	68ba      	ldr	r2, [r7, #8]
 80087f6:	64da      	str	r2, [r3, #76]	; 0x4c
 80087f8:	68fb      	ldr	r3, [r7, #12]
 80087fa:	88fa      	ldrh	r2, [r7, #6]
 80087fc:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 8008800:	68fb      	ldr	r3, [r7, #12]
 8008802:	88fa      	ldrh	r2, [r7, #6]
 8008804:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8008808:	68fb      	ldr	r3, [r7, #12]
 800880a:	2200      	movs	r2, #0
 800880c:	66da      	str	r2, [r3, #108]	; 0x6c
 800880e:	68fb      	ldr	r3, [r7, #12]
 8008810:	2200      	movs	r2, #0
 8008812:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8008816:	68fb      	ldr	r3, [r7, #12]
 8008818:	2221      	movs	r2, #33	; 0x21
 800881a:	67da      	str	r2, [r3, #124]	; 0x7c
 800881c:	68fb      	ldr	r3, [r7, #12]
 800881e:	689b      	ldr	r3, [r3, #8]
 8008820:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008824:	d107      	bne.n	8008836 <HAL_UART_Transmit_IT+0x6a>
 8008826:	68fb      	ldr	r3, [r7, #12]
 8008828:	691b      	ldr	r3, [r3, #16]
 800882a:	2b00      	cmp	r3, #0
 800882c:	d103      	bne.n	8008836 <HAL_UART_Transmit_IT+0x6a>
 800882e:	68fb      	ldr	r3, [r7, #12]
 8008830:	4a13      	ldr	r2, [pc, #76]	; (8008880 <HAL_UART_Transmit_IT+0xb4>)
 8008832:	66da      	str	r2, [r3, #108]	; 0x6c
 8008834:	e002      	b.n	800883c <HAL_UART_Transmit_IT+0x70>
 8008836:	68fb      	ldr	r3, [r7, #12]
 8008838:	4a12      	ldr	r2, [pc, #72]	; (8008884 <HAL_UART_Transmit_IT+0xb8>)
 800883a:	66da      	str	r2, [r3, #108]	; 0x6c
 800883c:	68fb      	ldr	r3, [r7, #12]
 800883e:	681b      	ldr	r3, [r3, #0]
 8008840:	617b      	str	r3, [r7, #20]
 8008842:	697b      	ldr	r3, [r7, #20]
 8008844:	e853 3f00 	ldrex	r3, [r3]
 8008848:	613b      	str	r3, [r7, #16]
 800884a:	693b      	ldr	r3, [r7, #16]
 800884c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008850:	627b      	str	r3, [r7, #36]	; 0x24
 8008852:	68fb      	ldr	r3, [r7, #12]
 8008854:	681b      	ldr	r3, [r3, #0]
 8008856:	461a      	mov	r2, r3
 8008858:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800885a:	623b      	str	r3, [r7, #32]
 800885c:	61fa      	str	r2, [r7, #28]
 800885e:	69f9      	ldr	r1, [r7, #28]
 8008860:	6a3a      	ldr	r2, [r7, #32]
 8008862:	e841 2300 	strex	r3, r2, [r1]
 8008866:	61bb      	str	r3, [r7, #24]
 8008868:	69bb      	ldr	r3, [r7, #24]
 800886a:	2b00      	cmp	r3, #0
 800886c:	d1e6      	bne.n	800883c <HAL_UART_Transmit_IT+0x70>
 800886e:	2300      	movs	r3, #0
 8008870:	e000      	b.n	8008874 <HAL_UART_Transmit_IT+0xa8>
 8008872:	2302      	movs	r3, #2
 8008874:	4618      	mov	r0, r3
 8008876:	372c      	adds	r7, #44	; 0x2c
 8008878:	46bd      	mov	sp, r7
 800887a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800887e:	4770      	bx	lr
 8008880:	08009a33 	.word	0x08009a33
 8008884:	0800997d 	.word	0x0800997d

08008888 <HAL_UART_Receive_IT>:
 8008888:	b580      	push	{r7, lr}
 800888a:	b08a      	sub	sp, #40	; 0x28
 800888c:	af00      	add	r7, sp, #0
 800888e:	60f8      	str	r0, [r7, #12]
 8008890:	60b9      	str	r1, [r7, #8]
 8008892:	4613      	mov	r3, r2
 8008894:	80fb      	strh	r3, [r7, #6]
 8008896:	68fb      	ldr	r3, [r7, #12]
 8008898:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800889c:	2b20      	cmp	r3, #32
 800889e:	d132      	bne.n	8008906 <HAL_UART_Receive_IT+0x7e>
 80088a0:	68bb      	ldr	r3, [r7, #8]
 80088a2:	2b00      	cmp	r3, #0
 80088a4:	d002      	beq.n	80088ac <HAL_UART_Receive_IT+0x24>
 80088a6:	88fb      	ldrh	r3, [r7, #6]
 80088a8:	2b00      	cmp	r3, #0
 80088aa:	d101      	bne.n	80088b0 <HAL_UART_Receive_IT+0x28>
 80088ac:	2301      	movs	r3, #1
 80088ae:	e02b      	b.n	8008908 <HAL_UART_Receive_IT+0x80>
 80088b0:	68fb      	ldr	r3, [r7, #12]
 80088b2:	2200      	movs	r2, #0
 80088b4:	661a      	str	r2, [r3, #96]	; 0x60
 80088b6:	68fb      	ldr	r3, [r7, #12]
 80088b8:	681b      	ldr	r3, [r3, #0]
 80088ba:	685b      	ldr	r3, [r3, #4]
 80088bc:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80088c0:	2b00      	cmp	r3, #0
 80088c2:	d018      	beq.n	80088f6 <HAL_UART_Receive_IT+0x6e>
 80088c4:	68fb      	ldr	r3, [r7, #12]
 80088c6:	681b      	ldr	r3, [r3, #0]
 80088c8:	617b      	str	r3, [r7, #20]
 80088ca:	697b      	ldr	r3, [r7, #20]
 80088cc:	e853 3f00 	ldrex	r3, [r3]
 80088d0:	613b      	str	r3, [r7, #16]
 80088d2:	693b      	ldr	r3, [r7, #16]
 80088d4:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80088d8:	627b      	str	r3, [r7, #36]	; 0x24
 80088da:	68fb      	ldr	r3, [r7, #12]
 80088dc:	681b      	ldr	r3, [r3, #0]
 80088de:	461a      	mov	r2, r3
 80088e0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80088e2:	623b      	str	r3, [r7, #32]
 80088e4:	61fa      	str	r2, [r7, #28]
 80088e6:	69f9      	ldr	r1, [r7, #28]
 80088e8:	6a3a      	ldr	r2, [r7, #32]
 80088ea:	e841 2300 	strex	r3, r2, [r1]
 80088ee:	61bb      	str	r3, [r7, #24]
 80088f0:	69bb      	ldr	r3, [r7, #24]
 80088f2:	2b00      	cmp	r3, #0
 80088f4:	d1e6      	bne.n	80088c4 <HAL_UART_Receive_IT+0x3c>
 80088f6:	88fb      	ldrh	r3, [r7, #6]
 80088f8:	461a      	mov	r2, r3
 80088fa:	68b9      	ldr	r1, [r7, #8]
 80088fc:	68f8      	ldr	r0, [r7, #12]
 80088fe:	f000 fefd 	bl	80096fc <UART_Start_Receive_IT>
 8008902:	4603      	mov	r3, r0
 8008904:	e000      	b.n	8008908 <HAL_UART_Receive_IT+0x80>
 8008906:	2302      	movs	r3, #2
 8008908:	4618      	mov	r0, r3
 800890a:	3728      	adds	r7, #40	; 0x28
 800890c:	46bd      	mov	sp, r7
 800890e:	bd80      	pop	{r7, pc}

08008910 <HAL_UART_IRQHandler>:
 8008910:	b580      	push	{r7, lr}
 8008912:	b0ba      	sub	sp, #232	; 0xe8
 8008914:	af00      	add	r7, sp, #0
 8008916:	6078      	str	r0, [r7, #4]
 8008918:	687b      	ldr	r3, [r7, #4]
 800891a:	681b      	ldr	r3, [r3, #0]
 800891c:	69db      	ldr	r3, [r3, #28]
 800891e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8008922:	687b      	ldr	r3, [r7, #4]
 8008924:	681b      	ldr	r3, [r3, #0]
 8008926:	681b      	ldr	r3, [r3, #0]
 8008928:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800892c:	687b      	ldr	r3, [r7, #4]
 800892e:	681b      	ldr	r3, [r3, #0]
 8008930:	689b      	ldr	r3, [r3, #8]
 8008932:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8008936:	f8d7 20e4 	ldr.w	r2, [r7, #228]	; 0xe4
 800893a:	f640 030f 	movw	r3, #2063	; 0x80f
 800893e:	4013      	ands	r3, r2
 8008940:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8008944:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8008948:	2b00      	cmp	r3, #0
 800894a:	d115      	bne.n	8008978 <HAL_UART_IRQHandler+0x68>
 800894c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8008950:	f003 0320 	and.w	r3, r3, #32
 8008954:	2b00      	cmp	r3, #0
 8008956:	d00f      	beq.n	8008978 <HAL_UART_IRQHandler+0x68>
 8008958:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800895c:	f003 0320 	and.w	r3, r3, #32
 8008960:	2b00      	cmp	r3, #0
 8008962:	d009      	beq.n	8008978 <HAL_UART_IRQHandler+0x68>
 8008964:	687b      	ldr	r3, [r7, #4]
 8008966:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8008968:	2b00      	cmp	r3, #0
 800896a:	f000 8297 	beq.w	8008e9c <HAL_UART_IRQHandler+0x58c>
 800896e:	687b      	ldr	r3, [r7, #4]
 8008970:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8008972:	6878      	ldr	r0, [r7, #4]
 8008974:	4798      	blx	r3
 8008976:	e291      	b.n	8008e9c <HAL_UART_IRQHandler+0x58c>
 8008978:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800897c:	2b00      	cmp	r3, #0
 800897e:	f000 8117 	beq.w	8008bb0 <HAL_UART_IRQHandler+0x2a0>
 8008982:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8008986:	f003 0301 	and.w	r3, r3, #1
 800898a:	2b00      	cmp	r3, #0
 800898c:	d106      	bne.n	800899c <HAL_UART_IRQHandler+0x8c>
 800898e:	f8d7 20e0 	ldr.w	r2, [r7, #224]	; 0xe0
 8008992:	4b85      	ldr	r3, [pc, #532]	; (8008ba8 <HAL_UART_IRQHandler+0x298>)
 8008994:	4013      	ands	r3, r2
 8008996:	2b00      	cmp	r3, #0
 8008998:	f000 810a 	beq.w	8008bb0 <HAL_UART_IRQHandler+0x2a0>
 800899c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80089a0:	f003 0301 	and.w	r3, r3, #1
 80089a4:	2b00      	cmp	r3, #0
 80089a6:	d011      	beq.n	80089cc <HAL_UART_IRQHandler+0xbc>
 80089a8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80089ac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80089b0:	2b00      	cmp	r3, #0
 80089b2:	d00b      	beq.n	80089cc <HAL_UART_IRQHandler+0xbc>
 80089b4:	687b      	ldr	r3, [r7, #4]
 80089b6:	681b      	ldr	r3, [r3, #0]
 80089b8:	2201      	movs	r2, #1
 80089ba:	621a      	str	r2, [r3, #32]
 80089bc:	687b      	ldr	r3, [r7, #4]
 80089be:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80089c2:	f043 0201 	orr.w	r2, r3, #1
 80089c6:	687b      	ldr	r3, [r7, #4]
 80089c8:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 80089cc:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80089d0:	f003 0302 	and.w	r3, r3, #2
 80089d4:	2b00      	cmp	r3, #0
 80089d6:	d011      	beq.n	80089fc <HAL_UART_IRQHandler+0xec>
 80089d8:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80089dc:	f003 0301 	and.w	r3, r3, #1
 80089e0:	2b00      	cmp	r3, #0
 80089e2:	d00b      	beq.n	80089fc <HAL_UART_IRQHandler+0xec>
 80089e4:	687b      	ldr	r3, [r7, #4]
 80089e6:	681b      	ldr	r3, [r3, #0]
 80089e8:	2202      	movs	r2, #2
 80089ea:	621a      	str	r2, [r3, #32]
 80089ec:	687b      	ldr	r3, [r7, #4]
 80089ee:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80089f2:	f043 0204 	orr.w	r2, r3, #4
 80089f6:	687b      	ldr	r3, [r7, #4]
 80089f8:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 80089fc:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8008a00:	f003 0304 	and.w	r3, r3, #4
 8008a04:	2b00      	cmp	r3, #0
 8008a06:	d011      	beq.n	8008a2c <HAL_UART_IRQHandler+0x11c>
 8008a08:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8008a0c:	f003 0301 	and.w	r3, r3, #1
 8008a10:	2b00      	cmp	r3, #0
 8008a12:	d00b      	beq.n	8008a2c <HAL_UART_IRQHandler+0x11c>
 8008a14:	687b      	ldr	r3, [r7, #4]
 8008a16:	681b      	ldr	r3, [r3, #0]
 8008a18:	2204      	movs	r2, #4
 8008a1a:	621a      	str	r2, [r3, #32]
 8008a1c:	687b      	ldr	r3, [r7, #4]
 8008a1e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8008a22:	f043 0202 	orr.w	r2, r3, #2
 8008a26:	687b      	ldr	r3, [r7, #4]
 8008a28:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8008a2c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8008a30:	f003 0308 	and.w	r3, r3, #8
 8008a34:	2b00      	cmp	r3, #0
 8008a36:	d017      	beq.n	8008a68 <HAL_UART_IRQHandler+0x158>
 8008a38:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8008a3c:	f003 0320 	and.w	r3, r3, #32
 8008a40:	2b00      	cmp	r3, #0
 8008a42:	d105      	bne.n	8008a50 <HAL_UART_IRQHandler+0x140>
 8008a44:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8008a48:	f003 0301 	and.w	r3, r3, #1
 8008a4c:	2b00      	cmp	r3, #0
 8008a4e:	d00b      	beq.n	8008a68 <HAL_UART_IRQHandler+0x158>
 8008a50:	687b      	ldr	r3, [r7, #4]
 8008a52:	681b      	ldr	r3, [r3, #0]
 8008a54:	2208      	movs	r2, #8
 8008a56:	621a      	str	r2, [r3, #32]
 8008a58:	687b      	ldr	r3, [r7, #4]
 8008a5a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8008a5e:	f043 0208 	orr.w	r2, r3, #8
 8008a62:	687b      	ldr	r3, [r7, #4]
 8008a64:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8008a68:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8008a6c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8008a70:	2b00      	cmp	r3, #0
 8008a72:	d012      	beq.n	8008a9a <HAL_UART_IRQHandler+0x18a>
 8008a74:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8008a78:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8008a7c:	2b00      	cmp	r3, #0
 8008a7e:	d00c      	beq.n	8008a9a <HAL_UART_IRQHandler+0x18a>
 8008a80:	687b      	ldr	r3, [r7, #4]
 8008a82:	681b      	ldr	r3, [r3, #0]
 8008a84:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8008a88:	621a      	str	r2, [r3, #32]
 8008a8a:	687b      	ldr	r3, [r7, #4]
 8008a8c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8008a90:	f043 0220 	orr.w	r2, r3, #32
 8008a94:	687b      	ldr	r3, [r7, #4]
 8008a96:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8008a9a:	687b      	ldr	r3, [r7, #4]
 8008a9c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8008aa0:	2b00      	cmp	r3, #0
 8008aa2:	f000 81fd 	beq.w	8008ea0 <HAL_UART_IRQHandler+0x590>
 8008aa6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8008aaa:	f003 0320 	and.w	r3, r3, #32
 8008aae:	2b00      	cmp	r3, #0
 8008ab0:	d00d      	beq.n	8008ace <HAL_UART_IRQHandler+0x1be>
 8008ab2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8008ab6:	f003 0320 	and.w	r3, r3, #32
 8008aba:	2b00      	cmp	r3, #0
 8008abc:	d007      	beq.n	8008ace <HAL_UART_IRQHandler+0x1be>
 8008abe:	687b      	ldr	r3, [r7, #4]
 8008ac0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8008ac2:	2b00      	cmp	r3, #0
 8008ac4:	d003      	beq.n	8008ace <HAL_UART_IRQHandler+0x1be>
 8008ac6:	687b      	ldr	r3, [r7, #4]
 8008ac8:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8008aca:	6878      	ldr	r0, [r7, #4]
 8008acc:	4798      	blx	r3
 8008ace:	687b      	ldr	r3, [r7, #4]
 8008ad0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8008ad4:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8008ad8:	687b      	ldr	r3, [r7, #4]
 8008ada:	681b      	ldr	r3, [r3, #0]
 8008adc:	689b      	ldr	r3, [r3, #8]
 8008ade:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008ae2:	2b40      	cmp	r3, #64	; 0x40
 8008ae4:	d005      	beq.n	8008af2 <HAL_UART_IRQHandler+0x1e2>
 8008ae6:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8008aea:	f003 0328 	and.w	r3, r3, #40	; 0x28
 8008aee:	2b00      	cmp	r3, #0
 8008af0:	d04f      	beq.n	8008b92 <HAL_UART_IRQHandler+0x282>
 8008af2:	6878      	ldr	r0, [r7, #4]
 8008af4:	f000 fec8 	bl	8009888 <UART_EndRxTransfer>
 8008af8:	687b      	ldr	r3, [r7, #4]
 8008afa:	681b      	ldr	r3, [r3, #0]
 8008afc:	689b      	ldr	r3, [r3, #8]
 8008afe:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008b02:	2b40      	cmp	r3, #64	; 0x40
 8008b04:	d141      	bne.n	8008b8a <HAL_UART_IRQHandler+0x27a>
 8008b06:	687b      	ldr	r3, [r7, #4]
 8008b08:	681b      	ldr	r3, [r3, #0]
 8008b0a:	3308      	adds	r3, #8
 8008b0c:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8008b10:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8008b14:	e853 3f00 	ldrex	r3, [r3]
 8008b18:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8008b1c:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8008b20:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8008b24:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8008b28:	687b      	ldr	r3, [r7, #4]
 8008b2a:	681b      	ldr	r3, [r3, #0]
 8008b2c:	3308      	adds	r3, #8
 8008b2e:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 8008b32:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 8008b36:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8008b3a:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 8008b3e:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 8008b42:	e841 2300 	strex	r3, r2, [r1]
 8008b46:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8008b4a:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8008b4e:	2b00      	cmp	r3, #0
 8008b50:	d1d9      	bne.n	8008b06 <HAL_UART_IRQHandler+0x1f6>
 8008b52:	687b      	ldr	r3, [r7, #4]
 8008b54:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008b56:	2b00      	cmp	r3, #0
 8008b58:	d013      	beq.n	8008b82 <HAL_UART_IRQHandler+0x272>
 8008b5a:	687b      	ldr	r3, [r7, #4]
 8008b5c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008b5e:	4a13      	ldr	r2, [pc, #76]	; (8008bac <HAL_UART_IRQHandler+0x29c>)
 8008b60:	651a      	str	r2, [r3, #80]	; 0x50
 8008b62:	687b      	ldr	r3, [r7, #4]
 8008b64:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008b66:	4618      	mov	r0, r3
 8008b68:	f7fa fe6d 	bl	8003846 <HAL_DMA_Abort_IT>
 8008b6c:	4603      	mov	r3, r0
 8008b6e:	2b00      	cmp	r3, #0
 8008b70:	d017      	beq.n	8008ba2 <HAL_UART_IRQHandler+0x292>
 8008b72:	687b      	ldr	r3, [r7, #4]
 8008b74:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008b76:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008b78:	687a      	ldr	r2, [r7, #4]
 8008b7a:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8008b7c:	4610      	mov	r0, r2
 8008b7e:	4798      	blx	r3
 8008b80:	e00f      	b.n	8008ba2 <HAL_UART_IRQHandler+0x292>
 8008b82:	6878      	ldr	r0, [r7, #4]
 8008b84:	f000 f9a0 	bl	8008ec8 <HAL_UART_ErrorCallback>
 8008b88:	e00b      	b.n	8008ba2 <HAL_UART_IRQHandler+0x292>
 8008b8a:	6878      	ldr	r0, [r7, #4]
 8008b8c:	f000 f99c 	bl	8008ec8 <HAL_UART_ErrorCallback>
 8008b90:	e007      	b.n	8008ba2 <HAL_UART_IRQHandler+0x292>
 8008b92:	6878      	ldr	r0, [r7, #4]
 8008b94:	f000 f998 	bl	8008ec8 <HAL_UART_ErrorCallback>
 8008b98:	687b      	ldr	r3, [r7, #4]
 8008b9a:	2200      	movs	r2, #0
 8008b9c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8008ba0:	e17e      	b.n	8008ea0 <HAL_UART_IRQHandler+0x590>
 8008ba2:	bf00      	nop
 8008ba4:	e17c      	b.n	8008ea0 <HAL_UART_IRQHandler+0x590>
 8008ba6:	bf00      	nop
 8008ba8:	04000120 	.word	0x04000120
 8008bac:	08009951 	.word	0x08009951
 8008bb0:	687b      	ldr	r3, [r7, #4]
 8008bb2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8008bb4:	2b01      	cmp	r3, #1
 8008bb6:	f040 814c 	bne.w	8008e52 <HAL_UART_IRQHandler+0x542>
 8008bba:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8008bbe:	f003 0310 	and.w	r3, r3, #16
 8008bc2:	2b00      	cmp	r3, #0
 8008bc4:	f000 8145 	beq.w	8008e52 <HAL_UART_IRQHandler+0x542>
 8008bc8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8008bcc:	f003 0310 	and.w	r3, r3, #16
 8008bd0:	2b00      	cmp	r3, #0
 8008bd2:	f000 813e 	beq.w	8008e52 <HAL_UART_IRQHandler+0x542>
 8008bd6:	687b      	ldr	r3, [r7, #4]
 8008bd8:	681b      	ldr	r3, [r3, #0]
 8008bda:	2210      	movs	r2, #16
 8008bdc:	621a      	str	r2, [r3, #32]
 8008bde:	687b      	ldr	r3, [r7, #4]
 8008be0:	681b      	ldr	r3, [r3, #0]
 8008be2:	689b      	ldr	r3, [r3, #8]
 8008be4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008be8:	2b40      	cmp	r3, #64	; 0x40
 8008bea:	f040 80b6 	bne.w	8008d5a <HAL_UART_IRQHandler+0x44a>
 8008bee:	687b      	ldr	r3, [r7, #4]
 8008bf0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008bf2:	681b      	ldr	r3, [r3, #0]
 8008bf4:	685b      	ldr	r3, [r3, #4]
 8008bf6:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 8008bfa:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 8008bfe:	2b00      	cmp	r3, #0
 8008c00:	f000 8150 	beq.w	8008ea4 <HAL_UART_IRQHandler+0x594>
 8008c04:	687b      	ldr	r3, [r7, #4]
 8008c06:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 8008c0a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8008c0e:	429a      	cmp	r2, r3
 8008c10:	f080 8148 	bcs.w	8008ea4 <HAL_UART_IRQHandler+0x594>
 8008c14:	687b      	ldr	r3, [r7, #4]
 8008c16:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8008c1a:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8008c1e:	687b      	ldr	r3, [r7, #4]
 8008c20:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008c22:	69db      	ldr	r3, [r3, #28]
 8008c24:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008c28:	f000 8086 	beq.w	8008d38 <HAL_UART_IRQHandler+0x428>
 8008c2c:	687b      	ldr	r3, [r7, #4]
 8008c2e:	681b      	ldr	r3, [r3, #0]
 8008c30:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8008c34:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8008c38:	e853 3f00 	ldrex	r3, [r3]
 8008c3c:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8008c40:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8008c44:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8008c48:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8008c4c:	687b      	ldr	r3, [r7, #4]
 8008c4e:	681b      	ldr	r3, [r3, #0]
 8008c50:	461a      	mov	r2, r3
 8008c52:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 8008c56:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8008c5a:	f8c7 2090 	str.w	r2, [r7, #144]	; 0x90
 8008c5e:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 8008c62:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8008c66:	e841 2300 	strex	r3, r2, [r1]
 8008c6a:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8008c6e:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8008c72:	2b00      	cmp	r3, #0
 8008c74:	d1da      	bne.n	8008c2c <HAL_UART_IRQHandler+0x31c>
 8008c76:	687b      	ldr	r3, [r7, #4]
 8008c78:	681b      	ldr	r3, [r3, #0]
 8008c7a:	3308      	adds	r3, #8
 8008c7c:	677b      	str	r3, [r7, #116]	; 0x74
 8008c7e:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8008c80:	e853 3f00 	ldrex	r3, [r3]
 8008c84:	673b      	str	r3, [r7, #112]	; 0x70
 8008c86:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8008c88:	f023 0301 	bic.w	r3, r3, #1
 8008c8c:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8008c90:	687b      	ldr	r3, [r7, #4]
 8008c92:	681b      	ldr	r3, [r3, #0]
 8008c94:	3308      	adds	r3, #8
 8008c96:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8008c9a:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 8008c9e:	67fb      	str	r3, [r7, #124]	; 0x7c
 8008ca0:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 8008ca2:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 8008ca6:	e841 2300 	strex	r3, r2, [r1]
 8008caa:	67bb      	str	r3, [r7, #120]	; 0x78
 8008cac:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8008cae:	2b00      	cmp	r3, #0
 8008cb0:	d1e1      	bne.n	8008c76 <HAL_UART_IRQHandler+0x366>
 8008cb2:	687b      	ldr	r3, [r7, #4]
 8008cb4:	681b      	ldr	r3, [r3, #0]
 8008cb6:	3308      	adds	r3, #8
 8008cb8:	663b      	str	r3, [r7, #96]	; 0x60
 8008cba:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8008cbc:	e853 3f00 	ldrex	r3, [r3]
 8008cc0:	65fb      	str	r3, [r7, #92]	; 0x5c
 8008cc2:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8008cc4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8008cc8:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8008ccc:	687b      	ldr	r3, [r7, #4]
 8008cce:	681b      	ldr	r3, [r3, #0]
 8008cd0:	3308      	adds	r3, #8
 8008cd2:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 8008cd6:	66fa      	str	r2, [r7, #108]	; 0x6c
 8008cd8:	66bb      	str	r3, [r7, #104]	; 0x68
 8008cda:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8008cdc:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8008cde:	e841 2300 	strex	r3, r2, [r1]
 8008ce2:	667b      	str	r3, [r7, #100]	; 0x64
 8008ce4:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8008ce6:	2b00      	cmp	r3, #0
 8008ce8:	d1e3      	bne.n	8008cb2 <HAL_UART_IRQHandler+0x3a2>
 8008cea:	687b      	ldr	r3, [r7, #4]
 8008cec:	2220      	movs	r2, #32
 8008cee:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8008cf2:	687b      	ldr	r3, [r7, #4]
 8008cf4:	2200      	movs	r2, #0
 8008cf6:	661a      	str	r2, [r3, #96]	; 0x60
 8008cf8:	687b      	ldr	r3, [r7, #4]
 8008cfa:	681b      	ldr	r3, [r3, #0]
 8008cfc:	64fb      	str	r3, [r7, #76]	; 0x4c
 8008cfe:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8008d00:	e853 3f00 	ldrex	r3, [r3]
 8008d04:	64bb      	str	r3, [r7, #72]	; 0x48
 8008d06:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8008d08:	f023 0310 	bic.w	r3, r3, #16
 8008d0c:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8008d10:	687b      	ldr	r3, [r7, #4]
 8008d12:	681b      	ldr	r3, [r3, #0]
 8008d14:	461a      	mov	r2, r3
 8008d16:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8008d1a:	65bb      	str	r3, [r7, #88]	; 0x58
 8008d1c:	657a      	str	r2, [r7, #84]	; 0x54
 8008d1e:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8008d20:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8008d22:	e841 2300 	strex	r3, r2, [r1]
 8008d26:	653b      	str	r3, [r7, #80]	; 0x50
 8008d28:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8008d2a:	2b00      	cmp	r3, #0
 8008d2c:	d1e4      	bne.n	8008cf8 <HAL_UART_IRQHandler+0x3e8>
 8008d2e:	687b      	ldr	r3, [r7, #4]
 8008d30:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008d32:	4618      	mov	r0, r3
 8008d34:	f7fa fd17 	bl	8003766 <HAL_DMA_Abort>
 8008d38:	687b      	ldr	r3, [r7, #4]
 8008d3a:	2202      	movs	r2, #2
 8008d3c:	665a      	str	r2, [r3, #100]	; 0x64
 8008d3e:	687b      	ldr	r3, [r7, #4]
 8008d40:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 8008d44:	687b      	ldr	r3, [r7, #4]
 8008d46:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8008d4a:	b29b      	uxth	r3, r3
 8008d4c:	1ad3      	subs	r3, r2, r3
 8008d4e:	b29b      	uxth	r3, r3
 8008d50:	4619      	mov	r1, r3
 8008d52:	6878      	ldr	r0, [r7, #4]
 8008d54:	f000 f8c2 	bl	8008edc <HAL_UARTEx_RxEventCallback>
 8008d58:	e0a4      	b.n	8008ea4 <HAL_UART_IRQHandler+0x594>
 8008d5a:	687b      	ldr	r3, [r7, #4]
 8008d5c:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 8008d60:	687b      	ldr	r3, [r7, #4]
 8008d62:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8008d66:	b29b      	uxth	r3, r3
 8008d68:	1ad3      	subs	r3, r2, r3
 8008d6a:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 8008d6e:	687b      	ldr	r3, [r7, #4]
 8008d70:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8008d74:	b29b      	uxth	r3, r3
 8008d76:	2b00      	cmp	r3, #0
 8008d78:	f000 8096 	beq.w	8008ea8 <HAL_UART_IRQHandler+0x598>
 8008d7c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8008d80:	2b00      	cmp	r3, #0
 8008d82:	f000 8091 	beq.w	8008ea8 <HAL_UART_IRQHandler+0x598>
 8008d86:	687b      	ldr	r3, [r7, #4]
 8008d88:	681b      	ldr	r3, [r3, #0]
 8008d8a:	63bb      	str	r3, [r7, #56]	; 0x38
 8008d8c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008d8e:	e853 3f00 	ldrex	r3, [r3]
 8008d92:	637b      	str	r3, [r7, #52]	; 0x34
 8008d94:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008d96:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8008d9a:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8008d9e:	687b      	ldr	r3, [r7, #4]
 8008da0:	681b      	ldr	r3, [r3, #0]
 8008da2:	461a      	mov	r2, r3
 8008da4:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8008da8:	647b      	str	r3, [r7, #68]	; 0x44
 8008daa:	643a      	str	r2, [r7, #64]	; 0x40
 8008dac:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8008dae:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8008db0:	e841 2300 	strex	r3, r2, [r1]
 8008db4:	63fb      	str	r3, [r7, #60]	; 0x3c
 8008db6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8008db8:	2b00      	cmp	r3, #0
 8008dba:	d1e4      	bne.n	8008d86 <HAL_UART_IRQHandler+0x476>
 8008dbc:	687b      	ldr	r3, [r7, #4]
 8008dbe:	681b      	ldr	r3, [r3, #0]
 8008dc0:	3308      	adds	r3, #8
 8008dc2:	627b      	str	r3, [r7, #36]	; 0x24
 8008dc4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008dc6:	e853 3f00 	ldrex	r3, [r3]
 8008dca:	623b      	str	r3, [r7, #32]
 8008dcc:	6a3b      	ldr	r3, [r7, #32]
 8008dce:	f023 0301 	bic.w	r3, r3, #1
 8008dd2:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8008dd6:	687b      	ldr	r3, [r7, #4]
 8008dd8:	681b      	ldr	r3, [r3, #0]
 8008dda:	3308      	adds	r3, #8
 8008ddc:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 8008de0:	633a      	str	r2, [r7, #48]	; 0x30
 8008de2:	62fb      	str	r3, [r7, #44]	; 0x2c
 8008de4:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8008de6:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8008de8:	e841 2300 	strex	r3, r2, [r1]
 8008dec:	62bb      	str	r3, [r7, #40]	; 0x28
 8008dee:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008df0:	2b00      	cmp	r3, #0
 8008df2:	d1e3      	bne.n	8008dbc <HAL_UART_IRQHandler+0x4ac>
 8008df4:	687b      	ldr	r3, [r7, #4]
 8008df6:	2220      	movs	r2, #32
 8008df8:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8008dfc:	687b      	ldr	r3, [r7, #4]
 8008dfe:	2200      	movs	r2, #0
 8008e00:	661a      	str	r2, [r3, #96]	; 0x60
 8008e02:	687b      	ldr	r3, [r7, #4]
 8008e04:	2200      	movs	r2, #0
 8008e06:	669a      	str	r2, [r3, #104]	; 0x68
 8008e08:	687b      	ldr	r3, [r7, #4]
 8008e0a:	681b      	ldr	r3, [r3, #0]
 8008e0c:	613b      	str	r3, [r7, #16]
 8008e0e:	693b      	ldr	r3, [r7, #16]
 8008e10:	e853 3f00 	ldrex	r3, [r3]
 8008e14:	60fb      	str	r3, [r7, #12]
 8008e16:	68fb      	ldr	r3, [r7, #12]
 8008e18:	f023 0310 	bic.w	r3, r3, #16
 8008e1c:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8008e20:	687b      	ldr	r3, [r7, #4]
 8008e22:	681b      	ldr	r3, [r3, #0]
 8008e24:	461a      	mov	r2, r3
 8008e26:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 8008e2a:	61fb      	str	r3, [r7, #28]
 8008e2c:	61ba      	str	r2, [r7, #24]
 8008e2e:	69b9      	ldr	r1, [r7, #24]
 8008e30:	69fa      	ldr	r2, [r7, #28]
 8008e32:	e841 2300 	strex	r3, r2, [r1]
 8008e36:	617b      	str	r3, [r7, #20]
 8008e38:	697b      	ldr	r3, [r7, #20]
 8008e3a:	2b00      	cmp	r3, #0
 8008e3c:	d1e4      	bne.n	8008e08 <HAL_UART_IRQHandler+0x4f8>
 8008e3e:	687b      	ldr	r3, [r7, #4]
 8008e40:	2202      	movs	r2, #2
 8008e42:	665a      	str	r2, [r3, #100]	; 0x64
 8008e44:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8008e48:	4619      	mov	r1, r3
 8008e4a:	6878      	ldr	r0, [r7, #4]
 8008e4c:	f000 f846 	bl	8008edc <HAL_UARTEx_RxEventCallback>
 8008e50:	e02a      	b.n	8008ea8 <HAL_UART_IRQHandler+0x598>
 8008e52:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8008e56:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008e5a:	2b00      	cmp	r3, #0
 8008e5c:	d00e      	beq.n	8008e7c <HAL_UART_IRQHandler+0x56c>
 8008e5e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8008e62:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008e66:	2b00      	cmp	r3, #0
 8008e68:	d008      	beq.n	8008e7c <HAL_UART_IRQHandler+0x56c>
 8008e6a:	687b      	ldr	r3, [r7, #4]
 8008e6c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8008e6e:	2b00      	cmp	r3, #0
 8008e70:	d01c      	beq.n	8008eac <HAL_UART_IRQHandler+0x59c>
 8008e72:	687b      	ldr	r3, [r7, #4]
 8008e74:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8008e76:	6878      	ldr	r0, [r7, #4]
 8008e78:	4798      	blx	r3
 8008e7a:	e017      	b.n	8008eac <HAL_UART_IRQHandler+0x59c>
 8008e7c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8008e80:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008e84:	2b00      	cmp	r3, #0
 8008e86:	d012      	beq.n	8008eae <HAL_UART_IRQHandler+0x59e>
 8008e88:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8008e8c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008e90:	2b00      	cmp	r3, #0
 8008e92:	d00c      	beq.n	8008eae <HAL_UART_IRQHandler+0x59e>
 8008e94:	6878      	ldr	r0, [r7, #4]
 8008e96:	f000 fe2c 	bl	8009af2 <UART_EndTransmit_IT>
 8008e9a:	e008      	b.n	8008eae <HAL_UART_IRQHandler+0x59e>
 8008e9c:	bf00      	nop
 8008e9e:	e006      	b.n	8008eae <HAL_UART_IRQHandler+0x59e>
 8008ea0:	bf00      	nop
 8008ea2:	e004      	b.n	8008eae <HAL_UART_IRQHandler+0x59e>
 8008ea4:	bf00      	nop
 8008ea6:	e002      	b.n	8008eae <HAL_UART_IRQHandler+0x59e>
 8008ea8:	bf00      	nop
 8008eaa:	e000      	b.n	8008eae <HAL_UART_IRQHandler+0x59e>
 8008eac:	bf00      	nop
 8008eae:	37e8      	adds	r7, #232	; 0xe8
 8008eb0:	46bd      	mov	sp, r7
 8008eb2:	bd80      	pop	{r7, pc}

08008eb4 <HAL_UART_TxCpltCallback>:
 8008eb4:	b480      	push	{r7}
 8008eb6:	b083      	sub	sp, #12
 8008eb8:	af00      	add	r7, sp, #0
 8008eba:	6078      	str	r0, [r7, #4]
 8008ebc:	bf00      	nop
 8008ebe:	370c      	adds	r7, #12
 8008ec0:	46bd      	mov	sp, r7
 8008ec2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ec6:	4770      	bx	lr

08008ec8 <HAL_UART_ErrorCallback>:
 8008ec8:	b480      	push	{r7}
 8008eca:	b083      	sub	sp, #12
 8008ecc:	af00      	add	r7, sp, #0
 8008ece:	6078      	str	r0, [r7, #4]
 8008ed0:	bf00      	nop
 8008ed2:	370c      	adds	r7, #12
 8008ed4:	46bd      	mov	sp, r7
 8008ed6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008eda:	4770      	bx	lr

08008edc <HAL_UARTEx_RxEventCallback>:
 8008edc:	b480      	push	{r7}
 8008ede:	b083      	sub	sp, #12
 8008ee0:	af00      	add	r7, sp, #0
 8008ee2:	6078      	str	r0, [r7, #4]
 8008ee4:	460b      	mov	r3, r1
 8008ee6:	807b      	strh	r3, [r7, #2]
 8008ee8:	bf00      	nop
 8008eea:	370c      	adds	r7, #12
 8008eec:	46bd      	mov	sp, r7
 8008eee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ef2:	4770      	bx	lr

08008ef4 <UART_SetConfig>:
 8008ef4:	b580      	push	{r7, lr}
 8008ef6:	b088      	sub	sp, #32
 8008ef8:	af00      	add	r7, sp, #0
 8008efa:	6078      	str	r0, [r7, #4]
 8008efc:	2300      	movs	r3, #0
 8008efe:	77bb      	strb	r3, [r7, #30]
 8008f00:	687b      	ldr	r3, [r7, #4]
 8008f02:	689a      	ldr	r2, [r3, #8]
 8008f04:	687b      	ldr	r3, [r7, #4]
 8008f06:	691b      	ldr	r3, [r3, #16]
 8008f08:	431a      	orrs	r2, r3
 8008f0a:	687b      	ldr	r3, [r7, #4]
 8008f0c:	695b      	ldr	r3, [r3, #20]
 8008f0e:	431a      	orrs	r2, r3
 8008f10:	687b      	ldr	r3, [r7, #4]
 8008f12:	69db      	ldr	r3, [r3, #28]
 8008f14:	4313      	orrs	r3, r2
 8008f16:	617b      	str	r3, [r7, #20]
 8008f18:	687b      	ldr	r3, [r7, #4]
 8008f1a:	681b      	ldr	r3, [r3, #0]
 8008f1c:	681a      	ldr	r2, [r3, #0]
 8008f1e:	4ba6      	ldr	r3, [pc, #664]	; (80091b8 <UART_SetConfig+0x2c4>)
 8008f20:	4013      	ands	r3, r2
 8008f22:	687a      	ldr	r2, [r7, #4]
 8008f24:	6812      	ldr	r2, [r2, #0]
 8008f26:	6979      	ldr	r1, [r7, #20]
 8008f28:	430b      	orrs	r3, r1
 8008f2a:	6013      	str	r3, [r2, #0]
 8008f2c:	687b      	ldr	r3, [r7, #4]
 8008f2e:	681b      	ldr	r3, [r3, #0]
 8008f30:	685b      	ldr	r3, [r3, #4]
 8008f32:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8008f36:	687b      	ldr	r3, [r7, #4]
 8008f38:	68da      	ldr	r2, [r3, #12]
 8008f3a:	687b      	ldr	r3, [r7, #4]
 8008f3c:	681b      	ldr	r3, [r3, #0]
 8008f3e:	430a      	orrs	r2, r1
 8008f40:	605a      	str	r2, [r3, #4]
 8008f42:	687b      	ldr	r3, [r7, #4]
 8008f44:	699b      	ldr	r3, [r3, #24]
 8008f46:	617b      	str	r3, [r7, #20]
 8008f48:	687b      	ldr	r3, [r7, #4]
 8008f4a:	6a1b      	ldr	r3, [r3, #32]
 8008f4c:	697a      	ldr	r2, [r7, #20]
 8008f4e:	4313      	orrs	r3, r2
 8008f50:	617b      	str	r3, [r7, #20]
 8008f52:	687b      	ldr	r3, [r7, #4]
 8008f54:	681b      	ldr	r3, [r3, #0]
 8008f56:	689b      	ldr	r3, [r3, #8]
 8008f58:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 8008f5c:	687b      	ldr	r3, [r7, #4]
 8008f5e:	681b      	ldr	r3, [r3, #0]
 8008f60:	697a      	ldr	r2, [r7, #20]
 8008f62:	430a      	orrs	r2, r1
 8008f64:	609a      	str	r2, [r3, #8]
 8008f66:	687b      	ldr	r3, [r7, #4]
 8008f68:	681b      	ldr	r3, [r3, #0]
 8008f6a:	4a94      	ldr	r2, [pc, #592]	; (80091bc <UART_SetConfig+0x2c8>)
 8008f6c:	4293      	cmp	r3, r2
 8008f6e:	d120      	bne.n	8008fb2 <UART_SetConfig+0xbe>
 8008f70:	4b93      	ldr	r3, [pc, #588]	; (80091c0 <UART_SetConfig+0x2cc>)
 8008f72:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008f76:	f003 0303 	and.w	r3, r3, #3
 8008f7a:	2b03      	cmp	r3, #3
 8008f7c:	d816      	bhi.n	8008fac <UART_SetConfig+0xb8>
 8008f7e:	a201      	add	r2, pc, #4	; (adr r2, 8008f84 <UART_SetConfig+0x90>)
 8008f80:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008f84:	08008f95 	.word	0x08008f95
 8008f88:	08008fa1 	.word	0x08008fa1
 8008f8c:	08008f9b 	.word	0x08008f9b
 8008f90:	08008fa7 	.word	0x08008fa7
 8008f94:	2301      	movs	r3, #1
 8008f96:	77fb      	strb	r3, [r7, #31]
 8008f98:	e150      	b.n	800923c <UART_SetConfig+0x348>
 8008f9a:	2302      	movs	r3, #2
 8008f9c:	77fb      	strb	r3, [r7, #31]
 8008f9e:	e14d      	b.n	800923c <UART_SetConfig+0x348>
 8008fa0:	2304      	movs	r3, #4
 8008fa2:	77fb      	strb	r3, [r7, #31]
 8008fa4:	e14a      	b.n	800923c <UART_SetConfig+0x348>
 8008fa6:	2308      	movs	r3, #8
 8008fa8:	77fb      	strb	r3, [r7, #31]
 8008faa:	e147      	b.n	800923c <UART_SetConfig+0x348>
 8008fac:	2310      	movs	r3, #16
 8008fae:	77fb      	strb	r3, [r7, #31]
 8008fb0:	e144      	b.n	800923c <UART_SetConfig+0x348>
 8008fb2:	687b      	ldr	r3, [r7, #4]
 8008fb4:	681b      	ldr	r3, [r3, #0]
 8008fb6:	4a83      	ldr	r2, [pc, #524]	; (80091c4 <UART_SetConfig+0x2d0>)
 8008fb8:	4293      	cmp	r3, r2
 8008fba:	d132      	bne.n	8009022 <UART_SetConfig+0x12e>
 8008fbc:	4b80      	ldr	r3, [pc, #512]	; (80091c0 <UART_SetConfig+0x2cc>)
 8008fbe:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008fc2:	f003 030c 	and.w	r3, r3, #12
 8008fc6:	2b0c      	cmp	r3, #12
 8008fc8:	d828      	bhi.n	800901c <UART_SetConfig+0x128>
 8008fca:	a201      	add	r2, pc, #4	; (adr r2, 8008fd0 <UART_SetConfig+0xdc>)
 8008fcc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008fd0:	08009005 	.word	0x08009005
 8008fd4:	0800901d 	.word	0x0800901d
 8008fd8:	0800901d 	.word	0x0800901d
 8008fdc:	0800901d 	.word	0x0800901d
 8008fe0:	08009011 	.word	0x08009011
 8008fe4:	0800901d 	.word	0x0800901d
 8008fe8:	0800901d 	.word	0x0800901d
 8008fec:	0800901d 	.word	0x0800901d
 8008ff0:	0800900b 	.word	0x0800900b
 8008ff4:	0800901d 	.word	0x0800901d
 8008ff8:	0800901d 	.word	0x0800901d
 8008ffc:	0800901d 	.word	0x0800901d
 8009000:	08009017 	.word	0x08009017
 8009004:	2300      	movs	r3, #0
 8009006:	77fb      	strb	r3, [r7, #31]
 8009008:	e118      	b.n	800923c <UART_SetConfig+0x348>
 800900a:	2302      	movs	r3, #2
 800900c:	77fb      	strb	r3, [r7, #31]
 800900e:	e115      	b.n	800923c <UART_SetConfig+0x348>
 8009010:	2304      	movs	r3, #4
 8009012:	77fb      	strb	r3, [r7, #31]
 8009014:	e112      	b.n	800923c <UART_SetConfig+0x348>
 8009016:	2308      	movs	r3, #8
 8009018:	77fb      	strb	r3, [r7, #31]
 800901a:	e10f      	b.n	800923c <UART_SetConfig+0x348>
 800901c:	2310      	movs	r3, #16
 800901e:	77fb      	strb	r3, [r7, #31]
 8009020:	e10c      	b.n	800923c <UART_SetConfig+0x348>
 8009022:	687b      	ldr	r3, [r7, #4]
 8009024:	681b      	ldr	r3, [r3, #0]
 8009026:	4a68      	ldr	r2, [pc, #416]	; (80091c8 <UART_SetConfig+0x2d4>)
 8009028:	4293      	cmp	r3, r2
 800902a:	d120      	bne.n	800906e <UART_SetConfig+0x17a>
 800902c:	4b64      	ldr	r3, [pc, #400]	; (80091c0 <UART_SetConfig+0x2cc>)
 800902e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009032:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8009036:	2b30      	cmp	r3, #48	; 0x30
 8009038:	d013      	beq.n	8009062 <UART_SetConfig+0x16e>
 800903a:	2b30      	cmp	r3, #48	; 0x30
 800903c:	d814      	bhi.n	8009068 <UART_SetConfig+0x174>
 800903e:	2b20      	cmp	r3, #32
 8009040:	d009      	beq.n	8009056 <UART_SetConfig+0x162>
 8009042:	2b20      	cmp	r3, #32
 8009044:	d810      	bhi.n	8009068 <UART_SetConfig+0x174>
 8009046:	2b00      	cmp	r3, #0
 8009048:	d002      	beq.n	8009050 <UART_SetConfig+0x15c>
 800904a:	2b10      	cmp	r3, #16
 800904c:	d006      	beq.n	800905c <UART_SetConfig+0x168>
 800904e:	e00b      	b.n	8009068 <UART_SetConfig+0x174>
 8009050:	2300      	movs	r3, #0
 8009052:	77fb      	strb	r3, [r7, #31]
 8009054:	e0f2      	b.n	800923c <UART_SetConfig+0x348>
 8009056:	2302      	movs	r3, #2
 8009058:	77fb      	strb	r3, [r7, #31]
 800905a:	e0ef      	b.n	800923c <UART_SetConfig+0x348>
 800905c:	2304      	movs	r3, #4
 800905e:	77fb      	strb	r3, [r7, #31]
 8009060:	e0ec      	b.n	800923c <UART_SetConfig+0x348>
 8009062:	2308      	movs	r3, #8
 8009064:	77fb      	strb	r3, [r7, #31]
 8009066:	e0e9      	b.n	800923c <UART_SetConfig+0x348>
 8009068:	2310      	movs	r3, #16
 800906a:	77fb      	strb	r3, [r7, #31]
 800906c:	e0e6      	b.n	800923c <UART_SetConfig+0x348>
 800906e:	687b      	ldr	r3, [r7, #4]
 8009070:	681b      	ldr	r3, [r3, #0]
 8009072:	4a56      	ldr	r2, [pc, #344]	; (80091cc <UART_SetConfig+0x2d8>)
 8009074:	4293      	cmp	r3, r2
 8009076:	d120      	bne.n	80090ba <UART_SetConfig+0x1c6>
 8009078:	4b51      	ldr	r3, [pc, #324]	; (80091c0 <UART_SetConfig+0x2cc>)
 800907a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800907e:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 8009082:	2bc0      	cmp	r3, #192	; 0xc0
 8009084:	d013      	beq.n	80090ae <UART_SetConfig+0x1ba>
 8009086:	2bc0      	cmp	r3, #192	; 0xc0
 8009088:	d814      	bhi.n	80090b4 <UART_SetConfig+0x1c0>
 800908a:	2b80      	cmp	r3, #128	; 0x80
 800908c:	d009      	beq.n	80090a2 <UART_SetConfig+0x1ae>
 800908e:	2b80      	cmp	r3, #128	; 0x80
 8009090:	d810      	bhi.n	80090b4 <UART_SetConfig+0x1c0>
 8009092:	2b00      	cmp	r3, #0
 8009094:	d002      	beq.n	800909c <UART_SetConfig+0x1a8>
 8009096:	2b40      	cmp	r3, #64	; 0x40
 8009098:	d006      	beq.n	80090a8 <UART_SetConfig+0x1b4>
 800909a:	e00b      	b.n	80090b4 <UART_SetConfig+0x1c0>
 800909c:	2300      	movs	r3, #0
 800909e:	77fb      	strb	r3, [r7, #31]
 80090a0:	e0cc      	b.n	800923c <UART_SetConfig+0x348>
 80090a2:	2302      	movs	r3, #2
 80090a4:	77fb      	strb	r3, [r7, #31]
 80090a6:	e0c9      	b.n	800923c <UART_SetConfig+0x348>
 80090a8:	2304      	movs	r3, #4
 80090aa:	77fb      	strb	r3, [r7, #31]
 80090ac:	e0c6      	b.n	800923c <UART_SetConfig+0x348>
 80090ae:	2308      	movs	r3, #8
 80090b0:	77fb      	strb	r3, [r7, #31]
 80090b2:	e0c3      	b.n	800923c <UART_SetConfig+0x348>
 80090b4:	2310      	movs	r3, #16
 80090b6:	77fb      	strb	r3, [r7, #31]
 80090b8:	e0c0      	b.n	800923c <UART_SetConfig+0x348>
 80090ba:	687b      	ldr	r3, [r7, #4]
 80090bc:	681b      	ldr	r3, [r3, #0]
 80090be:	4a44      	ldr	r2, [pc, #272]	; (80091d0 <UART_SetConfig+0x2dc>)
 80090c0:	4293      	cmp	r3, r2
 80090c2:	d125      	bne.n	8009110 <UART_SetConfig+0x21c>
 80090c4:	4b3e      	ldr	r3, [pc, #248]	; (80091c0 <UART_SetConfig+0x2cc>)
 80090c6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80090ca:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80090ce:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80090d2:	d017      	beq.n	8009104 <UART_SetConfig+0x210>
 80090d4:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80090d8:	d817      	bhi.n	800910a <UART_SetConfig+0x216>
 80090da:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80090de:	d00b      	beq.n	80090f8 <UART_SetConfig+0x204>
 80090e0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80090e4:	d811      	bhi.n	800910a <UART_SetConfig+0x216>
 80090e6:	2b00      	cmp	r3, #0
 80090e8:	d003      	beq.n	80090f2 <UART_SetConfig+0x1fe>
 80090ea:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80090ee:	d006      	beq.n	80090fe <UART_SetConfig+0x20a>
 80090f0:	e00b      	b.n	800910a <UART_SetConfig+0x216>
 80090f2:	2300      	movs	r3, #0
 80090f4:	77fb      	strb	r3, [r7, #31]
 80090f6:	e0a1      	b.n	800923c <UART_SetConfig+0x348>
 80090f8:	2302      	movs	r3, #2
 80090fa:	77fb      	strb	r3, [r7, #31]
 80090fc:	e09e      	b.n	800923c <UART_SetConfig+0x348>
 80090fe:	2304      	movs	r3, #4
 8009100:	77fb      	strb	r3, [r7, #31]
 8009102:	e09b      	b.n	800923c <UART_SetConfig+0x348>
 8009104:	2308      	movs	r3, #8
 8009106:	77fb      	strb	r3, [r7, #31]
 8009108:	e098      	b.n	800923c <UART_SetConfig+0x348>
 800910a:	2310      	movs	r3, #16
 800910c:	77fb      	strb	r3, [r7, #31]
 800910e:	e095      	b.n	800923c <UART_SetConfig+0x348>
 8009110:	687b      	ldr	r3, [r7, #4]
 8009112:	681b      	ldr	r3, [r3, #0]
 8009114:	4a2f      	ldr	r2, [pc, #188]	; (80091d4 <UART_SetConfig+0x2e0>)
 8009116:	4293      	cmp	r3, r2
 8009118:	d125      	bne.n	8009166 <UART_SetConfig+0x272>
 800911a:	4b29      	ldr	r3, [pc, #164]	; (80091c0 <UART_SetConfig+0x2cc>)
 800911c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009120:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 8009124:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8009128:	d017      	beq.n	800915a <UART_SetConfig+0x266>
 800912a:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800912e:	d817      	bhi.n	8009160 <UART_SetConfig+0x26c>
 8009130:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8009134:	d00b      	beq.n	800914e <UART_SetConfig+0x25a>
 8009136:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800913a:	d811      	bhi.n	8009160 <UART_SetConfig+0x26c>
 800913c:	2b00      	cmp	r3, #0
 800913e:	d003      	beq.n	8009148 <UART_SetConfig+0x254>
 8009140:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009144:	d006      	beq.n	8009154 <UART_SetConfig+0x260>
 8009146:	e00b      	b.n	8009160 <UART_SetConfig+0x26c>
 8009148:	2301      	movs	r3, #1
 800914a:	77fb      	strb	r3, [r7, #31]
 800914c:	e076      	b.n	800923c <UART_SetConfig+0x348>
 800914e:	2302      	movs	r3, #2
 8009150:	77fb      	strb	r3, [r7, #31]
 8009152:	e073      	b.n	800923c <UART_SetConfig+0x348>
 8009154:	2304      	movs	r3, #4
 8009156:	77fb      	strb	r3, [r7, #31]
 8009158:	e070      	b.n	800923c <UART_SetConfig+0x348>
 800915a:	2308      	movs	r3, #8
 800915c:	77fb      	strb	r3, [r7, #31]
 800915e:	e06d      	b.n	800923c <UART_SetConfig+0x348>
 8009160:	2310      	movs	r3, #16
 8009162:	77fb      	strb	r3, [r7, #31]
 8009164:	e06a      	b.n	800923c <UART_SetConfig+0x348>
 8009166:	687b      	ldr	r3, [r7, #4]
 8009168:	681b      	ldr	r3, [r3, #0]
 800916a:	4a1b      	ldr	r2, [pc, #108]	; (80091d8 <UART_SetConfig+0x2e4>)
 800916c:	4293      	cmp	r3, r2
 800916e:	d138      	bne.n	80091e2 <UART_SetConfig+0x2ee>
 8009170:	4b13      	ldr	r3, [pc, #76]	; (80091c0 <UART_SetConfig+0x2cc>)
 8009172:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009176:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 800917a:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 800917e:	d017      	beq.n	80091b0 <UART_SetConfig+0x2bc>
 8009180:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8009184:	d82a      	bhi.n	80091dc <UART_SetConfig+0x2e8>
 8009186:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800918a:	d00b      	beq.n	80091a4 <UART_SetConfig+0x2b0>
 800918c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009190:	d824      	bhi.n	80091dc <UART_SetConfig+0x2e8>
 8009192:	2b00      	cmp	r3, #0
 8009194:	d003      	beq.n	800919e <UART_SetConfig+0x2aa>
 8009196:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800919a:	d006      	beq.n	80091aa <UART_SetConfig+0x2b6>
 800919c:	e01e      	b.n	80091dc <UART_SetConfig+0x2e8>
 800919e:	2300      	movs	r3, #0
 80091a0:	77fb      	strb	r3, [r7, #31]
 80091a2:	e04b      	b.n	800923c <UART_SetConfig+0x348>
 80091a4:	2302      	movs	r3, #2
 80091a6:	77fb      	strb	r3, [r7, #31]
 80091a8:	e048      	b.n	800923c <UART_SetConfig+0x348>
 80091aa:	2304      	movs	r3, #4
 80091ac:	77fb      	strb	r3, [r7, #31]
 80091ae:	e045      	b.n	800923c <UART_SetConfig+0x348>
 80091b0:	2308      	movs	r3, #8
 80091b2:	77fb      	strb	r3, [r7, #31]
 80091b4:	e042      	b.n	800923c <UART_SetConfig+0x348>
 80091b6:	bf00      	nop
 80091b8:	efff69f3 	.word	0xefff69f3
 80091bc:	40011000 	.word	0x40011000
 80091c0:	40023800 	.word	0x40023800
 80091c4:	40004400 	.word	0x40004400
 80091c8:	40004800 	.word	0x40004800
 80091cc:	40004c00 	.word	0x40004c00
 80091d0:	40005000 	.word	0x40005000
 80091d4:	40011400 	.word	0x40011400
 80091d8:	40007800 	.word	0x40007800
 80091dc:	2310      	movs	r3, #16
 80091de:	77fb      	strb	r3, [r7, #31]
 80091e0:	e02c      	b.n	800923c <UART_SetConfig+0x348>
 80091e2:	687b      	ldr	r3, [r7, #4]
 80091e4:	681b      	ldr	r3, [r3, #0]
 80091e6:	4a72      	ldr	r2, [pc, #456]	; (80093b0 <UART_SetConfig+0x4bc>)
 80091e8:	4293      	cmp	r3, r2
 80091ea:	d125      	bne.n	8009238 <UART_SetConfig+0x344>
 80091ec:	4b71      	ldr	r3, [pc, #452]	; (80093b4 <UART_SetConfig+0x4c0>)
 80091ee:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80091f2:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80091f6:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 80091fa:	d017      	beq.n	800922c <UART_SetConfig+0x338>
 80091fc:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8009200:	d817      	bhi.n	8009232 <UART_SetConfig+0x33e>
 8009202:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8009206:	d00b      	beq.n	8009220 <UART_SetConfig+0x32c>
 8009208:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800920c:	d811      	bhi.n	8009232 <UART_SetConfig+0x33e>
 800920e:	2b00      	cmp	r3, #0
 8009210:	d003      	beq.n	800921a <UART_SetConfig+0x326>
 8009212:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8009216:	d006      	beq.n	8009226 <UART_SetConfig+0x332>
 8009218:	e00b      	b.n	8009232 <UART_SetConfig+0x33e>
 800921a:	2300      	movs	r3, #0
 800921c:	77fb      	strb	r3, [r7, #31]
 800921e:	e00d      	b.n	800923c <UART_SetConfig+0x348>
 8009220:	2302      	movs	r3, #2
 8009222:	77fb      	strb	r3, [r7, #31]
 8009224:	e00a      	b.n	800923c <UART_SetConfig+0x348>
 8009226:	2304      	movs	r3, #4
 8009228:	77fb      	strb	r3, [r7, #31]
 800922a:	e007      	b.n	800923c <UART_SetConfig+0x348>
 800922c:	2308      	movs	r3, #8
 800922e:	77fb      	strb	r3, [r7, #31]
 8009230:	e004      	b.n	800923c <UART_SetConfig+0x348>
 8009232:	2310      	movs	r3, #16
 8009234:	77fb      	strb	r3, [r7, #31]
 8009236:	e001      	b.n	800923c <UART_SetConfig+0x348>
 8009238:	2310      	movs	r3, #16
 800923a:	77fb      	strb	r3, [r7, #31]
 800923c:	687b      	ldr	r3, [r7, #4]
 800923e:	69db      	ldr	r3, [r3, #28]
 8009240:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8009244:	d15b      	bne.n	80092fe <UART_SetConfig+0x40a>
 8009246:	7ffb      	ldrb	r3, [r7, #31]
 8009248:	2b08      	cmp	r3, #8
 800924a:	d828      	bhi.n	800929e <UART_SetConfig+0x3aa>
 800924c:	a201      	add	r2, pc, #4	; (adr r2, 8009254 <UART_SetConfig+0x360>)
 800924e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009252:	bf00      	nop
 8009254:	08009279 	.word	0x08009279
 8009258:	08009281 	.word	0x08009281
 800925c:	08009289 	.word	0x08009289
 8009260:	0800929f 	.word	0x0800929f
 8009264:	0800928f 	.word	0x0800928f
 8009268:	0800929f 	.word	0x0800929f
 800926c:	0800929f 	.word	0x0800929f
 8009270:	0800929f 	.word	0x0800929f
 8009274:	08009297 	.word	0x08009297
 8009278:	f7fc fb6c 	bl	8005954 <HAL_RCC_GetPCLK1Freq>
 800927c:	61b8      	str	r0, [r7, #24]
 800927e:	e013      	b.n	80092a8 <UART_SetConfig+0x3b4>
 8009280:	f7fc fb7c 	bl	800597c <HAL_RCC_GetPCLK2Freq>
 8009284:	61b8      	str	r0, [r7, #24]
 8009286:	e00f      	b.n	80092a8 <UART_SetConfig+0x3b4>
 8009288:	4b4b      	ldr	r3, [pc, #300]	; (80093b8 <UART_SetConfig+0x4c4>)
 800928a:	61bb      	str	r3, [r7, #24]
 800928c:	e00c      	b.n	80092a8 <UART_SetConfig+0x3b4>
 800928e:	f7fc fa4f 	bl	8005730 <HAL_RCC_GetSysClockFreq>
 8009292:	61b8      	str	r0, [r7, #24]
 8009294:	e008      	b.n	80092a8 <UART_SetConfig+0x3b4>
 8009296:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800929a:	61bb      	str	r3, [r7, #24]
 800929c:	e004      	b.n	80092a8 <UART_SetConfig+0x3b4>
 800929e:	2300      	movs	r3, #0
 80092a0:	61bb      	str	r3, [r7, #24]
 80092a2:	2301      	movs	r3, #1
 80092a4:	77bb      	strb	r3, [r7, #30]
 80092a6:	bf00      	nop
 80092a8:	69bb      	ldr	r3, [r7, #24]
 80092aa:	2b00      	cmp	r3, #0
 80092ac:	d074      	beq.n	8009398 <UART_SetConfig+0x4a4>
 80092ae:	69bb      	ldr	r3, [r7, #24]
 80092b0:	005a      	lsls	r2, r3, #1
 80092b2:	687b      	ldr	r3, [r7, #4]
 80092b4:	685b      	ldr	r3, [r3, #4]
 80092b6:	085b      	lsrs	r3, r3, #1
 80092b8:	441a      	add	r2, r3
 80092ba:	687b      	ldr	r3, [r7, #4]
 80092bc:	685b      	ldr	r3, [r3, #4]
 80092be:	fbb2 f3f3 	udiv	r3, r2, r3
 80092c2:	613b      	str	r3, [r7, #16]
 80092c4:	693b      	ldr	r3, [r7, #16]
 80092c6:	2b0f      	cmp	r3, #15
 80092c8:	d916      	bls.n	80092f8 <UART_SetConfig+0x404>
 80092ca:	693b      	ldr	r3, [r7, #16]
 80092cc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80092d0:	d212      	bcs.n	80092f8 <UART_SetConfig+0x404>
 80092d2:	693b      	ldr	r3, [r7, #16]
 80092d4:	b29b      	uxth	r3, r3
 80092d6:	f023 030f 	bic.w	r3, r3, #15
 80092da:	81fb      	strh	r3, [r7, #14]
 80092dc:	693b      	ldr	r3, [r7, #16]
 80092de:	085b      	lsrs	r3, r3, #1
 80092e0:	b29b      	uxth	r3, r3
 80092e2:	f003 0307 	and.w	r3, r3, #7
 80092e6:	b29a      	uxth	r2, r3
 80092e8:	89fb      	ldrh	r3, [r7, #14]
 80092ea:	4313      	orrs	r3, r2
 80092ec:	81fb      	strh	r3, [r7, #14]
 80092ee:	687b      	ldr	r3, [r7, #4]
 80092f0:	681b      	ldr	r3, [r3, #0]
 80092f2:	89fa      	ldrh	r2, [r7, #14]
 80092f4:	60da      	str	r2, [r3, #12]
 80092f6:	e04f      	b.n	8009398 <UART_SetConfig+0x4a4>
 80092f8:	2301      	movs	r3, #1
 80092fa:	77bb      	strb	r3, [r7, #30]
 80092fc:	e04c      	b.n	8009398 <UART_SetConfig+0x4a4>
 80092fe:	7ffb      	ldrb	r3, [r7, #31]
 8009300:	2b08      	cmp	r3, #8
 8009302:	d828      	bhi.n	8009356 <UART_SetConfig+0x462>
 8009304:	a201      	add	r2, pc, #4	; (adr r2, 800930c <UART_SetConfig+0x418>)
 8009306:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800930a:	bf00      	nop
 800930c:	08009331 	.word	0x08009331
 8009310:	08009339 	.word	0x08009339
 8009314:	08009341 	.word	0x08009341
 8009318:	08009357 	.word	0x08009357
 800931c:	08009347 	.word	0x08009347
 8009320:	08009357 	.word	0x08009357
 8009324:	08009357 	.word	0x08009357
 8009328:	08009357 	.word	0x08009357
 800932c:	0800934f 	.word	0x0800934f
 8009330:	f7fc fb10 	bl	8005954 <HAL_RCC_GetPCLK1Freq>
 8009334:	61b8      	str	r0, [r7, #24]
 8009336:	e013      	b.n	8009360 <UART_SetConfig+0x46c>
 8009338:	f7fc fb20 	bl	800597c <HAL_RCC_GetPCLK2Freq>
 800933c:	61b8      	str	r0, [r7, #24]
 800933e:	e00f      	b.n	8009360 <UART_SetConfig+0x46c>
 8009340:	4b1d      	ldr	r3, [pc, #116]	; (80093b8 <UART_SetConfig+0x4c4>)
 8009342:	61bb      	str	r3, [r7, #24]
 8009344:	e00c      	b.n	8009360 <UART_SetConfig+0x46c>
 8009346:	f7fc f9f3 	bl	8005730 <HAL_RCC_GetSysClockFreq>
 800934a:	61b8      	str	r0, [r7, #24]
 800934c:	e008      	b.n	8009360 <UART_SetConfig+0x46c>
 800934e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8009352:	61bb      	str	r3, [r7, #24]
 8009354:	e004      	b.n	8009360 <UART_SetConfig+0x46c>
 8009356:	2300      	movs	r3, #0
 8009358:	61bb      	str	r3, [r7, #24]
 800935a:	2301      	movs	r3, #1
 800935c:	77bb      	strb	r3, [r7, #30]
 800935e:	bf00      	nop
 8009360:	69bb      	ldr	r3, [r7, #24]
 8009362:	2b00      	cmp	r3, #0
 8009364:	d018      	beq.n	8009398 <UART_SetConfig+0x4a4>
 8009366:	687b      	ldr	r3, [r7, #4]
 8009368:	685b      	ldr	r3, [r3, #4]
 800936a:	085a      	lsrs	r2, r3, #1
 800936c:	69bb      	ldr	r3, [r7, #24]
 800936e:	441a      	add	r2, r3
 8009370:	687b      	ldr	r3, [r7, #4]
 8009372:	685b      	ldr	r3, [r3, #4]
 8009374:	fbb2 f3f3 	udiv	r3, r2, r3
 8009378:	613b      	str	r3, [r7, #16]
 800937a:	693b      	ldr	r3, [r7, #16]
 800937c:	2b0f      	cmp	r3, #15
 800937e:	d909      	bls.n	8009394 <UART_SetConfig+0x4a0>
 8009380:	693b      	ldr	r3, [r7, #16]
 8009382:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009386:	d205      	bcs.n	8009394 <UART_SetConfig+0x4a0>
 8009388:	693b      	ldr	r3, [r7, #16]
 800938a:	b29a      	uxth	r2, r3
 800938c:	687b      	ldr	r3, [r7, #4]
 800938e:	681b      	ldr	r3, [r3, #0]
 8009390:	60da      	str	r2, [r3, #12]
 8009392:	e001      	b.n	8009398 <UART_SetConfig+0x4a4>
 8009394:	2301      	movs	r3, #1
 8009396:	77bb      	strb	r3, [r7, #30]
 8009398:	687b      	ldr	r3, [r7, #4]
 800939a:	2200      	movs	r2, #0
 800939c:	669a      	str	r2, [r3, #104]	; 0x68
 800939e:	687b      	ldr	r3, [r7, #4]
 80093a0:	2200      	movs	r2, #0
 80093a2:	66da      	str	r2, [r3, #108]	; 0x6c
 80093a4:	7fbb      	ldrb	r3, [r7, #30]
 80093a6:	4618      	mov	r0, r3
 80093a8:	3720      	adds	r7, #32
 80093aa:	46bd      	mov	sp, r7
 80093ac:	bd80      	pop	{r7, pc}
 80093ae:	bf00      	nop
 80093b0:	40007c00 	.word	0x40007c00
 80093b4:	40023800 	.word	0x40023800
 80093b8:	00f42400 	.word	0x00f42400

080093bc <UART_AdvFeatureConfig>:
 80093bc:	b480      	push	{r7}
 80093be:	b083      	sub	sp, #12
 80093c0:	af00      	add	r7, sp, #0
 80093c2:	6078      	str	r0, [r7, #4]
 80093c4:	687b      	ldr	r3, [r7, #4]
 80093c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80093c8:	f003 0301 	and.w	r3, r3, #1
 80093cc:	2b00      	cmp	r3, #0
 80093ce:	d00a      	beq.n	80093e6 <UART_AdvFeatureConfig+0x2a>
 80093d0:	687b      	ldr	r3, [r7, #4]
 80093d2:	681b      	ldr	r3, [r3, #0]
 80093d4:	685b      	ldr	r3, [r3, #4]
 80093d6:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 80093da:	687b      	ldr	r3, [r7, #4]
 80093dc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80093de:	687b      	ldr	r3, [r7, #4]
 80093e0:	681b      	ldr	r3, [r3, #0]
 80093e2:	430a      	orrs	r2, r1
 80093e4:	605a      	str	r2, [r3, #4]
 80093e6:	687b      	ldr	r3, [r7, #4]
 80093e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80093ea:	f003 0302 	and.w	r3, r3, #2
 80093ee:	2b00      	cmp	r3, #0
 80093f0:	d00a      	beq.n	8009408 <UART_AdvFeatureConfig+0x4c>
 80093f2:	687b      	ldr	r3, [r7, #4]
 80093f4:	681b      	ldr	r3, [r3, #0]
 80093f6:	685b      	ldr	r3, [r3, #4]
 80093f8:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 80093fc:	687b      	ldr	r3, [r7, #4]
 80093fe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009400:	687b      	ldr	r3, [r7, #4]
 8009402:	681b      	ldr	r3, [r3, #0]
 8009404:	430a      	orrs	r2, r1
 8009406:	605a      	str	r2, [r3, #4]
 8009408:	687b      	ldr	r3, [r7, #4]
 800940a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800940c:	f003 0304 	and.w	r3, r3, #4
 8009410:	2b00      	cmp	r3, #0
 8009412:	d00a      	beq.n	800942a <UART_AdvFeatureConfig+0x6e>
 8009414:	687b      	ldr	r3, [r7, #4]
 8009416:	681b      	ldr	r3, [r3, #0]
 8009418:	685b      	ldr	r3, [r3, #4]
 800941a:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 800941e:	687b      	ldr	r3, [r7, #4]
 8009420:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009422:	687b      	ldr	r3, [r7, #4]
 8009424:	681b      	ldr	r3, [r3, #0]
 8009426:	430a      	orrs	r2, r1
 8009428:	605a      	str	r2, [r3, #4]
 800942a:	687b      	ldr	r3, [r7, #4]
 800942c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800942e:	f003 0308 	and.w	r3, r3, #8
 8009432:	2b00      	cmp	r3, #0
 8009434:	d00a      	beq.n	800944c <UART_AdvFeatureConfig+0x90>
 8009436:	687b      	ldr	r3, [r7, #4]
 8009438:	681b      	ldr	r3, [r3, #0]
 800943a:	685b      	ldr	r3, [r3, #4]
 800943c:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 8009440:	687b      	ldr	r3, [r7, #4]
 8009442:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8009444:	687b      	ldr	r3, [r7, #4]
 8009446:	681b      	ldr	r3, [r3, #0]
 8009448:	430a      	orrs	r2, r1
 800944a:	605a      	str	r2, [r3, #4]
 800944c:	687b      	ldr	r3, [r7, #4]
 800944e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009450:	f003 0310 	and.w	r3, r3, #16
 8009454:	2b00      	cmp	r3, #0
 8009456:	d00a      	beq.n	800946e <UART_AdvFeatureConfig+0xb2>
 8009458:	687b      	ldr	r3, [r7, #4]
 800945a:	681b      	ldr	r3, [r3, #0]
 800945c:	689b      	ldr	r3, [r3, #8]
 800945e:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 8009462:	687b      	ldr	r3, [r7, #4]
 8009464:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009466:	687b      	ldr	r3, [r7, #4]
 8009468:	681b      	ldr	r3, [r3, #0]
 800946a:	430a      	orrs	r2, r1
 800946c:	609a      	str	r2, [r3, #8]
 800946e:	687b      	ldr	r3, [r7, #4]
 8009470:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009472:	f003 0320 	and.w	r3, r3, #32
 8009476:	2b00      	cmp	r3, #0
 8009478:	d00a      	beq.n	8009490 <UART_AdvFeatureConfig+0xd4>
 800947a:	687b      	ldr	r3, [r7, #4]
 800947c:	681b      	ldr	r3, [r3, #0]
 800947e:	689b      	ldr	r3, [r3, #8]
 8009480:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 8009484:	687b      	ldr	r3, [r7, #4]
 8009486:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8009488:	687b      	ldr	r3, [r7, #4]
 800948a:	681b      	ldr	r3, [r3, #0]
 800948c:	430a      	orrs	r2, r1
 800948e:	609a      	str	r2, [r3, #8]
 8009490:	687b      	ldr	r3, [r7, #4]
 8009492:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009494:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009498:	2b00      	cmp	r3, #0
 800949a:	d01a      	beq.n	80094d2 <UART_AdvFeatureConfig+0x116>
 800949c:	687b      	ldr	r3, [r7, #4]
 800949e:	681b      	ldr	r3, [r3, #0]
 80094a0:	685b      	ldr	r3, [r3, #4]
 80094a2:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 80094a6:	687b      	ldr	r3, [r7, #4]
 80094a8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80094aa:	687b      	ldr	r3, [r7, #4]
 80094ac:	681b      	ldr	r3, [r3, #0]
 80094ae:	430a      	orrs	r2, r1
 80094b0:	605a      	str	r2, [r3, #4]
 80094b2:	687b      	ldr	r3, [r7, #4]
 80094b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80094b6:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80094ba:	d10a      	bne.n	80094d2 <UART_AdvFeatureConfig+0x116>
 80094bc:	687b      	ldr	r3, [r7, #4]
 80094be:	681b      	ldr	r3, [r3, #0]
 80094c0:	685b      	ldr	r3, [r3, #4]
 80094c2:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 80094c6:	687b      	ldr	r3, [r7, #4]
 80094c8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80094ca:	687b      	ldr	r3, [r7, #4]
 80094cc:	681b      	ldr	r3, [r3, #0]
 80094ce:	430a      	orrs	r2, r1
 80094d0:	605a      	str	r2, [r3, #4]
 80094d2:	687b      	ldr	r3, [r7, #4]
 80094d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80094d6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80094da:	2b00      	cmp	r3, #0
 80094dc:	d00a      	beq.n	80094f4 <UART_AdvFeatureConfig+0x138>
 80094de:	687b      	ldr	r3, [r7, #4]
 80094e0:	681b      	ldr	r3, [r3, #0]
 80094e2:	685b      	ldr	r3, [r3, #4]
 80094e4:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 80094e8:	687b      	ldr	r3, [r7, #4]
 80094ea:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 80094ec:	687b      	ldr	r3, [r7, #4]
 80094ee:	681b      	ldr	r3, [r3, #0]
 80094f0:	430a      	orrs	r2, r1
 80094f2:	605a      	str	r2, [r3, #4]
 80094f4:	bf00      	nop
 80094f6:	370c      	adds	r7, #12
 80094f8:	46bd      	mov	sp, r7
 80094fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094fe:	4770      	bx	lr

08009500 <UART_CheckIdleState>:
 8009500:	b580      	push	{r7, lr}
 8009502:	b086      	sub	sp, #24
 8009504:	af02      	add	r7, sp, #8
 8009506:	6078      	str	r0, [r7, #4]
 8009508:	687b      	ldr	r3, [r7, #4]
 800950a:	2200      	movs	r2, #0
 800950c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8009510:	f7f9 ffe8 	bl	80034e4 <HAL_GetTick>
 8009514:	60f8      	str	r0, [r7, #12]
 8009516:	687b      	ldr	r3, [r7, #4]
 8009518:	681b      	ldr	r3, [r3, #0]
 800951a:	681b      	ldr	r3, [r3, #0]
 800951c:	f003 0308 	and.w	r3, r3, #8
 8009520:	2b08      	cmp	r3, #8
 8009522:	d10e      	bne.n	8009542 <UART_CheckIdleState+0x42>
 8009524:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8009528:	9300      	str	r3, [sp, #0]
 800952a:	68fb      	ldr	r3, [r7, #12]
 800952c:	2200      	movs	r2, #0
 800952e:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8009532:	6878      	ldr	r0, [r7, #4]
 8009534:	f000 f81b 	bl	800956e <UART_WaitOnFlagUntilTimeout>
 8009538:	4603      	mov	r3, r0
 800953a:	2b00      	cmp	r3, #0
 800953c:	d001      	beq.n	8009542 <UART_CheckIdleState+0x42>
 800953e:	2303      	movs	r3, #3
 8009540:	e011      	b.n	8009566 <UART_CheckIdleState+0x66>
 8009542:	687b      	ldr	r3, [r7, #4]
 8009544:	2220      	movs	r2, #32
 8009546:	67da      	str	r2, [r3, #124]	; 0x7c
 8009548:	687b      	ldr	r3, [r7, #4]
 800954a:	2220      	movs	r2, #32
 800954c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8009550:	687b      	ldr	r3, [r7, #4]
 8009552:	2200      	movs	r2, #0
 8009554:	661a      	str	r2, [r3, #96]	; 0x60
 8009556:	687b      	ldr	r3, [r7, #4]
 8009558:	2200      	movs	r2, #0
 800955a:	665a      	str	r2, [r3, #100]	; 0x64
 800955c:	687b      	ldr	r3, [r7, #4]
 800955e:	2200      	movs	r2, #0
 8009560:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 8009564:	2300      	movs	r3, #0
 8009566:	4618      	mov	r0, r3
 8009568:	3710      	adds	r7, #16
 800956a:	46bd      	mov	sp, r7
 800956c:	bd80      	pop	{r7, pc}

0800956e <UART_WaitOnFlagUntilTimeout>:
 800956e:	b580      	push	{r7, lr}
 8009570:	b09c      	sub	sp, #112	; 0x70
 8009572:	af00      	add	r7, sp, #0
 8009574:	60f8      	str	r0, [r7, #12]
 8009576:	60b9      	str	r1, [r7, #8]
 8009578:	603b      	str	r3, [r7, #0]
 800957a:	4613      	mov	r3, r2
 800957c:	71fb      	strb	r3, [r7, #7]
 800957e:	e0a7      	b.n	80096d0 <UART_WaitOnFlagUntilTimeout+0x162>
 8009580:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8009582:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009586:	f000 80a3 	beq.w	80096d0 <UART_WaitOnFlagUntilTimeout+0x162>
 800958a:	f7f9 ffab 	bl	80034e4 <HAL_GetTick>
 800958e:	4602      	mov	r2, r0
 8009590:	683b      	ldr	r3, [r7, #0]
 8009592:	1ad3      	subs	r3, r2, r3
 8009594:	6fba      	ldr	r2, [r7, #120]	; 0x78
 8009596:	429a      	cmp	r2, r3
 8009598:	d302      	bcc.n	80095a0 <UART_WaitOnFlagUntilTimeout+0x32>
 800959a:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800959c:	2b00      	cmp	r3, #0
 800959e:	d13f      	bne.n	8009620 <UART_WaitOnFlagUntilTimeout+0xb2>
 80095a0:	68fb      	ldr	r3, [r7, #12]
 80095a2:	681b      	ldr	r3, [r3, #0]
 80095a4:	653b      	str	r3, [r7, #80]	; 0x50
 80095a6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80095a8:	e853 3f00 	ldrex	r3, [r3]
 80095ac:	64fb      	str	r3, [r7, #76]	; 0x4c
 80095ae:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80095b0:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 80095b4:	667b      	str	r3, [r7, #100]	; 0x64
 80095b6:	68fb      	ldr	r3, [r7, #12]
 80095b8:	681b      	ldr	r3, [r3, #0]
 80095ba:	461a      	mov	r2, r3
 80095bc:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80095be:	65fb      	str	r3, [r7, #92]	; 0x5c
 80095c0:	65ba      	str	r2, [r7, #88]	; 0x58
 80095c2:	6db9      	ldr	r1, [r7, #88]	; 0x58
 80095c4:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 80095c6:	e841 2300 	strex	r3, r2, [r1]
 80095ca:	657b      	str	r3, [r7, #84]	; 0x54
 80095cc:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80095ce:	2b00      	cmp	r3, #0
 80095d0:	d1e6      	bne.n	80095a0 <UART_WaitOnFlagUntilTimeout+0x32>
 80095d2:	68fb      	ldr	r3, [r7, #12]
 80095d4:	681b      	ldr	r3, [r3, #0]
 80095d6:	3308      	adds	r3, #8
 80095d8:	63fb      	str	r3, [r7, #60]	; 0x3c
 80095da:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80095dc:	e853 3f00 	ldrex	r3, [r3]
 80095e0:	63bb      	str	r3, [r7, #56]	; 0x38
 80095e2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80095e4:	f023 0301 	bic.w	r3, r3, #1
 80095e8:	663b      	str	r3, [r7, #96]	; 0x60
 80095ea:	68fb      	ldr	r3, [r7, #12]
 80095ec:	681b      	ldr	r3, [r3, #0]
 80095ee:	3308      	adds	r3, #8
 80095f0:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 80095f2:	64ba      	str	r2, [r7, #72]	; 0x48
 80095f4:	647b      	str	r3, [r7, #68]	; 0x44
 80095f6:	6c79      	ldr	r1, [r7, #68]	; 0x44
 80095f8:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80095fa:	e841 2300 	strex	r3, r2, [r1]
 80095fe:	643b      	str	r3, [r7, #64]	; 0x40
 8009600:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8009602:	2b00      	cmp	r3, #0
 8009604:	d1e5      	bne.n	80095d2 <UART_WaitOnFlagUntilTimeout+0x64>
 8009606:	68fb      	ldr	r3, [r7, #12]
 8009608:	2220      	movs	r2, #32
 800960a:	67da      	str	r2, [r3, #124]	; 0x7c
 800960c:	68fb      	ldr	r3, [r7, #12]
 800960e:	2220      	movs	r2, #32
 8009610:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8009614:	68fb      	ldr	r3, [r7, #12]
 8009616:	2200      	movs	r2, #0
 8009618:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 800961c:	2303      	movs	r3, #3
 800961e:	e068      	b.n	80096f2 <UART_WaitOnFlagUntilTimeout+0x184>
 8009620:	68fb      	ldr	r3, [r7, #12]
 8009622:	681b      	ldr	r3, [r3, #0]
 8009624:	681b      	ldr	r3, [r3, #0]
 8009626:	f003 0304 	and.w	r3, r3, #4
 800962a:	2b00      	cmp	r3, #0
 800962c:	d050      	beq.n	80096d0 <UART_WaitOnFlagUntilTimeout+0x162>
 800962e:	68fb      	ldr	r3, [r7, #12]
 8009630:	681b      	ldr	r3, [r3, #0]
 8009632:	69db      	ldr	r3, [r3, #28]
 8009634:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8009638:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800963c:	d148      	bne.n	80096d0 <UART_WaitOnFlagUntilTimeout+0x162>
 800963e:	68fb      	ldr	r3, [r7, #12]
 8009640:	681b      	ldr	r3, [r3, #0]
 8009642:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8009646:	621a      	str	r2, [r3, #32]
 8009648:	68fb      	ldr	r3, [r7, #12]
 800964a:	681b      	ldr	r3, [r3, #0]
 800964c:	62bb      	str	r3, [r7, #40]	; 0x28
 800964e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009650:	e853 3f00 	ldrex	r3, [r3]
 8009654:	627b      	str	r3, [r7, #36]	; 0x24
 8009656:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009658:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800965c:	66fb      	str	r3, [r7, #108]	; 0x6c
 800965e:	68fb      	ldr	r3, [r7, #12]
 8009660:	681b      	ldr	r3, [r3, #0]
 8009662:	461a      	mov	r2, r3
 8009664:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8009666:	637b      	str	r3, [r7, #52]	; 0x34
 8009668:	633a      	str	r2, [r7, #48]	; 0x30
 800966a:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800966c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800966e:	e841 2300 	strex	r3, r2, [r1]
 8009672:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009674:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009676:	2b00      	cmp	r3, #0
 8009678:	d1e6      	bne.n	8009648 <UART_WaitOnFlagUntilTimeout+0xda>
 800967a:	68fb      	ldr	r3, [r7, #12]
 800967c:	681b      	ldr	r3, [r3, #0]
 800967e:	3308      	adds	r3, #8
 8009680:	617b      	str	r3, [r7, #20]
 8009682:	697b      	ldr	r3, [r7, #20]
 8009684:	e853 3f00 	ldrex	r3, [r3]
 8009688:	613b      	str	r3, [r7, #16]
 800968a:	693b      	ldr	r3, [r7, #16]
 800968c:	f023 0301 	bic.w	r3, r3, #1
 8009690:	66bb      	str	r3, [r7, #104]	; 0x68
 8009692:	68fb      	ldr	r3, [r7, #12]
 8009694:	681b      	ldr	r3, [r3, #0]
 8009696:	3308      	adds	r3, #8
 8009698:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800969a:	623a      	str	r2, [r7, #32]
 800969c:	61fb      	str	r3, [r7, #28]
 800969e:	69f9      	ldr	r1, [r7, #28]
 80096a0:	6a3a      	ldr	r2, [r7, #32]
 80096a2:	e841 2300 	strex	r3, r2, [r1]
 80096a6:	61bb      	str	r3, [r7, #24]
 80096a8:	69bb      	ldr	r3, [r7, #24]
 80096aa:	2b00      	cmp	r3, #0
 80096ac:	d1e5      	bne.n	800967a <UART_WaitOnFlagUntilTimeout+0x10c>
 80096ae:	68fb      	ldr	r3, [r7, #12]
 80096b0:	2220      	movs	r2, #32
 80096b2:	67da      	str	r2, [r3, #124]	; 0x7c
 80096b4:	68fb      	ldr	r3, [r7, #12]
 80096b6:	2220      	movs	r2, #32
 80096b8:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80096bc:	68fb      	ldr	r3, [r7, #12]
 80096be:	2220      	movs	r2, #32
 80096c0:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 80096c4:	68fb      	ldr	r3, [r7, #12]
 80096c6:	2200      	movs	r2, #0
 80096c8:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 80096cc:	2303      	movs	r3, #3
 80096ce:	e010      	b.n	80096f2 <UART_WaitOnFlagUntilTimeout+0x184>
 80096d0:	68fb      	ldr	r3, [r7, #12]
 80096d2:	681b      	ldr	r3, [r3, #0]
 80096d4:	69da      	ldr	r2, [r3, #28]
 80096d6:	68bb      	ldr	r3, [r7, #8]
 80096d8:	4013      	ands	r3, r2
 80096da:	68ba      	ldr	r2, [r7, #8]
 80096dc:	429a      	cmp	r2, r3
 80096de:	bf0c      	ite	eq
 80096e0:	2301      	moveq	r3, #1
 80096e2:	2300      	movne	r3, #0
 80096e4:	b2db      	uxtb	r3, r3
 80096e6:	461a      	mov	r2, r3
 80096e8:	79fb      	ldrb	r3, [r7, #7]
 80096ea:	429a      	cmp	r2, r3
 80096ec:	f43f af48 	beq.w	8009580 <UART_WaitOnFlagUntilTimeout+0x12>
 80096f0:	2300      	movs	r3, #0
 80096f2:	4618      	mov	r0, r3
 80096f4:	3770      	adds	r7, #112	; 0x70
 80096f6:	46bd      	mov	sp, r7
 80096f8:	bd80      	pop	{r7, pc}
	...

080096fc <UART_Start_Receive_IT>:
 80096fc:	b480      	push	{r7}
 80096fe:	b097      	sub	sp, #92	; 0x5c
 8009700:	af00      	add	r7, sp, #0
 8009702:	60f8      	str	r0, [r7, #12]
 8009704:	60b9      	str	r1, [r7, #8]
 8009706:	4613      	mov	r3, r2
 8009708:	80fb      	strh	r3, [r7, #6]
 800970a:	68fb      	ldr	r3, [r7, #12]
 800970c:	68ba      	ldr	r2, [r7, #8]
 800970e:	655a      	str	r2, [r3, #84]	; 0x54
 8009710:	68fb      	ldr	r3, [r7, #12]
 8009712:	88fa      	ldrh	r2, [r7, #6]
 8009714:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
 8009718:	68fb      	ldr	r3, [r7, #12]
 800971a:	88fa      	ldrh	r2, [r7, #6]
 800971c:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8009720:	68fb      	ldr	r3, [r7, #12]
 8009722:	2200      	movs	r2, #0
 8009724:	669a      	str	r2, [r3, #104]	; 0x68
 8009726:	68fb      	ldr	r3, [r7, #12]
 8009728:	689b      	ldr	r3, [r3, #8]
 800972a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800972e:	d10e      	bne.n	800974e <UART_Start_Receive_IT+0x52>
 8009730:	68fb      	ldr	r3, [r7, #12]
 8009732:	691b      	ldr	r3, [r3, #16]
 8009734:	2b00      	cmp	r3, #0
 8009736:	d105      	bne.n	8009744 <UART_Start_Receive_IT+0x48>
 8009738:	68fb      	ldr	r3, [r7, #12]
 800973a:	f240 12ff 	movw	r2, #511	; 0x1ff
 800973e:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8009742:	e02d      	b.n	80097a0 <UART_Start_Receive_IT+0xa4>
 8009744:	68fb      	ldr	r3, [r7, #12]
 8009746:	22ff      	movs	r2, #255	; 0xff
 8009748:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800974c:	e028      	b.n	80097a0 <UART_Start_Receive_IT+0xa4>
 800974e:	68fb      	ldr	r3, [r7, #12]
 8009750:	689b      	ldr	r3, [r3, #8]
 8009752:	2b00      	cmp	r3, #0
 8009754:	d10d      	bne.n	8009772 <UART_Start_Receive_IT+0x76>
 8009756:	68fb      	ldr	r3, [r7, #12]
 8009758:	691b      	ldr	r3, [r3, #16]
 800975a:	2b00      	cmp	r3, #0
 800975c:	d104      	bne.n	8009768 <UART_Start_Receive_IT+0x6c>
 800975e:	68fb      	ldr	r3, [r7, #12]
 8009760:	22ff      	movs	r2, #255	; 0xff
 8009762:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8009766:	e01b      	b.n	80097a0 <UART_Start_Receive_IT+0xa4>
 8009768:	68fb      	ldr	r3, [r7, #12]
 800976a:	227f      	movs	r2, #127	; 0x7f
 800976c:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8009770:	e016      	b.n	80097a0 <UART_Start_Receive_IT+0xa4>
 8009772:	68fb      	ldr	r3, [r7, #12]
 8009774:	689b      	ldr	r3, [r3, #8]
 8009776:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800977a:	d10d      	bne.n	8009798 <UART_Start_Receive_IT+0x9c>
 800977c:	68fb      	ldr	r3, [r7, #12]
 800977e:	691b      	ldr	r3, [r3, #16]
 8009780:	2b00      	cmp	r3, #0
 8009782:	d104      	bne.n	800978e <UART_Start_Receive_IT+0x92>
 8009784:	68fb      	ldr	r3, [r7, #12]
 8009786:	227f      	movs	r2, #127	; 0x7f
 8009788:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800978c:	e008      	b.n	80097a0 <UART_Start_Receive_IT+0xa4>
 800978e:	68fb      	ldr	r3, [r7, #12]
 8009790:	223f      	movs	r2, #63	; 0x3f
 8009792:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8009796:	e003      	b.n	80097a0 <UART_Start_Receive_IT+0xa4>
 8009798:	68fb      	ldr	r3, [r7, #12]
 800979a:	2200      	movs	r2, #0
 800979c:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80097a0:	68fb      	ldr	r3, [r7, #12]
 80097a2:	2200      	movs	r2, #0
 80097a4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 80097a8:	68fb      	ldr	r3, [r7, #12]
 80097aa:	2222      	movs	r2, #34	; 0x22
 80097ac:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80097b0:	68fb      	ldr	r3, [r7, #12]
 80097b2:	681b      	ldr	r3, [r3, #0]
 80097b4:	3308      	adds	r3, #8
 80097b6:	63fb      	str	r3, [r7, #60]	; 0x3c
 80097b8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80097ba:	e853 3f00 	ldrex	r3, [r3]
 80097be:	63bb      	str	r3, [r7, #56]	; 0x38
 80097c0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80097c2:	f043 0301 	orr.w	r3, r3, #1
 80097c6:	657b      	str	r3, [r7, #84]	; 0x54
 80097c8:	68fb      	ldr	r3, [r7, #12]
 80097ca:	681b      	ldr	r3, [r3, #0]
 80097cc:	3308      	adds	r3, #8
 80097ce:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 80097d0:	64ba      	str	r2, [r7, #72]	; 0x48
 80097d2:	647b      	str	r3, [r7, #68]	; 0x44
 80097d4:	6c79      	ldr	r1, [r7, #68]	; 0x44
 80097d6:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80097d8:	e841 2300 	strex	r3, r2, [r1]
 80097dc:	643b      	str	r3, [r7, #64]	; 0x40
 80097de:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80097e0:	2b00      	cmp	r3, #0
 80097e2:	d1e5      	bne.n	80097b0 <UART_Start_Receive_IT+0xb4>
 80097e4:	68fb      	ldr	r3, [r7, #12]
 80097e6:	689b      	ldr	r3, [r3, #8]
 80097e8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80097ec:	d107      	bne.n	80097fe <UART_Start_Receive_IT+0x102>
 80097ee:	68fb      	ldr	r3, [r7, #12]
 80097f0:	691b      	ldr	r3, [r3, #16]
 80097f2:	2b00      	cmp	r3, #0
 80097f4:	d103      	bne.n	80097fe <UART_Start_Receive_IT+0x102>
 80097f6:	68fb      	ldr	r3, [r7, #12]
 80097f8:	4a21      	ldr	r2, [pc, #132]	; (8009880 <UART_Start_Receive_IT+0x184>)
 80097fa:	669a      	str	r2, [r3, #104]	; 0x68
 80097fc:	e002      	b.n	8009804 <UART_Start_Receive_IT+0x108>
 80097fe:	68fb      	ldr	r3, [r7, #12]
 8009800:	4a20      	ldr	r2, [pc, #128]	; (8009884 <UART_Start_Receive_IT+0x188>)
 8009802:	669a      	str	r2, [r3, #104]	; 0x68
 8009804:	68fb      	ldr	r3, [r7, #12]
 8009806:	691b      	ldr	r3, [r3, #16]
 8009808:	2b00      	cmp	r3, #0
 800980a:	d019      	beq.n	8009840 <UART_Start_Receive_IT+0x144>
 800980c:	68fb      	ldr	r3, [r7, #12]
 800980e:	681b      	ldr	r3, [r3, #0]
 8009810:	62bb      	str	r3, [r7, #40]	; 0x28
 8009812:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009814:	e853 3f00 	ldrex	r3, [r3]
 8009818:	627b      	str	r3, [r7, #36]	; 0x24
 800981a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800981c:	f443 7390 	orr.w	r3, r3, #288	; 0x120
 8009820:	64fb      	str	r3, [r7, #76]	; 0x4c
 8009822:	68fb      	ldr	r3, [r7, #12]
 8009824:	681b      	ldr	r3, [r3, #0]
 8009826:	461a      	mov	r2, r3
 8009828:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800982a:	637b      	str	r3, [r7, #52]	; 0x34
 800982c:	633a      	str	r2, [r7, #48]	; 0x30
 800982e:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8009830:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8009832:	e841 2300 	strex	r3, r2, [r1]
 8009836:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009838:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800983a:	2b00      	cmp	r3, #0
 800983c:	d1e6      	bne.n	800980c <UART_Start_Receive_IT+0x110>
 800983e:	e018      	b.n	8009872 <UART_Start_Receive_IT+0x176>
 8009840:	68fb      	ldr	r3, [r7, #12]
 8009842:	681b      	ldr	r3, [r3, #0]
 8009844:	617b      	str	r3, [r7, #20]
 8009846:	697b      	ldr	r3, [r7, #20]
 8009848:	e853 3f00 	ldrex	r3, [r3]
 800984c:	613b      	str	r3, [r7, #16]
 800984e:	693b      	ldr	r3, [r7, #16]
 8009850:	f043 0320 	orr.w	r3, r3, #32
 8009854:	653b      	str	r3, [r7, #80]	; 0x50
 8009856:	68fb      	ldr	r3, [r7, #12]
 8009858:	681b      	ldr	r3, [r3, #0]
 800985a:	461a      	mov	r2, r3
 800985c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800985e:	623b      	str	r3, [r7, #32]
 8009860:	61fa      	str	r2, [r7, #28]
 8009862:	69f9      	ldr	r1, [r7, #28]
 8009864:	6a3a      	ldr	r2, [r7, #32]
 8009866:	e841 2300 	strex	r3, r2, [r1]
 800986a:	61bb      	str	r3, [r7, #24]
 800986c:	69bb      	ldr	r3, [r7, #24]
 800986e:	2b00      	cmp	r3, #0
 8009870:	d1e6      	bne.n	8009840 <UART_Start_Receive_IT+0x144>
 8009872:	2300      	movs	r3, #0
 8009874:	4618      	mov	r0, r3
 8009876:	375c      	adds	r7, #92	; 0x5c
 8009878:	46bd      	mov	sp, r7
 800987a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800987e:	4770      	bx	lr
 8009880:	08009cad 	.word	0x08009cad
 8009884:	08009b47 	.word	0x08009b47

08009888 <UART_EndRxTransfer>:
 8009888:	b480      	push	{r7}
 800988a:	b095      	sub	sp, #84	; 0x54
 800988c:	af00      	add	r7, sp, #0
 800988e:	6078      	str	r0, [r7, #4]
 8009890:	687b      	ldr	r3, [r7, #4]
 8009892:	681b      	ldr	r3, [r3, #0]
 8009894:	637b      	str	r3, [r7, #52]	; 0x34
 8009896:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009898:	e853 3f00 	ldrex	r3, [r3]
 800989c:	633b      	str	r3, [r7, #48]	; 0x30
 800989e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80098a0:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80098a4:	64fb      	str	r3, [r7, #76]	; 0x4c
 80098a6:	687b      	ldr	r3, [r7, #4]
 80098a8:	681b      	ldr	r3, [r3, #0]
 80098aa:	461a      	mov	r2, r3
 80098ac:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80098ae:	643b      	str	r3, [r7, #64]	; 0x40
 80098b0:	63fa      	str	r2, [r7, #60]	; 0x3c
 80098b2:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 80098b4:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 80098b6:	e841 2300 	strex	r3, r2, [r1]
 80098ba:	63bb      	str	r3, [r7, #56]	; 0x38
 80098bc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80098be:	2b00      	cmp	r3, #0
 80098c0:	d1e6      	bne.n	8009890 <UART_EndRxTransfer+0x8>
 80098c2:	687b      	ldr	r3, [r7, #4]
 80098c4:	681b      	ldr	r3, [r3, #0]
 80098c6:	3308      	adds	r3, #8
 80098c8:	623b      	str	r3, [r7, #32]
 80098ca:	6a3b      	ldr	r3, [r7, #32]
 80098cc:	e853 3f00 	ldrex	r3, [r3]
 80098d0:	61fb      	str	r3, [r7, #28]
 80098d2:	69fb      	ldr	r3, [r7, #28]
 80098d4:	f023 0301 	bic.w	r3, r3, #1
 80098d8:	64bb      	str	r3, [r7, #72]	; 0x48
 80098da:	687b      	ldr	r3, [r7, #4]
 80098dc:	681b      	ldr	r3, [r3, #0]
 80098de:	3308      	adds	r3, #8
 80098e0:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80098e2:	62fa      	str	r2, [r7, #44]	; 0x2c
 80098e4:	62bb      	str	r3, [r7, #40]	; 0x28
 80098e6:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80098e8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80098ea:	e841 2300 	strex	r3, r2, [r1]
 80098ee:	627b      	str	r3, [r7, #36]	; 0x24
 80098f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80098f2:	2b00      	cmp	r3, #0
 80098f4:	d1e5      	bne.n	80098c2 <UART_EndRxTransfer+0x3a>
 80098f6:	687b      	ldr	r3, [r7, #4]
 80098f8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80098fa:	2b01      	cmp	r3, #1
 80098fc:	d118      	bne.n	8009930 <UART_EndRxTransfer+0xa8>
 80098fe:	687b      	ldr	r3, [r7, #4]
 8009900:	681b      	ldr	r3, [r3, #0]
 8009902:	60fb      	str	r3, [r7, #12]
 8009904:	68fb      	ldr	r3, [r7, #12]
 8009906:	e853 3f00 	ldrex	r3, [r3]
 800990a:	60bb      	str	r3, [r7, #8]
 800990c:	68bb      	ldr	r3, [r7, #8]
 800990e:	f023 0310 	bic.w	r3, r3, #16
 8009912:	647b      	str	r3, [r7, #68]	; 0x44
 8009914:	687b      	ldr	r3, [r7, #4]
 8009916:	681b      	ldr	r3, [r3, #0]
 8009918:	461a      	mov	r2, r3
 800991a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800991c:	61bb      	str	r3, [r7, #24]
 800991e:	617a      	str	r2, [r7, #20]
 8009920:	6979      	ldr	r1, [r7, #20]
 8009922:	69ba      	ldr	r2, [r7, #24]
 8009924:	e841 2300 	strex	r3, r2, [r1]
 8009928:	613b      	str	r3, [r7, #16]
 800992a:	693b      	ldr	r3, [r7, #16]
 800992c:	2b00      	cmp	r3, #0
 800992e:	d1e6      	bne.n	80098fe <UART_EndRxTransfer+0x76>
 8009930:	687b      	ldr	r3, [r7, #4]
 8009932:	2220      	movs	r2, #32
 8009934:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8009938:	687b      	ldr	r3, [r7, #4]
 800993a:	2200      	movs	r2, #0
 800993c:	661a      	str	r2, [r3, #96]	; 0x60
 800993e:	687b      	ldr	r3, [r7, #4]
 8009940:	2200      	movs	r2, #0
 8009942:	669a      	str	r2, [r3, #104]	; 0x68
 8009944:	bf00      	nop
 8009946:	3754      	adds	r7, #84	; 0x54
 8009948:	46bd      	mov	sp, r7
 800994a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800994e:	4770      	bx	lr

08009950 <UART_DMAAbortOnError>:
 8009950:	b580      	push	{r7, lr}
 8009952:	b084      	sub	sp, #16
 8009954:	af00      	add	r7, sp, #0
 8009956:	6078      	str	r0, [r7, #4]
 8009958:	687b      	ldr	r3, [r7, #4]
 800995a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800995c:	60fb      	str	r3, [r7, #12]
 800995e:	68fb      	ldr	r3, [r7, #12]
 8009960:	2200      	movs	r2, #0
 8009962:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8009966:	68fb      	ldr	r3, [r7, #12]
 8009968:	2200      	movs	r2, #0
 800996a:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 800996e:	68f8      	ldr	r0, [r7, #12]
 8009970:	f7ff faaa 	bl	8008ec8 <HAL_UART_ErrorCallback>
 8009974:	bf00      	nop
 8009976:	3710      	adds	r7, #16
 8009978:	46bd      	mov	sp, r7
 800997a:	bd80      	pop	{r7, pc}

0800997c <UART_TxISR_8BIT>:
 800997c:	b480      	push	{r7}
 800997e:	b08f      	sub	sp, #60	; 0x3c
 8009980:	af00      	add	r7, sp, #0
 8009982:	6078      	str	r0, [r7, #4]
 8009984:	687b      	ldr	r3, [r7, #4]
 8009986:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8009988:	2b21      	cmp	r3, #33	; 0x21
 800998a:	d14c      	bne.n	8009a26 <UART_TxISR_8BIT+0xaa>
 800998c:	687b      	ldr	r3, [r7, #4]
 800998e:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8009992:	b29b      	uxth	r3, r3
 8009994:	2b00      	cmp	r3, #0
 8009996:	d132      	bne.n	80099fe <UART_TxISR_8BIT+0x82>
 8009998:	687b      	ldr	r3, [r7, #4]
 800999a:	681b      	ldr	r3, [r3, #0]
 800999c:	623b      	str	r3, [r7, #32]
 800999e:	6a3b      	ldr	r3, [r7, #32]
 80099a0:	e853 3f00 	ldrex	r3, [r3]
 80099a4:	61fb      	str	r3, [r7, #28]
 80099a6:	69fb      	ldr	r3, [r7, #28]
 80099a8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80099ac:	637b      	str	r3, [r7, #52]	; 0x34
 80099ae:	687b      	ldr	r3, [r7, #4]
 80099b0:	681b      	ldr	r3, [r3, #0]
 80099b2:	461a      	mov	r2, r3
 80099b4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80099b6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80099b8:	62ba      	str	r2, [r7, #40]	; 0x28
 80099ba:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80099bc:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80099be:	e841 2300 	strex	r3, r2, [r1]
 80099c2:	627b      	str	r3, [r7, #36]	; 0x24
 80099c4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80099c6:	2b00      	cmp	r3, #0
 80099c8:	d1e6      	bne.n	8009998 <UART_TxISR_8BIT+0x1c>
 80099ca:	687b      	ldr	r3, [r7, #4]
 80099cc:	681b      	ldr	r3, [r3, #0]
 80099ce:	60fb      	str	r3, [r7, #12]
 80099d0:	68fb      	ldr	r3, [r7, #12]
 80099d2:	e853 3f00 	ldrex	r3, [r3]
 80099d6:	60bb      	str	r3, [r7, #8]
 80099d8:	68bb      	ldr	r3, [r7, #8]
 80099da:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80099de:	633b      	str	r3, [r7, #48]	; 0x30
 80099e0:	687b      	ldr	r3, [r7, #4]
 80099e2:	681b      	ldr	r3, [r3, #0]
 80099e4:	461a      	mov	r2, r3
 80099e6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80099e8:	61bb      	str	r3, [r7, #24]
 80099ea:	617a      	str	r2, [r7, #20]
 80099ec:	6979      	ldr	r1, [r7, #20]
 80099ee:	69ba      	ldr	r2, [r7, #24]
 80099f0:	e841 2300 	strex	r3, r2, [r1]
 80099f4:	613b      	str	r3, [r7, #16]
 80099f6:	693b      	ldr	r3, [r7, #16]
 80099f8:	2b00      	cmp	r3, #0
 80099fa:	d1e6      	bne.n	80099ca <UART_TxISR_8BIT+0x4e>
 80099fc:	e013      	b.n	8009a26 <UART_TxISR_8BIT+0xaa>
 80099fe:	687b      	ldr	r3, [r7, #4]
 8009a00:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009a02:	781a      	ldrb	r2, [r3, #0]
 8009a04:	687b      	ldr	r3, [r7, #4]
 8009a06:	681b      	ldr	r3, [r3, #0]
 8009a08:	629a      	str	r2, [r3, #40]	; 0x28
 8009a0a:	687b      	ldr	r3, [r7, #4]
 8009a0c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009a0e:	1c5a      	adds	r2, r3, #1
 8009a10:	687b      	ldr	r3, [r7, #4]
 8009a12:	64da      	str	r2, [r3, #76]	; 0x4c
 8009a14:	687b      	ldr	r3, [r7, #4]
 8009a16:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8009a1a:	b29b      	uxth	r3, r3
 8009a1c:	3b01      	subs	r3, #1
 8009a1e:	b29a      	uxth	r2, r3
 8009a20:	687b      	ldr	r3, [r7, #4]
 8009a22:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8009a26:	bf00      	nop
 8009a28:	373c      	adds	r7, #60	; 0x3c
 8009a2a:	46bd      	mov	sp, r7
 8009a2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a30:	4770      	bx	lr

08009a32 <UART_TxISR_16BIT>:
 8009a32:	b480      	push	{r7}
 8009a34:	b091      	sub	sp, #68	; 0x44
 8009a36:	af00      	add	r7, sp, #0
 8009a38:	6078      	str	r0, [r7, #4]
 8009a3a:	687b      	ldr	r3, [r7, #4]
 8009a3c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8009a3e:	2b21      	cmp	r3, #33	; 0x21
 8009a40:	d151      	bne.n	8009ae6 <UART_TxISR_16BIT+0xb4>
 8009a42:	687b      	ldr	r3, [r7, #4]
 8009a44:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8009a48:	b29b      	uxth	r3, r3
 8009a4a:	2b00      	cmp	r3, #0
 8009a4c:	d132      	bne.n	8009ab4 <UART_TxISR_16BIT+0x82>
 8009a4e:	687b      	ldr	r3, [r7, #4]
 8009a50:	681b      	ldr	r3, [r3, #0]
 8009a52:	627b      	str	r3, [r7, #36]	; 0x24
 8009a54:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009a56:	e853 3f00 	ldrex	r3, [r3]
 8009a5a:	623b      	str	r3, [r7, #32]
 8009a5c:	6a3b      	ldr	r3, [r7, #32]
 8009a5e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8009a62:	63bb      	str	r3, [r7, #56]	; 0x38
 8009a64:	687b      	ldr	r3, [r7, #4]
 8009a66:	681b      	ldr	r3, [r3, #0]
 8009a68:	461a      	mov	r2, r3
 8009a6a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009a6c:	633b      	str	r3, [r7, #48]	; 0x30
 8009a6e:	62fa      	str	r2, [r7, #44]	; 0x2c
 8009a70:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8009a72:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8009a74:	e841 2300 	strex	r3, r2, [r1]
 8009a78:	62bb      	str	r3, [r7, #40]	; 0x28
 8009a7a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009a7c:	2b00      	cmp	r3, #0
 8009a7e:	d1e6      	bne.n	8009a4e <UART_TxISR_16BIT+0x1c>
 8009a80:	687b      	ldr	r3, [r7, #4]
 8009a82:	681b      	ldr	r3, [r3, #0]
 8009a84:	613b      	str	r3, [r7, #16]
 8009a86:	693b      	ldr	r3, [r7, #16]
 8009a88:	e853 3f00 	ldrex	r3, [r3]
 8009a8c:	60fb      	str	r3, [r7, #12]
 8009a8e:	68fb      	ldr	r3, [r7, #12]
 8009a90:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8009a94:	637b      	str	r3, [r7, #52]	; 0x34
 8009a96:	687b      	ldr	r3, [r7, #4]
 8009a98:	681b      	ldr	r3, [r3, #0]
 8009a9a:	461a      	mov	r2, r3
 8009a9c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009a9e:	61fb      	str	r3, [r7, #28]
 8009aa0:	61ba      	str	r2, [r7, #24]
 8009aa2:	69b9      	ldr	r1, [r7, #24]
 8009aa4:	69fa      	ldr	r2, [r7, #28]
 8009aa6:	e841 2300 	strex	r3, r2, [r1]
 8009aaa:	617b      	str	r3, [r7, #20]
 8009aac:	697b      	ldr	r3, [r7, #20]
 8009aae:	2b00      	cmp	r3, #0
 8009ab0:	d1e6      	bne.n	8009a80 <UART_TxISR_16BIT+0x4e>
 8009ab2:	e018      	b.n	8009ae6 <UART_TxISR_16BIT+0xb4>
 8009ab4:	687b      	ldr	r3, [r7, #4]
 8009ab6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009ab8:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009aba:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8009abc:	881b      	ldrh	r3, [r3, #0]
 8009abe:	461a      	mov	r2, r3
 8009ac0:	687b      	ldr	r3, [r7, #4]
 8009ac2:	681b      	ldr	r3, [r3, #0]
 8009ac4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8009ac8:	629a      	str	r2, [r3, #40]	; 0x28
 8009aca:	687b      	ldr	r3, [r7, #4]
 8009acc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009ace:	1c9a      	adds	r2, r3, #2
 8009ad0:	687b      	ldr	r3, [r7, #4]
 8009ad2:	64da      	str	r2, [r3, #76]	; 0x4c
 8009ad4:	687b      	ldr	r3, [r7, #4]
 8009ad6:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8009ada:	b29b      	uxth	r3, r3
 8009adc:	3b01      	subs	r3, #1
 8009ade:	b29a      	uxth	r2, r3
 8009ae0:	687b      	ldr	r3, [r7, #4]
 8009ae2:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8009ae6:	bf00      	nop
 8009ae8:	3744      	adds	r7, #68	; 0x44
 8009aea:	46bd      	mov	sp, r7
 8009aec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009af0:	4770      	bx	lr

08009af2 <UART_EndTransmit_IT>:
 8009af2:	b580      	push	{r7, lr}
 8009af4:	b088      	sub	sp, #32
 8009af6:	af00      	add	r7, sp, #0
 8009af8:	6078      	str	r0, [r7, #4]
 8009afa:	687b      	ldr	r3, [r7, #4]
 8009afc:	681b      	ldr	r3, [r3, #0]
 8009afe:	60fb      	str	r3, [r7, #12]
 8009b00:	68fb      	ldr	r3, [r7, #12]
 8009b02:	e853 3f00 	ldrex	r3, [r3]
 8009b06:	60bb      	str	r3, [r7, #8]
 8009b08:	68bb      	ldr	r3, [r7, #8]
 8009b0a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8009b0e:	61fb      	str	r3, [r7, #28]
 8009b10:	687b      	ldr	r3, [r7, #4]
 8009b12:	681b      	ldr	r3, [r3, #0]
 8009b14:	461a      	mov	r2, r3
 8009b16:	69fb      	ldr	r3, [r7, #28]
 8009b18:	61bb      	str	r3, [r7, #24]
 8009b1a:	617a      	str	r2, [r7, #20]
 8009b1c:	6979      	ldr	r1, [r7, #20]
 8009b1e:	69ba      	ldr	r2, [r7, #24]
 8009b20:	e841 2300 	strex	r3, r2, [r1]
 8009b24:	613b      	str	r3, [r7, #16]
 8009b26:	693b      	ldr	r3, [r7, #16]
 8009b28:	2b00      	cmp	r3, #0
 8009b2a:	d1e6      	bne.n	8009afa <UART_EndTransmit_IT+0x8>
 8009b2c:	687b      	ldr	r3, [r7, #4]
 8009b2e:	2220      	movs	r2, #32
 8009b30:	67da      	str	r2, [r3, #124]	; 0x7c
 8009b32:	687b      	ldr	r3, [r7, #4]
 8009b34:	2200      	movs	r2, #0
 8009b36:	66da      	str	r2, [r3, #108]	; 0x6c
 8009b38:	6878      	ldr	r0, [r7, #4]
 8009b3a:	f7ff f9bb 	bl	8008eb4 <HAL_UART_TxCpltCallback>
 8009b3e:	bf00      	nop
 8009b40:	3720      	adds	r7, #32
 8009b42:	46bd      	mov	sp, r7
 8009b44:	bd80      	pop	{r7, pc}

08009b46 <UART_RxISR_8BIT>:
 8009b46:	b580      	push	{r7, lr}
 8009b48:	b096      	sub	sp, #88	; 0x58
 8009b4a:	af00      	add	r7, sp, #0
 8009b4c:	6078      	str	r0, [r7, #4]
 8009b4e:	687b      	ldr	r3, [r7, #4]
 8009b50:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 8009b54:	f8a7 3056 	strh.w	r3, [r7, #86]	; 0x56
 8009b58:	687b      	ldr	r3, [r7, #4]
 8009b5a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8009b5e:	2b22      	cmp	r3, #34	; 0x22
 8009b60:	f040 8098 	bne.w	8009c94 <UART_RxISR_8BIT+0x14e>
 8009b64:	687b      	ldr	r3, [r7, #4]
 8009b66:	681b      	ldr	r3, [r3, #0]
 8009b68:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009b6a:	f8a7 3054 	strh.w	r3, [r7, #84]	; 0x54
 8009b6e:	f8b7 3054 	ldrh.w	r3, [r7, #84]	; 0x54
 8009b72:	b2d9      	uxtb	r1, r3
 8009b74:	f8b7 3056 	ldrh.w	r3, [r7, #86]	; 0x56
 8009b78:	b2da      	uxtb	r2, r3
 8009b7a:	687b      	ldr	r3, [r7, #4]
 8009b7c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009b7e:	400a      	ands	r2, r1
 8009b80:	b2d2      	uxtb	r2, r2
 8009b82:	701a      	strb	r2, [r3, #0]
 8009b84:	687b      	ldr	r3, [r7, #4]
 8009b86:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009b88:	1c5a      	adds	r2, r3, #1
 8009b8a:	687b      	ldr	r3, [r7, #4]
 8009b8c:	655a      	str	r2, [r3, #84]	; 0x54
 8009b8e:	687b      	ldr	r3, [r7, #4]
 8009b90:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8009b94:	b29b      	uxth	r3, r3
 8009b96:	3b01      	subs	r3, #1
 8009b98:	b29a      	uxth	r2, r3
 8009b9a:	687b      	ldr	r3, [r7, #4]
 8009b9c:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8009ba0:	687b      	ldr	r3, [r7, #4]
 8009ba2:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8009ba6:	b29b      	uxth	r3, r3
 8009ba8:	2b00      	cmp	r3, #0
 8009baa:	d17b      	bne.n	8009ca4 <UART_RxISR_8BIT+0x15e>
 8009bac:	687b      	ldr	r3, [r7, #4]
 8009bae:	681b      	ldr	r3, [r3, #0]
 8009bb0:	63bb      	str	r3, [r7, #56]	; 0x38
 8009bb2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009bb4:	e853 3f00 	ldrex	r3, [r3]
 8009bb8:	637b      	str	r3, [r7, #52]	; 0x34
 8009bba:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009bbc:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8009bc0:	653b      	str	r3, [r7, #80]	; 0x50
 8009bc2:	687b      	ldr	r3, [r7, #4]
 8009bc4:	681b      	ldr	r3, [r3, #0]
 8009bc6:	461a      	mov	r2, r3
 8009bc8:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8009bca:	647b      	str	r3, [r7, #68]	; 0x44
 8009bcc:	643a      	str	r2, [r7, #64]	; 0x40
 8009bce:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8009bd0:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8009bd2:	e841 2300 	strex	r3, r2, [r1]
 8009bd6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009bd8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8009bda:	2b00      	cmp	r3, #0
 8009bdc:	d1e6      	bne.n	8009bac <UART_RxISR_8BIT+0x66>
 8009bde:	687b      	ldr	r3, [r7, #4]
 8009be0:	681b      	ldr	r3, [r3, #0]
 8009be2:	3308      	adds	r3, #8
 8009be4:	627b      	str	r3, [r7, #36]	; 0x24
 8009be6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009be8:	e853 3f00 	ldrex	r3, [r3]
 8009bec:	623b      	str	r3, [r7, #32]
 8009bee:	6a3b      	ldr	r3, [r7, #32]
 8009bf0:	f023 0301 	bic.w	r3, r3, #1
 8009bf4:	64fb      	str	r3, [r7, #76]	; 0x4c
 8009bf6:	687b      	ldr	r3, [r7, #4]
 8009bf8:	681b      	ldr	r3, [r3, #0]
 8009bfa:	3308      	adds	r3, #8
 8009bfc:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8009bfe:	633a      	str	r2, [r7, #48]	; 0x30
 8009c00:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009c02:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8009c04:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8009c06:	e841 2300 	strex	r3, r2, [r1]
 8009c0a:	62bb      	str	r3, [r7, #40]	; 0x28
 8009c0c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009c0e:	2b00      	cmp	r3, #0
 8009c10:	d1e5      	bne.n	8009bde <UART_RxISR_8BIT+0x98>
 8009c12:	687b      	ldr	r3, [r7, #4]
 8009c14:	2220      	movs	r2, #32
 8009c16:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8009c1a:	687b      	ldr	r3, [r7, #4]
 8009c1c:	2200      	movs	r2, #0
 8009c1e:	669a      	str	r2, [r3, #104]	; 0x68
 8009c20:	687b      	ldr	r3, [r7, #4]
 8009c22:	2200      	movs	r2, #0
 8009c24:	665a      	str	r2, [r3, #100]	; 0x64
 8009c26:	687b      	ldr	r3, [r7, #4]
 8009c28:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009c2a:	2b01      	cmp	r3, #1
 8009c2c:	d12e      	bne.n	8009c8c <UART_RxISR_8BIT+0x146>
 8009c2e:	687b      	ldr	r3, [r7, #4]
 8009c30:	2200      	movs	r2, #0
 8009c32:	661a      	str	r2, [r3, #96]	; 0x60
 8009c34:	687b      	ldr	r3, [r7, #4]
 8009c36:	681b      	ldr	r3, [r3, #0]
 8009c38:	613b      	str	r3, [r7, #16]
 8009c3a:	693b      	ldr	r3, [r7, #16]
 8009c3c:	e853 3f00 	ldrex	r3, [r3]
 8009c40:	60fb      	str	r3, [r7, #12]
 8009c42:	68fb      	ldr	r3, [r7, #12]
 8009c44:	f023 0310 	bic.w	r3, r3, #16
 8009c48:	64bb      	str	r3, [r7, #72]	; 0x48
 8009c4a:	687b      	ldr	r3, [r7, #4]
 8009c4c:	681b      	ldr	r3, [r3, #0]
 8009c4e:	461a      	mov	r2, r3
 8009c50:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8009c52:	61fb      	str	r3, [r7, #28]
 8009c54:	61ba      	str	r2, [r7, #24]
 8009c56:	69b9      	ldr	r1, [r7, #24]
 8009c58:	69fa      	ldr	r2, [r7, #28]
 8009c5a:	e841 2300 	strex	r3, r2, [r1]
 8009c5e:	617b      	str	r3, [r7, #20]
 8009c60:	697b      	ldr	r3, [r7, #20]
 8009c62:	2b00      	cmp	r3, #0
 8009c64:	d1e6      	bne.n	8009c34 <UART_RxISR_8BIT+0xee>
 8009c66:	687b      	ldr	r3, [r7, #4]
 8009c68:	681b      	ldr	r3, [r3, #0]
 8009c6a:	69db      	ldr	r3, [r3, #28]
 8009c6c:	f003 0310 	and.w	r3, r3, #16
 8009c70:	2b10      	cmp	r3, #16
 8009c72:	d103      	bne.n	8009c7c <UART_RxISR_8BIT+0x136>
 8009c74:	687b      	ldr	r3, [r7, #4]
 8009c76:	681b      	ldr	r3, [r3, #0]
 8009c78:	2210      	movs	r2, #16
 8009c7a:	621a      	str	r2, [r3, #32]
 8009c7c:	687b      	ldr	r3, [r7, #4]
 8009c7e:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 8009c82:	4619      	mov	r1, r3
 8009c84:	6878      	ldr	r0, [r7, #4]
 8009c86:	f7ff f929 	bl	8008edc <HAL_UARTEx_RxEventCallback>
 8009c8a:	e00b      	b.n	8009ca4 <UART_RxISR_8BIT+0x15e>
 8009c8c:	6878      	ldr	r0, [r7, #4]
 8009c8e:	f7f8 fdbd 	bl	800280c <HAL_UART_RxCpltCallback>
 8009c92:	e007      	b.n	8009ca4 <UART_RxISR_8BIT+0x15e>
 8009c94:	687b      	ldr	r3, [r7, #4]
 8009c96:	681b      	ldr	r3, [r3, #0]
 8009c98:	699a      	ldr	r2, [r3, #24]
 8009c9a:	687b      	ldr	r3, [r7, #4]
 8009c9c:	681b      	ldr	r3, [r3, #0]
 8009c9e:	f042 0208 	orr.w	r2, r2, #8
 8009ca2:	619a      	str	r2, [r3, #24]
 8009ca4:	bf00      	nop
 8009ca6:	3758      	adds	r7, #88	; 0x58
 8009ca8:	46bd      	mov	sp, r7
 8009caa:	bd80      	pop	{r7, pc}

08009cac <UART_RxISR_16BIT>:
 8009cac:	b580      	push	{r7, lr}
 8009cae:	b096      	sub	sp, #88	; 0x58
 8009cb0:	af00      	add	r7, sp, #0
 8009cb2:	6078      	str	r0, [r7, #4]
 8009cb4:	687b      	ldr	r3, [r7, #4]
 8009cb6:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 8009cba:	f8a7 3056 	strh.w	r3, [r7, #86]	; 0x56
 8009cbe:	687b      	ldr	r3, [r7, #4]
 8009cc0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8009cc4:	2b22      	cmp	r3, #34	; 0x22
 8009cc6:	f040 8098 	bne.w	8009dfa <UART_RxISR_16BIT+0x14e>
 8009cca:	687b      	ldr	r3, [r7, #4]
 8009ccc:	681b      	ldr	r3, [r3, #0]
 8009cce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009cd0:	f8a7 3054 	strh.w	r3, [r7, #84]	; 0x54
 8009cd4:	687b      	ldr	r3, [r7, #4]
 8009cd6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009cd8:	653b      	str	r3, [r7, #80]	; 0x50
 8009cda:	f8b7 2054 	ldrh.w	r2, [r7, #84]	; 0x54
 8009cde:	f8b7 3056 	ldrh.w	r3, [r7, #86]	; 0x56
 8009ce2:	4013      	ands	r3, r2
 8009ce4:	b29a      	uxth	r2, r3
 8009ce6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8009ce8:	801a      	strh	r2, [r3, #0]
 8009cea:	687b      	ldr	r3, [r7, #4]
 8009cec:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009cee:	1c9a      	adds	r2, r3, #2
 8009cf0:	687b      	ldr	r3, [r7, #4]
 8009cf2:	655a      	str	r2, [r3, #84]	; 0x54
 8009cf4:	687b      	ldr	r3, [r7, #4]
 8009cf6:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8009cfa:	b29b      	uxth	r3, r3
 8009cfc:	3b01      	subs	r3, #1
 8009cfe:	b29a      	uxth	r2, r3
 8009d00:	687b      	ldr	r3, [r7, #4]
 8009d02:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8009d06:	687b      	ldr	r3, [r7, #4]
 8009d08:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8009d0c:	b29b      	uxth	r3, r3
 8009d0e:	2b00      	cmp	r3, #0
 8009d10:	d17b      	bne.n	8009e0a <UART_RxISR_16BIT+0x15e>
 8009d12:	687b      	ldr	r3, [r7, #4]
 8009d14:	681b      	ldr	r3, [r3, #0]
 8009d16:	637b      	str	r3, [r7, #52]	; 0x34
 8009d18:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009d1a:	e853 3f00 	ldrex	r3, [r3]
 8009d1e:	633b      	str	r3, [r7, #48]	; 0x30
 8009d20:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009d22:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8009d26:	64fb      	str	r3, [r7, #76]	; 0x4c
 8009d28:	687b      	ldr	r3, [r7, #4]
 8009d2a:	681b      	ldr	r3, [r3, #0]
 8009d2c:	461a      	mov	r2, r3
 8009d2e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8009d30:	643b      	str	r3, [r7, #64]	; 0x40
 8009d32:	63fa      	str	r2, [r7, #60]	; 0x3c
 8009d34:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8009d36:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8009d38:	e841 2300 	strex	r3, r2, [r1]
 8009d3c:	63bb      	str	r3, [r7, #56]	; 0x38
 8009d3e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009d40:	2b00      	cmp	r3, #0
 8009d42:	d1e6      	bne.n	8009d12 <UART_RxISR_16BIT+0x66>
 8009d44:	687b      	ldr	r3, [r7, #4]
 8009d46:	681b      	ldr	r3, [r3, #0]
 8009d48:	3308      	adds	r3, #8
 8009d4a:	623b      	str	r3, [r7, #32]
 8009d4c:	6a3b      	ldr	r3, [r7, #32]
 8009d4e:	e853 3f00 	ldrex	r3, [r3]
 8009d52:	61fb      	str	r3, [r7, #28]
 8009d54:	69fb      	ldr	r3, [r7, #28]
 8009d56:	f023 0301 	bic.w	r3, r3, #1
 8009d5a:	64bb      	str	r3, [r7, #72]	; 0x48
 8009d5c:	687b      	ldr	r3, [r7, #4]
 8009d5e:	681b      	ldr	r3, [r3, #0]
 8009d60:	3308      	adds	r3, #8
 8009d62:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8009d64:	62fa      	str	r2, [r7, #44]	; 0x2c
 8009d66:	62bb      	str	r3, [r7, #40]	; 0x28
 8009d68:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8009d6a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8009d6c:	e841 2300 	strex	r3, r2, [r1]
 8009d70:	627b      	str	r3, [r7, #36]	; 0x24
 8009d72:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009d74:	2b00      	cmp	r3, #0
 8009d76:	d1e5      	bne.n	8009d44 <UART_RxISR_16BIT+0x98>
 8009d78:	687b      	ldr	r3, [r7, #4]
 8009d7a:	2220      	movs	r2, #32
 8009d7c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8009d80:	687b      	ldr	r3, [r7, #4]
 8009d82:	2200      	movs	r2, #0
 8009d84:	669a      	str	r2, [r3, #104]	; 0x68
 8009d86:	687b      	ldr	r3, [r7, #4]
 8009d88:	2200      	movs	r2, #0
 8009d8a:	665a      	str	r2, [r3, #100]	; 0x64
 8009d8c:	687b      	ldr	r3, [r7, #4]
 8009d8e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009d90:	2b01      	cmp	r3, #1
 8009d92:	d12e      	bne.n	8009df2 <UART_RxISR_16BIT+0x146>
 8009d94:	687b      	ldr	r3, [r7, #4]
 8009d96:	2200      	movs	r2, #0
 8009d98:	661a      	str	r2, [r3, #96]	; 0x60
 8009d9a:	687b      	ldr	r3, [r7, #4]
 8009d9c:	681b      	ldr	r3, [r3, #0]
 8009d9e:	60fb      	str	r3, [r7, #12]
 8009da0:	68fb      	ldr	r3, [r7, #12]
 8009da2:	e853 3f00 	ldrex	r3, [r3]
 8009da6:	60bb      	str	r3, [r7, #8]
 8009da8:	68bb      	ldr	r3, [r7, #8]
 8009daa:	f023 0310 	bic.w	r3, r3, #16
 8009dae:	647b      	str	r3, [r7, #68]	; 0x44
 8009db0:	687b      	ldr	r3, [r7, #4]
 8009db2:	681b      	ldr	r3, [r3, #0]
 8009db4:	461a      	mov	r2, r3
 8009db6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8009db8:	61bb      	str	r3, [r7, #24]
 8009dba:	617a      	str	r2, [r7, #20]
 8009dbc:	6979      	ldr	r1, [r7, #20]
 8009dbe:	69ba      	ldr	r2, [r7, #24]
 8009dc0:	e841 2300 	strex	r3, r2, [r1]
 8009dc4:	613b      	str	r3, [r7, #16]
 8009dc6:	693b      	ldr	r3, [r7, #16]
 8009dc8:	2b00      	cmp	r3, #0
 8009dca:	d1e6      	bne.n	8009d9a <UART_RxISR_16BIT+0xee>
 8009dcc:	687b      	ldr	r3, [r7, #4]
 8009dce:	681b      	ldr	r3, [r3, #0]
 8009dd0:	69db      	ldr	r3, [r3, #28]
 8009dd2:	f003 0310 	and.w	r3, r3, #16
 8009dd6:	2b10      	cmp	r3, #16
 8009dd8:	d103      	bne.n	8009de2 <UART_RxISR_16BIT+0x136>
 8009dda:	687b      	ldr	r3, [r7, #4]
 8009ddc:	681b      	ldr	r3, [r3, #0]
 8009dde:	2210      	movs	r2, #16
 8009de0:	621a      	str	r2, [r3, #32]
 8009de2:	687b      	ldr	r3, [r7, #4]
 8009de4:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 8009de8:	4619      	mov	r1, r3
 8009dea:	6878      	ldr	r0, [r7, #4]
 8009dec:	f7ff f876 	bl	8008edc <HAL_UARTEx_RxEventCallback>
 8009df0:	e00b      	b.n	8009e0a <UART_RxISR_16BIT+0x15e>
 8009df2:	6878      	ldr	r0, [r7, #4]
 8009df4:	f7f8 fd0a 	bl	800280c <HAL_UART_RxCpltCallback>
 8009df8:	e007      	b.n	8009e0a <UART_RxISR_16BIT+0x15e>
 8009dfa:	687b      	ldr	r3, [r7, #4]
 8009dfc:	681b      	ldr	r3, [r3, #0]
 8009dfe:	699a      	ldr	r2, [r3, #24]
 8009e00:	687b      	ldr	r3, [r7, #4]
 8009e02:	681b      	ldr	r3, [r3, #0]
 8009e04:	f042 0208 	orr.w	r2, r2, #8
 8009e08:	619a      	str	r2, [r3, #24]
 8009e0a:	bf00      	nop
 8009e0c:	3758      	adds	r7, #88	; 0x58
 8009e0e:	46bd      	mov	sp, r7
 8009e10:	bd80      	pop	{r7, pc}
	...

08009e14 <_strtol_l.constprop.0>:
 8009e14:	2b01      	cmp	r3, #1
 8009e16:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009e1a:	d001      	beq.n	8009e20 <_strtol_l.constprop.0+0xc>
 8009e1c:	2b24      	cmp	r3, #36	; 0x24
 8009e1e:	d906      	bls.n	8009e2e <_strtol_l.constprop.0+0x1a>
 8009e20:	f000 f8ac 	bl	8009f7c <__errno>
 8009e24:	2316      	movs	r3, #22
 8009e26:	6003      	str	r3, [r0, #0]
 8009e28:	2000      	movs	r0, #0
 8009e2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009e2e:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 8009f14 <_strtol_l.constprop.0+0x100>
 8009e32:	460d      	mov	r5, r1
 8009e34:	462e      	mov	r6, r5
 8009e36:	f815 4b01 	ldrb.w	r4, [r5], #1
 8009e3a:	f81c 7004 	ldrb.w	r7, [ip, r4]
 8009e3e:	f017 0708 	ands.w	r7, r7, #8
 8009e42:	d1f7      	bne.n	8009e34 <_strtol_l.constprop.0+0x20>
 8009e44:	2c2d      	cmp	r4, #45	; 0x2d
 8009e46:	d132      	bne.n	8009eae <_strtol_l.constprop.0+0x9a>
 8009e48:	782c      	ldrb	r4, [r5, #0]
 8009e4a:	2701      	movs	r7, #1
 8009e4c:	1cb5      	adds	r5, r6, #2
 8009e4e:	2b00      	cmp	r3, #0
 8009e50:	d05b      	beq.n	8009f0a <_strtol_l.constprop.0+0xf6>
 8009e52:	2b10      	cmp	r3, #16
 8009e54:	d109      	bne.n	8009e6a <_strtol_l.constprop.0+0x56>
 8009e56:	2c30      	cmp	r4, #48	; 0x30
 8009e58:	d107      	bne.n	8009e6a <_strtol_l.constprop.0+0x56>
 8009e5a:	782c      	ldrb	r4, [r5, #0]
 8009e5c:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 8009e60:	2c58      	cmp	r4, #88	; 0x58
 8009e62:	d14d      	bne.n	8009f00 <_strtol_l.constprop.0+0xec>
 8009e64:	786c      	ldrb	r4, [r5, #1]
 8009e66:	2310      	movs	r3, #16
 8009e68:	3502      	adds	r5, #2
 8009e6a:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 8009e6e:	f108 38ff 	add.w	r8, r8, #4294967295
 8009e72:	f04f 0e00 	mov.w	lr, #0
 8009e76:	fbb8 f9f3 	udiv	r9, r8, r3
 8009e7a:	4676      	mov	r6, lr
 8009e7c:	fb03 8a19 	mls	sl, r3, r9, r8
 8009e80:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8009e84:	f1bc 0f09 	cmp.w	ip, #9
 8009e88:	d816      	bhi.n	8009eb8 <_strtol_l.constprop.0+0xa4>
 8009e8a:	4664      	mov	r4, ip
 8009e8c:	42a3      	cmp	r3, r4
 8009e8e:	dd24      	ble.n	8009eda <_strtol_l.constprop.0+0xc6>
 8009e90:	f1be 3fff 	cmp.w	lr, #4294967295
 8009e94:	d008      	beq.n	8009ea8 <_strtol_l.constprop.0+0x94>
 8009e96:	45b1      	cmp	r9, r6
 8009e98:	d31c      	bcc.n	8009ed4 <_strtol_l.constprop.0+0xc0>
 8009e9a:	d101      	bne.n	8009ea0 <_strtol_l.constprop.0+0x8c>
 8009e9c:	45a2      	cmp	sl, r4
 8009e9e:	db19      	blt.n	8009ed4 <_strtol_l.constprop.0+0xc0>
 8009ea0:	fb06 4603 	mla	r6, r6, r3, r4
 8009ea4:	f04f 0e01 	mov.w	lr, #1
 8009ea8:	f815 4b01 	ldrb.w	r4, [r5], #1
 8009eac:	e7e8      	b.n	8009e80 <_strtol_l.constprop.0+0x6c>
 8009eae:	2c2b      	cmp	r4, #43	; 0x2b
 8009eb0:	bf04      	itt	eq
 8009eb2:	782c      	ldrbeq	r4, [r5, #0]
 8009eb4:	1cb5      	addeq	r5, r6, #2
 8009eb6:	e7ca      	b.n	8009e4e <_strtol_l.constprop.0+0x3a>
 8009eb8:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 8009ebc:	f1bc 0f19 	cmp.w	ip, #25
 8009ec0:	d801      	bhi.n	8009ec6 <_strtol_l.constprop.0+0xb2>
 8009ec2:	3c37      	subs	r4, #55	; 0x37
 8009ec4:	e7e2      	b.n	8009e8c <_strtol_l.constprop.0+0x78>
 8009ec6:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 8009eca:	f1bc 0f19 	cmp.w	ip, #25
 8009ece:	d804      	bhi.n	8009eda <_strtol_l.constprop.0+0xc6>
 8009ed0:	3c57      	subs	r4, #87	; 0x57
 8009ed2:	e7db      	b.n	8009e8c <_strtol_l.constprop.0+0x78>
 8009ed4:	f04f 3eff 	mov.w	lr, #4294967295
 8009ed8:	e7e6      	b.n	8009ea8 <_strtol_l.constprop.0+0x94>
 8009eda:	f1be 3fff 	cmp.w	lr, #4294967295
 8009ede:	d105      	bne.n	8009eec <_strtol_l.constprop.0+0xd8>
 8009ee0:	2322      	movs	r3, #34	; 0x22
 8009ee2:	6003      	str	r3, [r0, #0]
 8009ee4:	4646      	mov	r6, r8
 8009ee6:	b942      	cbnz	r2, 8009efa <_strtol_l.constprop.0+0xe6>
 8009ee8:	4630      	mov	r0, r6
 8009eea:	e79e      	b.n	8009e2a <_strtol_l.constprop.0+0x16>
 8009eec:	b107      	cbz	r7, 8009ef0 <_strtol_l.constprop.0+0xdc>
 8009eee:	4276      	negs	r6, r6
 8009ef0:	2a00      	cmp	r2, #0
 8009ef2:	d0f9      	beq.n	8009ee8 <_strtol_l.constprop.0+0xd4>
 8009ef4:	f1be 0f00 	cmp.w	lr, #0
 8009ef8:	d000      	beq.n	8009efc <_strtol_l.constprop.0+0xe8>
 8009efa:	1e69      	subs	r1, r5, #1
 8009efc:	6011      	str	r1, [r2, #0]
 8009efe:	e7f3      	b.n	8009ee8 <_strtol_l.constprop.0+0xd4>
 8009f00:	2430      	movs	r4, #48	; 0x30
 8009f02:	2b00      	cmp	r3, #0
 8009f04:	d1b1      	bne.n	8009e6a <_strtol_l.constprop.0+0x56>
 8009f06:	2308      	movs	r3, #8
 8009f08:	e7af      	b.n	8009e6a <_strtol_l.constprop.0+0x56>
 8009f0a:	2c30      	cmp	r4, #48	; 0x30
 8009f0c:	d0a5      	beq.n	8009e5a <_strtol_l.constprop.0+0x46>
 8009f0e:	230a      	movs	r3, #10
 8009f10:	e7ab      	b.n	8009e6a <_strtol_l.constprop.0+0x56>
 8009f12:	bf00      	nop
 8009f14:	0800a939 	.word	0x0800a939

08009f18 <strtol>:
 8009f18:	4613      	mov	r3, r2
 8009f1a:	460a      	mov	r2, r1
 8009f1c:	4601      	mov	r1, r0
 8009f1e:	4802      	ldr	r0, [pc, #8]	; (8009f28 <strtol+0x10>)
 8009f20:	6800      	ldr	r0, [r0, #0]
 8009f22:	f7ff bf77 	b.w	8009e14 <_strtol_l.constprop.0>
 8009f26:	bf00      	nop
 8009f28:	200000dc 	.word	0x200000dc

08009f2c <siprintf>:
 8009f2c:	b40e      	push	{r1, r2, r3}
 8009f2e:	b500      	push	{lr}
 8009f30:	b09c      	sub	sp, #112	; 0x70
 8009f32:	ab1d      	add	r3, sp, #116	; 0x74
 8009f34:	9002      	str	r0, [sp, #8]
 8009f36:	9006      	str	r0, [sp, #24]
 8009f38:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8009f3c:	4809      	ldr	r0, [pc, #36]	; (8009f64 <siprintf+0x38>)
 8009f3e:	9107      	str	r1, [sp, #28]
 8009f40:	9104      	str	r1, [sp, #16]
 8009f42:	4909      	ldr	r1, [pc, #36]	; (8009f68 <siprintf+0x3c>)
 8009f44:	f853 2b04 	ldr.w	r2, [r3], #4
 8009f48:	9105      	str	r1, [sp, #20]
 8009f4a:	6800      	ldr	r0, [r0, #0]
 8009f4c:	9301      	str	r3, [sp, #4]
 8009f4e:	a902      	add	r1, sp, #8
 8009f50:	f000 f992 	bl	800a278 <_svfiprintf_r>
 8009f54:	9b02      	ldr	r3, [sp, #8]
 8009f56:	2200      	movs	r2, #0
 8009f58:	701a      	strb	r2, [r3, #0]
 8009f5a:	b01c      	add	sp, #112	; 0x70
 8009f5c:	f85d eb04 	ldr.w	lr, [sp], #4
 8009f60:	b003      	add	sp, #12
 8009f62:	4770      	bx	lr
 8009f64:	200000dc 	.word	0x200000dc
 8009f68:	ffff0208 	.word	0xffff0208

08009f6c <memset>:
 8009f6c:	4402      	add	r2, r0
 8009f6e:	4603      	mov	r3, r0
 8009f70:	4293      	cmp	r3, r2
 8009f72:	d100      	bne.n	8009f76 <memset+0xa>
 8009f74:	4770      	bx	lr
 8009f76:	f803 1b01 	strb.w	r1, [r3], #1
 8009f7a:	e7f9      	b.n	8009f70 <memset+0x4>

08009f7c <__errno>:
 8009f7c:	4b01      	ldr	r3, [pc, #4]	; (8009f84 <__errno+0x8>)
 8009f7e:	6818      	ldr	r0, [r3, #0]
 8009f80:	4770      	bx	lr
 8009f82:	bf00      	nop
 8009f84:	200000dc 	.word	0x200000dc

08009f88 <__libc_init_array>:
 8009f88:	b570      	push	{r4, r5, r6, lr}
 8009f8a:	4d0d      	ldr	r5, [pc, #52]	; (8009fc0 <__libc_init_array+0x38>)
 8009f8c:	4c0d      	ldr	r4, [pc, #52]	; (8009fc4 <__libc_init_array+0x3c>)
 8009f8e:	1b64      	subs	r4, r4, r5
 8009f90:	10a4      	asrs	r4, r4, #2
 8009f92:	2600      	movs	r6, #0
 8009f94:	42a6      	cmp	r6, r4
 8009f96:	d109      	bne.n	8009fac <__libc_init_array+0x24>
 8009f98:	4d0b      	ldr	r5, [pc, #44]	; (8009fc8 <__libc_init_array+0x40>)
 8009f9a:	4c0c      	ldr	r4, [pc, #48]	; (8009fcc <__libc_init_array+0x44>)
 8009f9c:	f000 fc6a 	bl	800a874 <_init>
 8009fa0:	1b64      	subs	r4, r4, r5
 8009fa2:	10a4      	asrs	r4, r4, #2
 8009fa4:	2600      	movs	r6, #0
 8009fa6:	42a6      	cmp	r6, r4
 8009fa8:	d105      	bne.n	8009fb6 <__libc_init_array+0x2e>
 8009faa:	bd70      	pop	{r4, r5, r6, pc}
 8009fac:	f855 3b04 	ldr.w	r3, [r5], #4
 8009fb0:	4798      	blx	r3
 8009fb2:	3601      	adds	r6, #1
 8009fb4:	e7ee      	b.n	8009f94 <__libc_init_array+0xc>
 8009fb6:	f855 3b04 	ldr.w	r3, [r5], #4
 8009fba:	4798      	blx	r3
 8009fbc:	3601      	adds	r6, #1
 8009fbe:	e7f2      	b.n	8009fa6 <__libc_init_array+0x1e>
 8009fc0:	0800aa74 	.word	0x0800aa74
 8009fc4:	0800aa74 	.word	0x0800aa74
 8009fc8:	0800aa74 	.word	0x0800aa74
 8009fcc:	0800aa78 	.word	0x0800aa78

08009fd0 <__retarget_lock_acquire_recursive>:
 8009fd0:	4770      	bx	lr

08009fd2 <__retarget_lock_release_recursive>:
 8009fd2:	4770      	bx	lr

08009fd4 <_free_r>:
 8009fd4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009fd6:	2900      	cmp	r1, #0
 8009fd8:	d044      	beq.n	800a064 <_free_r+0x90>
 8009fda:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8009fde:	9001      	str	r0, [sp, #4]
 8009fe0:	2b00      	cmp	r3, #0
 8009fe2:	f1a1 0404 	sub.w	r4, r1, #4
 8009fe6:	bfb8      	it	lt
 8009fe8:	18e4      	addlt	r4, r4, r3
 8009fea:	f000 f8df 	bl	800a1ac <__malloc_lock>
 8009fee:	4a1e      	ldr	r2, [pc, #120]	; (800a068 <_free_r+0x94>)
 8009ff0:	9801      	ldr	r0, [sp, #4]
 8009ff2:	6813      	ldr	r3, [r2, #0]
 8009ff4:	b933      	cbnz	r3, 800a004 <_free_r+0x30>
 8009ff6:	6063      	str	r3, [r4, #4]
 8009ff8:	6014      	str	r4, [r2, #0]
 8009ffa:	b003      	add	sp, #12
 8009ffc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800a000:	f000 b8da 	b.w	800a1b8 <__malloc_unlock>
 800a004:	42a3      	cmp	r3, r4
 800a006:	d908      	bls.n	800a01a <_free_r+0x46>
 800a008:	6825      	ldr	r5, [r4, #0]
 800a00a:	1961      	adds	r1, r4, r5
 800a00c:	428b      	cmp	r3, r1
 800a00e:	bf01      	itttt	eq
 800a010:	6819      	ldreq	r1, [r3, #0]
 800a012:	685b      	ldreq	r3, [r3, #4]
 800a014:	1949      	addeq	r1, r1, r5
 800a016:	6021      	streq	r1, [r4, #0]
 800a018:	e7ed      	b.n	8009ff6 <_free_r+0x22>
 800a01a:	461a      	mov	r2, r3
 800a01c:	685b      	ldr	r3, [r3, #4]
 800a01e:	b10b      	cbz	r3, 800a024 <_free_r+0x50>
 800a020:	42a3      	cmp	r3, r4
 800a022:	d9fa      	bls.n	800a01a <_free_r+0x46>
 800a024:	6811      	ldr	r1, [r2, #0]
 800a026:	1855      	adds	r5, r2, r1
 800a028:	42a5      	cmp	r5, r4
 800a02a:	d10b      	bne.n	800a044 <_free_r+0x70>
 800a02c:	6824      	ldr	r4, [r4, #0]
 800a02e:	4421      	add	r1, r4
 800a030:	1854      	adds	r4, r2, r1
 800a032:	42a3      	cmp	r3, r4
 800a034:	6011      	str	r1, [r2, #0]
 800a036:	d1e0      	bne.n	8009ffa <_free_r+0x26>
 800a038:	681c      	ldr	r4, [r3, #0]
 800a03a:	685b      	ldr	r3, [r3, #4]
 800a03c:	6053      	str	r3, [r2, #4]
 800a03e:	440c      	add	r4, r1
 800a040:	6014      	str	r4, [r2, #0]
 800a042:	e7da      	b.n	8009ffa <_free_r+0x26>
 800a044:	d902      	bls.n	800a04c <_free_r+0x78>
 800a046:	230c      	movs	r3, #12
 800a048:	6003      	str	r3, [r0, #0]
 800a04a:	e7d6      	b.n	8009ffa <_free_r+0x26>
 800a04c:	6825      	ldr	r5, [r4, #0]
 800a04e:	1961      	adds	r1, r4, r5
 800a050:	428b      	cmp	r3, r1
 800a052:	bf04      	itt	eq
 800a054:	6819      	ldreq	r1, [r3, #0]
 800a056:	685b      	ldreq	r3, [r3, #4]
 800a058:	6063      	str	r3, [r4, #4]
 800a05a:	bf04      	itt	eq
 800a05c:	1949      	addeq	r1, r1, r5
 800a05e:	6021      	streq	r1, [r4, #0]
 800a060:	6054      	str	r4, [r2, #4]
 800a062:	e7ca      	b.n	8009ffa <_free_r+0x26>
 800a064:	b003      	add	sp, #12
 800a066:	bd30      	pop	{r4, r5, pc}
 800a068:	200004f8 	.word	0x200004f8

0800a06c <sbrk_aligned>:
 800a06c:	b570      	push	{r4, r5, r6, lr}
 800a06e:	4e0e      	ldr	r6, [pc, #56]	; (800a0a8 <sbrk_aligned+0x3c>)
 800a070:	460c      	mov	r4, r1
 800a072:	6831      	ldr	r1, [r6, #0]
 800a074:	4605      	mov	r5, r0
 800a076:	b911      	cbnz	r1, 800a07e <sbrk_aligned+0x12>
 800a078:	f000 fba6 	bl	800a7c8 <_sbrk_r>
 800a07c:	6030      	str	r0, [r6, #0]
 800a07e:	4621      	mov	r1, r4
 800a080:	4628      	mov	r0, r5
 800a082:	f000 fba1 	bl	800a7c8 <_sbrk_r>
 800a086:	1c43      	adds	r3, r0, #1
 800a088:	d00a      	beq.n	800a0a0 <sbrk_aligned+0x34>
 800a08a:	1cc4      	adds	r4, r0, #3
 800a08c:	f024 0403 	bic.w	r4, r4, #3
 800a090:	42a0      	cmp	r0, r4
 800a092:	d007      	beq.n	800a0a4 <sbrk_aligned+0x38>
 800a094:	1a21      	subs	r1, r4, r0
 800a096:	4628      	mov	r0, r5
 800a098:	f000 fb96 	bl	800a7c8 <_sbrk_r>
 800a09c:	3001      	adds	r0, #1
 800a09e:	d101      	bne.n	800a0a4 <sbrk_aligned+0x38>
 800a0a0:	f04f 34ff 	mov.w	r4, #4294967295
 800a0a4:	4620      	mov	r0, r4
 800a0a6:	bd70      	pop	{r4, r5, r6, pc}
 800a0a8:	200004fc 	.word	0x200004fc

0800a0ac <_malloc_r>:
 800a0ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a0b0:	1ccd      	adds	r5, r1, #3
 800a0b2:	f025 0503 	bic.w	r5, r5, #3
 800a0b6:	3508      	adds	r5, #8
 800a0b8:	2d0c      	cmp	r5, #12
 800a0ba:	bf38      	it	cc
 800a0bc:	250c      	movcc	r5, #12
 800a0be:	2d00      	cmp	r5, #0
 800a0c0:	4607      	mov	r7, r0
 800a0c2:	db01      	blt.n	800a0c8 <_malloc_r+0x1c>
 800a0c4:	42a9      	cmp	r1, r5
 800a0c6:	d905      	bls.n	800a0d4 <_malloc_r+0x28>
 800a0c8:	230c      	movs	r3, #12
 800a0ca:	603b      	str	r3, [r7, #0]
 800a0cc:	2600      	movs	r6, #0
 800a0ce:	4630      	mov	r0, r6
 800a0d0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a0d4:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 800a1a8 <_malloc_r+0xfc>
 800a0d8:	f000 f868 	bl	800a1ac <__malloc_lock>
 800a0dc:	f8d8 3000 	ldr.w	r3, [r8]
 800a0e0:	461c      	mov	r4, r3
 800a0e2:	bb5c      	cbnz	r4, 800a13c <_malloc_r+0x90>
 800a0e4:	4629      	mov	r1, r5
 800a0e6:	4638      	mov	r0, r7
 800a0e8:	f7ff ffc0 	bl	800a06c <sbrk_aligned>
 800a0ec:	1c43      	adds	r3, r0, #1
 800a0ee:	4604      	mov	r4, r0
 800a0f0:	d155      	bne.n	800a19e <_malloc_r+0xf2>
 800a0f2:	f8d8 4000 	ldr.w	r4, [r8]
 800a0f6:	4626      	mov	r6, r4
 800a0f8:	2e00      	cmp	r6, #0
 800a0fa:	d145      	bne.n	800a188 <_malloc_r+0xdc>
 800a0fc:	2c00      	cmp	r4, #0
 800a0fe:	d048      	beq.n	800a192 <_malloc_r+0xe6>
 800a100:	6823      	ldr	r3, [r4, #0]
 800a102:	4631      	mov	r1, r6
 800a104:	4638      	mov	r0, r7
 800a106:	eb04 0903 	add.w	r9, r4, r3
 800a10a:	f000 fb5d 	bl	800a7c8 <_sbrk_r>
 800a10e:	4581      	cmp	r9, r0
 800a110:	d13f      	bne.n	800a192 <_malloc_r+0xe6>
 800a112:	6821      	ldr	r1, [r4, #0]
 800a114:	1a6d      	subs	r5, r5, r1
 800a116:	4629      	mov	r1, r5
 800a118:	4638      	mov	r0, r7
 800a11a:	f7ff ffa7 	bl	800a06c <sbrk_aligned>
 800a11e:	3001      	adds	r0, #1
 800a120:	d037      	beq.n	800a192 <_malloc_r+0xe6>
 800a122:	6823      	ldr	r3, [r4, #0]
 800a124:	442b      	add	r3, r5
 800a126:	6023      	str	r3, [r4, #0]
 800a128:	f8d8 3000 	ldr.w	r3, [r8]
 800a12c:	2b00      	cmp	r3, #0
 800a12e:	d038      	beq.n	800a1a2 <_malloc_r+0xf6>
 800a130:	685a      	ldr	r2, [r3, #4]
 800a132:	42a2      	cmp	r2, r4
 800a134:	d12b      	bne.n	800a18e <_malloc_r+0xe2>
 800a136:	2200      	movs	r2, #0
 800a138:	605a      	str	r2, [r3, #4]
 800a13a:	e00f      	b.n	800a15c <_malloc_r+0xb0>
 800a13c:	6822      	ldr	r2, [r4, #0]
 800a13e:	1b52      	subs	r2, r2, r5
 800a140:	d41f      	bmi.n	800a182 <_malloc_r+0xd6>
 800a142:	2a0b      	cmp	r2, #11
 800a144:	d917      	bls.n	800a176 <_malloc_r+0xca>
 800a146:	1961      	adds	r1, r4, r5
 800a148:	42a3      	cmp	r3, r4
 800a14a:	6025      	str	r5, [r4, #0]
 800a14c:	bf18      	it	ne
 800a14e:	6059      	strne	r1, [r3, #4]
 800a150:	6863      	ldr	r3, [r4, #4]
 800a152:	bf08      	it	eq
 800a154:	f8c8 1000 	streq.w	r1, [r8]
 800a158:	5162      	str	r2, [r4, r5]
 800a15a:	604b      	str	r3, [r1, #4]
 800a15c:	4638      	mov	r0, r7
 800a15e:	f104 060b 	add.w	r6, r4, #11
 800a162:	f000 f829 	bl	800a1b8 <__malloc_unlock>
 800a166:	f026 0607 	bic.w	r6, r6, #7
 800a16a:	1d23      	adds	r3, r4, #4
 800a16c:	1af2      	subs	r2, r6, r3
 800a16e:	d0ae      	beq.n	800a0ce <_malloc_r+0x22>
 800a170:	1b9b      	subs	r3, r3, r6
 800a172:	50a3      	str	r3, [r4, r2]
 800a174:	e7ab      	b.n	800a0ce <_malloc_r+0x22>
 800a176:	42a3      	cmp	r3, r4
 800a178:	6862      	ldr	r2, [r4, #4]
 800a17a:	d1dd      	bne.n	800a138 <_malloc_r+0x8c>
 800a17c:	f8c8 2000 	str.w	r2, [r8]
 800a180:	e7ec      	b.n	800a15c <_malloc_r+0xb0>
 800a182:	4623      	mov	r3, r4
 800a184:	6864      	ldr	r4, [r4, #4]
 800a186:	e7ac      	b.n	800a0e2 <_malloc_r+0x36>
 800a188:	4634      	mov	r4, r6
 800a18a:	6876      	ldr	r6, [r6, #4]
 800a18c:	e7b4      	b.n	800a0f8 <_malloc_r+0x4c>
 800a18e:	4613      	mov	r3, r2
 800a190:	e7cc      	b.n	800a12c <_malloc_r+0x80>
 800a192:	230c      	movs	r3, #12
 800a194:	603b      	str	r3, [r7, #0]
 800a196:	4638      	mov	r0, r7
 800a198:	f000 f80e 	bl	800a1b8 <__malloc_unlock>
 800a19c:	e797      	b.n	800a0ce <_malloc_r+0x22>
 800a19e:	6025      	str	r5, [r4, #0]
 800a1a0:	e7dc      	b.n	800a15c <_malloc_r+0xb0>
 800a1a2:	605b      	str	r3, [r3, #4]
 800a1a4:	deff      	udf	#255	; 0xff
 800a1a6:	bf00      	nop
 800a1a8:	200004f8 	.word	0x200004f8

0800a1ac <__malloc_lock>:
 800a1ac:	4801      	ldr	r0, [pc, #4]	; (800a1b4 <__malloc_lock+0x8>)
 800a1ae:	f7ff bf0f 	b.w	8009fd0 <__retarget_lock_acquire_recursive>
 800a1b2:	bf00      	nop
 800a1b4:	200004f4 	.word	0x200004f4

0800a1b8 <__malloc_unlock>:
 800a1b8:	4801      	ldr	r0, [pc, #4]	; (800a1c0 <__malloc_unlock+0x8>)
 800a1ba:	f7ff bf0a 	b.w	8009fd2 <__retarget_lock_release_recursive>
 800a1be:	bf00      	nop
 800a1c0:	200004f4 	.word	0x200004f4

0800a1c4 <__ssputs_r>:
 800a1c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a1c8:	688e      	ldr	r6, [r1, #8]
 800a1ca:	461f      	mov	r7, r3
 800a1cc:	42be      	cmp	r6, r7
 800a1ce:	680b      	ldr	r3, [r1, #0]
 800a1d0:	4682      	mov	sl, r0
 800a1d2:	460c      	mov	r4, r1
 800a1d4:	4690      	mov	r8, r2
 800a1d6:	d82c      	bhi.n	800a232 <__ssputs_r+0x6e>
 800a1d8:	898a      	ldrh	r2, [r1, #12]
 800a1da:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800a1de:	d026      	beq.n	800a22e <__ssputs_r+0x6a>
 800a1e0:	6965      	ldr	r5, [r4, #20]
 800a1e2:	6909      	ldr	r1, [r1, #16]
 800a1e4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800a1e8:	eba3 0901 	sub.w	r9, r3, r1
 800a1ec:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800a1f0:	1c7b      	adds	r3, r7, #1
 800a1f2:	444b      	add	r3, r9
 800a1f4:	106d      	asrs	r5, r5, #1
 800a1f6:	429d      	cmp	r5, r3
 800a1f8:	bf38      	it	cc
 800a1fa:	461d      	movcc	r5, r3
 800a1fc:	0553      	lsls	r3, r2, #21
 800a1fe:	d527      	bpl.n	800a250 <__ssputs_r+0x8c>
 800a200:	4629      	mov	r1, r5
 800a202:	f7ff ff53 	bl	800a0ac <_malloc_r>
 800a206:	4606      	mov	r6, r0
 800a208:	b360      	cbz	r0, 800a264 <__ssputs_r+0xa0>
 800a20a:	6921      	ldr	r1, [r4, #16]
 800a20c:	464a      	mov	r2, r9
 800a20e:	f000 faeb 	bl	800a7e8 <memcpy>
 800a212:	89a3      	ldrh	r3, [r4, #12]
 800a214:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800a218:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800a21c:	81a3      	strh	r3, [r4, #12]
 800a21e:	6126      	str	r6, [r4, #16]
 800a220:	6165      	str	r5, [r4, #20]
 800a222:	444e      	add	r6, r9
 800a224:	eba5 0509 	sub.w	r5, r5, r9
 800a228:	6026      	str	r6, [r4, #0]
 800a22a:	60a5      	str	r5, [r4, #8]
 800a22c:	463e      	mov	r6, r7
 800a22e:	42be      	cmp	r6, r7
 800a230:	d900      	bls.n	800a234 <__ssputs_r+0x70>
 800a232:	463e      	mov	r6, r7
 800a234:	6820      	ldr	r0, [r4, #0]
 800a236:	4632      	mov	r2, r6
 800a238:	4641      	mov	r1, r8
 800a23a:	f000 faab 	bl	800a794 <memmove>
 800a23e:	68a3      	ldr	r3, [r4, #8]
 800a240:	1b9b      	subs	r3, r3, r6
 800a242:	60a3      	str	r3, [r4, #8]
 800a244:	6823      	ldr	r3, [r4, #0]
 800a246:	4433      	add	r3, r6
 800a248:	6023      	str	r3, [r4, #0]
 800a24a:	2000      	movs	r0, #0
 800a24c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a250:	462a      	mov	r2, r5
 800a252:	f000 fad7 	bl	800a804 <_realloc_r>
 800a256:	4606      	mov	r6, r0
 800a258:	2800      	cmp	r0, #0
 800a25a:	d1e0      	bne.n	800a21e <__ssputs_r+0x5a>
 800a25c:	6921      	ldr	r1, [r4, #16]
 800a25e:	4650      	mov	r0, sl
 800a260:	f7ff feb8 	bl	8009fd4 <_free_r>
 800a264:	230c      	movs	r3, #12
 800a266:	f8ca 3000 	str.w	r3, [sl]
 800a26a:	89a3      	ldrh	r3, [r4, #12]
 800a26c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800a270:	81a3      	strh	r3, [r4, #12]
 800a272:	f04f 30ff 	mov.w	r0, #4294967295
 800a276:	e7e9      	b.n	800a24c <__ssputs_r+0x88>

0800a278 <_svfiprintf_r>:
 800a278:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a27c:	4698      	mov	r8, r3
 800a27e:	898b      	ldrh	r3, [r1, #12]
 800a280:	061b      	lsls	r3, r3, #24
 800a282:	b09d      	sub	sp, #116	; 0x74
 800a284:	4607      	mov	r7, r0
 800a286:	460d      	mov	r5, r1
 800a288:	4614      	mov	r4, r2
 800a28a:	d50e      	bpl.n	800a2aa <_svfiprintf_r+0x32>
 800a28c:	690b      	ldr	r3, [r1, #16]
 800a28e:	b963      	cbnz	r3, 800a2aa <_svfiprintf_r+0x32>
 800a290:	2140      	movs	r1, #64	; 0x40
 800a292:	f7ff ff0b 	bl	800a0ac <_malloc_r>
 800a296:	6028      	str	r0, [r5, #0]
 800a298:	6128      	str	r0, [r5, #16]
 800a29a:	b920      	cbnz	r0, 800a2a6 <_svfiprintf_r+0x2e>
 800a29c:	230c      	movs	r3, #12
 800a29e:	603b      	str	r3, [r7, #0]
 800a2a0:	f04f 30ff 	mov.w	r0, #4294967295
 800a2a4:	e0d0      	b.n	800a448 <_svfiprintf_r+0x1d0>
 800a2a6:	2340      	movs	r3, #64	; 0x40
 800a2a8:	616b      	str	r3, [r5, #20]
 800a2aa:	2300      	movs	r3, #0
 800a2ac:	9309      	str	r3, [sp, #36]	; 0x24
 800a2ae:	2320      	movs	r3, #32
 800a2b0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800a2b4:	f8cd 800c 	str.w	r8, [sp, #12]
 800a2b8:	2330      	movs	r3, #48	; 0x30
 800a2ba:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 800a460 <_svfiprintf_r+0x1e8>
 800a2be:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800a2c2:	f04f 0901 	mov.w	r9, #1
 800a2c6:	4623      	mov	r3, r4
 800a2c8:	469a      	mov	sl, r3
 800a2ca:	f813 2b01 	ldrb.w	r2, [r3], #1
 800a2ce:	b10a      	cbz	r2, 800a2d4 <_svfiprintf_r+0x5c>
 800a2d0:	2a25      	cmp	r2, #37	; 0x25
 800a2d2:	d1f9      	bne.n	800a2c8 <_svfiprintf_r+0x50>
 800a2d4:	ebba 0b04 	subs.w	fp, sl, r4
 800a2d8:	d00b      	beq.n	800a2f2 <_svfiprintf_r+0x7a>
 800a2da:	465b      	mov	r3, fp
 800a2dc:	4622      	mov	r2, r4
 800a2de:	4629      	mov	r1, r5
 800a2e0:	4638      	mov	r0, r7
 800a2e2:	f7ff ff6f 	bl	800a1c4 <__ssputs_r>
 800a2e6:	3001      	adds	r0, #1
 800a2e8:	f000 80a9 	beq.w	800a43e <_svfiprintf_r+0x1c6>
 800a2ec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800a2ee:	445a      	add	r2, fp
 800a2f0:	9209      	str	r2, [sp, #36]	; 0x24
 800a2f2:	f89a 3000 	ldrb.w	r3, [sl]
 800a2f6:	2b00      	cmp	r3, #0
 800a2f8:	f000 80a1 	beq.w	800a43e <_svfiprintf_r+0x1c6>
 800a2fc:	2300      	movs	r3, #0
 800a2fe:	f04f 32ff 	mov.w	r2, #4294967295
 800a302:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800a306:	f10a 0a01 	add.w	sl, sl, #1
 800a30a:	9304      	str	r3, [sp, #16]
 800a30c:	9307      	str	r3, [sp, #28]
 800a30e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800a312:	931a      	str	r3, [sp, #104]	; 0x68
 800a314:	4654      	mov	r4, sl
 800a316:	2205      	movs	r2, #5
 800a318:	f814 1b01 	ldrb.w	r1, [r4], #1
 800a31c:	4850      	ldr	r0, [pc, #320]	; (800a460 <_svfiprintf_r+0x1e8>)
 800a31e:	f7f5 ff77 	bl	8000210 <memchr>
 800a322:	9a04      	ldr	r2, [sp, #16]
 800a324:	b9d8      	cbnz	r0, 800a35e <_svfiprintf_r+0xe6>
 800a326:	06d0      	lsls	r0, r2, #27
 800a328:	bf44      	itt	mi
 800a32a:	2320      	movmi	r3, #32
 800a32c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800a330:	0711      	lsls	r1, r2, #28
 800a332:	bf44      	itt	mi
 800a334:	232b      	movmi	r3, #43	; 0x2b
 800a336:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800a33a:	f89a 3000 	ldrb.w	r3, [sl]
 800a33e:	2b2a      	cmp	r3, #42	; 0x2a
 800a340:	d015      	beq.n	800a36e <_svfiprintf_r+0xf6>
 800a342:	9a07      	ldr	r2, [sp, #28]
 800a344:	4654      	mov	r4, sl
 800a346:	2000      	movs	r0, #0
 800a348:	f04f 0c0a 	mov.w	ip, #10
 800a34c:	4621      	mov	r1, r4
 800a34e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800a352:	3b30      	subs	r3, #48	; 0x30
 800a354:	2b09      	cmp	r3, #9
 800a356:	d94d      	bls.n	800a3f4 <_svfiprintf_r+0x17c>
 800a358:	b1b0      	cbz	r0, 800a388 <_svfiprintf_r+0x110>
 800a35a:	9207      	str	r2, [sp, #28]
 800a35c:	e014      	b.n	800a388 <_svfiprintf_r+0x110>
 800a35e:	eba0 0308 	sub.w	r3, r0, r8
 800a362:	fa09 f303 	lsl.w	r3, r9, r3
 800a366:	4313      	orrs	r3, r2
 800a368:	9304      	str	r3, [sp, #16]
 800a36a:	46a2      	mov	sl, r4
 800a36c:	e7d2      	b.n	800a314 <_svfiprintf_r+0x9c>
 800a36e:	9b03      	ldr	r3, [sp, #12]
 800a370:	1d19      	adds	r1, r3, #4
 800a372:	681b      	ldr	r3, [r3, #0]
 800a374:	9103      	str	r1, [sp, #12]
 800a376:	2b00      	cmp	r3, #0
 800a378:	bfbb      	ittet	lt
 800a37a:	425b      	neglt	r3, r3
 800a37c:	f042 0202 	orrlt.w	r2, r2, #2
 800a380:	9307      	strge	r3, [sp, #28]
 800a382:	9307      	strlt	r3, [sp, #28]
 800a384:	bfb8      	it	lt
 800a386:	9204      	strlt	r2, [sp, #16]
 800a388:	7823      	ldrb	r3, [r4, #0]
 800a38a:	2b2e      	cmp	r3, #46	; 0x2e
 800a38c:	d10c      	bne.n	800a3a8 <_svfiprintf_r+0x130>
 800a38e:	7863      	ldrb	r3, [r4, #1]
 800a390:	2b2a      	cmp	r3, #42	; 0x2a
 800a392:	d134      	bne.n	800a3fe <_svfiprintf_r+0x186>
 800a394:	9b03      	ldr	r3, [sp, #12]
 800a396:	1d1a      	adds	r2, r3, #4
 800a398:	681b      	ldr	r3, [r3, #0]
 800a39a:	9203      	str	r2, [sp, #12]
 800a39c:	2b00      	cmp	r3, #0
 800a39e:	bfb8      	it	lt
 800a3a0:	f04f 33ff 	movlt.w	r3, #4294967295
 800a3a4:	3402      	adds	r4, #2
 800a3a6:	9305      	str	r3, [sp, #20]
 800a3a8:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 800a470 <_svfiprintf_r+0x1f8>
 800a3ac:	7821      	ldrb	r1, [r4, #0]
 800a3ae:	2203      	movs	r2, #3
 800a3b0:	4650      	mov	r0, sl
 800a3b2:	f7f5 ff2d 	bl	8000210 <memchr>
 800a3b6:	b138      	cbz	r0, 800a3c8 <_svfiprintf_r+0x150>
 800a3b8:	9b04      	ldr	r3, [sp, #16]
 800a3ba:	eba0 000a 	sub.w	r0, r0, sl
 800a3be:	2240      	movs	r2, #64	; 0x40
 800a3c0:	4082      	lsls	r2, r0
 800a3c2:	4313      	orrs	r3, r2
 800a3c4:	3401      	adds	r4, #1
 800a3c6:	9304      	str	r3, [sp, #16]
 800a3c8:	f814 1b01 	ldrb.w	r1, [r4], #1
 800a3cc:	4825      	ldr	r0, [pc, #148]	; (800a464 <_svfiprintf_r+0x1ec>)
 800a3ce:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800a3d2:	2206      	movs	r2, #6
 800a3d4:	f7f5 ff1c 	bl	8000210 <memchr>
 800a3d8:	2800      	cmp	r0, #0
 800a3da:	d038      	beq.n	800a44e <_svfiprintf_r+0x1d6>
 800a3dc:	4b22      	ldr	r3, [pc, #136]	; (800a468 <_svfiprintf_r+0x1f0>)
 800a3de:	bb1b      	cbnz	r3, 800a428 <_svfiprintf_r+0x1b0>
 800a3e0:	9b03      	ldr	r3, [sp, #12]
 800a3e2:	3307      	adds	r3, #7
 800a3e4:	f023 0307 	bic.w	r3, r3, #7
 800a3e8:	3308      	adds	r3, #8
 800a3ea:	9303      	str	r3, [sp, #12]
 800a3ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a3ee:	4433      	add	r3, r6
 800a3f0:	9309      	str	r3, [sp, #36]	; 0x24
 800a3f2:	e768      	b.n	800a2c6 <_svfiprintf_r+0x4e>
 800a3f4:	fb0c 3202 	mla	r2, ip, r2, r3
 800a3f8:	460c      	mov	r4, r1
 800a3fa:	2001      	movs	r0, #1
 800a3fc:	e7a6      	b.n	800a34c <_svfiprintf_r+0xd4>
 800a3fe:	2300      	movs	r3, #0
 800a400:	3401      	adds	r4, #1
 800a402:	9305      	str	r3, [sp, #20]
 800a404:	4619      	mov	r1, r3
 800a406:	f04f 0c0a 	mov.w	ip, #10
 800a40a:	4620      	mov	r0, r4
 800a40c:	f810 2b01 	ldrb.w	r2, [r0], #1
 800a410:	3a30      	subs	r2, #48	; 0x30
 800a412:	2a09      	cmp	r2, #9
 800a414:	d903      	bls.n	800a41e <_svfiprintf_r+0x1a6>
 800a416:	2b00      	cmp	r3, #0
 800a418:	d0c6      	beq.n	800a3a8 <_svfiprintf_r+0x130>
 800a41a:	9105      	str	r1, [sp, #20]
 800a41c:	e7c4      	b.n	800a3a8 <_svfiprintf_r+0x130>
 800a41e:	fb0c 2101 	mla	r1, ip, r1, r2
 800a422:	4604      	mov	r4, r0
 800a424:	2301      	movs	r3, #1
 800a426:	e7f0      	b.n	800a40a <_svfiprintf_r+0x192>
 800a428:	ab03      	add	r3, sp, #12
 800a42a:	9300      	str	r3, [sp, #0]
 800a42c:	462a      	mov	r2, r5
 800a42e:	4b0f      	ldr	r3, [pc, #60]	; (800a46c <_svfiprintf_r+0x1f4>)
 800a430:	a904      	add	r1, sp, #16
 800a432:	4638      	mov	r0, r7
 800a434:	f3af 8000 	nop.w
 800a438:	1c42      	adds	r2, r0, #1
 800a43a:	4606      	mov	r6, r0
 800a43c:	d1d6      	bne.n	800a3ec <_svfiprintf_r+0x174>
 800a43e:	89ab      	ldrh	r3, [r5, #12]
 800a440:	065b      	lsls	r3, r3, #25
 800a442:	f53f af2d 	bmi.w	800a2a0 <_svfiprintf_r+0x28>
 800a446:	9809      	ldr	r0, [sp, #36]	; 0x24
 800a448:	b01d      	add	sp, #116	; 0x74
 800a44a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a44e:	ab03      	add	r3, sp, #12
 800a450:	9300      	str	r3, [sp, #0]
 800a452:	462a      	mov	r2, r5
 800a454:	4b05      	ldr	r3, [pc, #20]	; (800a46c <_svfiprintf_r+0x1f4>)
 800a456:	a904      	add	r1, sp, #16
 800a458:	4638      	mov	r0, r7
 800a45a:	f000 f879 	bl	800a550 <_printf_i>
 800a45e:	e7eb      	b.n	800a438 <_svfiprintf_r+0x1c0>
 800a460:	0800aa39 	.word	0x0800aa39
 800a464:	0800aa43 	.word	0x0800aa43
 800a468:	00000000 	.word	0x00000000
 800a46c:	0800a1c5 	.word	0x0800a1c5
 800a470:	0800aa3f 	.word	0x0800aa3f

0800a474 <_printf_common>:
 800a474:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a478:	4616      	mov	r6, r2
 800a47a:	4699      	mov	r9, r3
 800a47c:	688a      	ldr	r2, [r1, #8]
 800a47e:	690b      	ldr	r3, [r1, #16]
 800a480:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800a484:	4293      	cmp	r3, r2
 800a486:	bfb8      	it	lt
 800a488:	4613      	movlt	r3, r2
 800a48a:	6033      	str	r3, [r6, #0]
 800a48c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800a490:	4607      	mov	r7, r0
 800a492:	460c      	mov	r4, r1
 800a494:	b10a      	cbz	r2, 800a49a <_printf_common+0x26>
 800a496:	3301      	adds	r3, #1
 800a498:	6033      	str	r3, [r6, #0]
 800a49a:	6823      	ldr	r3, [r4, #0]
 800a49c:	0699      	lsls	r1, r3, #26
 800a49e:	bf42      	ittt	mi
 800a4a0:	6833      	ldrmi	r3, [r6, #0]
 800a4a2:	3302      	addmi	r3, #2
 800a4a4:	6033      	strmi	r3, [r6, #0]
 800a4a6:	6825      	ldr	r5, [r4, #0]
 800a4a8:	f015 0506 	ands.w	r5, r5, #6
 800a4ac:	d106      	bne.n	800a4bc <_printf_common+0x48>
 800a4ae:	f104 0a19 	add.w	sl, r4, #25
 800a4b2:	68e3      	ldr	r3, [r4, #12]
 800a4b4:	6832      	ldr	r2, [r6, #0]
 800a4b6:	1a9b      	subs	r3, r3, r2
 800a4b8:	42ab      	cmp	r3, r5
 800a4ba:	dc26      	bgt.n	800a50a <_printf_common+0x96>
 800a4bc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800a4c0:	1e13      	subs	r3, r2, #0
 800a4c2:	6822      	ldr	r2, [r4, #0]
 800a4c4:	bf18      	it	ne
 800a4c6:	2301      	movne	r3, #1
 800a4c8:	0692      	lsls	r2, r2, #26
 800a4ca:	d42b      	bmi.n	800a524 <_printf_common+0xb0>
 800a4cc:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800a4d0:	4649      	mov	r1, r9
 800a4d2:	4638      	mov	r0, r7
 800a4d4:	47c0      	blx	r8
 800a4d6:	3001      	adds	r0, #1
 800a4d8:	d01e      	beq.n	800a518 <_printf_common+0xa4>
 800a4da:	6823      	ldr	r3, [r4, #0]
 800a4dc:	6922      	ldr	r2, [r4, #16]
 800a4de:	f003 0306 	and.w	r3, r3, #6
 800a4e2:	2b04      	cmp	r3, #4
 800a4e4:	bf02      	ittt	eq
 800a4e6:	68e5      	ldreq	r5, [r4, #12]
 800a4e8:	6833      	ldreq	r3, [r6, #0]
 800a4ea:	1aed      	subeq	r5, r5, r3
 800a4ec:	68a3      	ldr	r3, [r4, #8]
 800a4ee:	bf0c      	ite	eq
 800a4f0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800a4f4:	2500      	movne	r5, #0
 800a4f6:	4293      	cmp	r3, r2
 800a4f8:	bfc4      	itt	gt
 800a4fa:	1a9b      	subgt	r3, r3, r2
 800a4fc:	18ed      	addgt	r5, r5, r3
 800a4fe:	2600      	movs	r6, #0
 800a500:	341a      	adds	r4, #26
 800a502:	42b5      	cmp	r5, r6
 800a504:	d11a      	bne.n	800a53c <_printf_common+0xc8>
 800a506:	2000      	movs	r0, #0
 800a508:	e008      	b.n	800a51c <_printf_common+0xa8>
 800a50a:	2301      	movs	r3, #1
 800a50c:	4652      	mov	r2, sl
 800a50e:	4649      	mov	r1, r9
 800a510:	4638      	mov	r0, r7
 800a512:	47c0      	blx	r8
 800a514:	3001      	adds	r0, #1
 800a516:	d103      	bne.n	800a520 <_printf_common+0xac>
 800a518:	f04f 30ff 	mov.w	r0, #4294967295
 800a51c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a520:	3501      	adds	r5, #1
 800a522:	e7c6      	b.n	800a4b2 <_printf_common+0x3e>
 800a524:	18e1      	adds	r1, r4, r3
 800a526:	1c5a      	adds	r2, r3, #1
 800a528:	2030      	movs	r0, #48	; 0x30
 800a52a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800a52e:	4422      	add	r2, r4
 800a530:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800a534:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800a538:	3302      	adds	r3, #2
 800a53a:	e7c7      	b.n	800a4cc <_printf_common+0x58>
 800a53c:	2301      	movs	r3, #1
 800a53e:	4622      	mov	r2, r4
 800a540:	4649      	mov	r1, r9
 800a542:	4638      	mov	r0, r7
 800a544:	47c0      	blx	r8
 800a546:	3001      	adds	r0, #1
 800a548:	d0e6      	beq.n	800a518 <_printf_common+0xa4>
 800a54a:	3601      	adds	r6, #1
 800a54c:	e7d9      	b.n	800a502 <_printf_common+0x8e>
	...

0800a550 <_printf_i>:
 800a550:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800a554:	7e0f      	ldrb	r7, [r1, #24]
 800a556:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800a558:	2f78      	cmp	r7, #120	; 0x78
 800a55a:	4691      	mov	r9, r2
 800a55c:	4680      	mov	r8, r0
 800a55e:	460c      	mov	r4, r1
 800a560:	469a      	mov	sl, r3
 800a562:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800a566:	d807      	bhi.n	800a578 <_printf_i+0x28>
 800a568:	2f62      	cmp	r7, #98	; 0x62
 800a56a:	d80a      	bhi.n	800a582 <_printf_i+0x32>
 800a56c:	2f00      	cmp	r7, #0
 800a56e:	f000 80d4 	beq.w	800a71a <_printf_i+0x1ca>
 800a572:	2f58      	cmp	r7, #88	; 0x58
 800a574:	f000 80c0 	beq.w	800a6f8 <_printf_i+0x1a8>
 800a578:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800a57c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800a580:	e03a      	b.n	800a5f8 <_printf_i+0xa8>
 800a582:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800a586:	2b15      	cmp	r3, #21
 800a588:	d8f6      	bhi.n	800a578 <_printf_i+0x28>
 800a58a:	a101      	add	r1, pc, #4	; (adr r1, 800a590 <_printf_i+0x40>)
 800a58c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800a590:	0800a5e9 	.word	0x0800a5e9
 800a594:	0800a5fd 	.word	0x0800a5fd
 800a598:	0800a579 	.word	0x0800a579
 800a59c:	0800a579 	.word	0x0800a579
 800a5a0:	0800a579 	.word	0x0800a579
 800a5a4:	0800a579 	.word	0x0800a579
 800a5a8:	0800a5fd 	.word	0x0800a5fd
 800a5ac:	0800a579 	.word	0x0800a579
 800a5b0:	0800a579 	.word	0x0800a579
 800a5b4:	0800a579 	.word	0x0800a579
 800a5b8:	0800a579 	.word	0x0800a579
 800a5bc:	0800a701 	.word	0x0800a701
 800a5c0:	0800a629 	.word	0x0800a629
 800a5c4:	0800a6bb 	.word	0x0800a6bb
 800a5c8:	0800a579 	.word	0x0800a579
 800a5cc:	0800a579 	.word	0x0800a579
 800a5d0:	0800a723 	.word	0x0800a723
 800a5d4:	0800a579 	.word	0x0800a579
 800a5d8:	0800a629 	.word	0x0800a629
 800a5dc:	0800a579 	.word	0x0800a579
 800a5e0:	0800a579 	.word	0x0800a579
 800a5e4:	0800a6c3 	.word	0x0800a6c3
 800a5e8:	682b      	ldr	r3, [r5, #0]
 800a5ea:	1d1a      	adds	r2, r3, #4
 800a5ec:	681b      	ldr	r3, [r3, #0]
 800a5ee:	602a      	str	r2, [r5, #0]
 800a5f0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800a5f4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800a5f8:	2301      	movs	r3, #1
 800a5fa:	e09f      	b.n	800a73c <_printf_i+0x1ec>
 800a5fc:	6820      	ldr	r0, [r4, #0]
 800a5fe:	682b      	ldr	r3, [r5, #0]
 800a600:	0607      	lsls	r7, r0, #24
 800a602:	f103 0104 	add.w	r1, r3, #4
 800a606:	6029      	str	r1, [r5, #0]
 800a608:	d501      	bpl.n	800a60e <_printf_i+0xbe>
 800a60a:	681e      	ldr	r6, [r3, #0]
 800a60c:	e003      	b.n	800a616 <_printf_i+0xc6>
 800a60e:	0646      	lsls	r6, r0, #25
 800a610:	d5fb      	bpl.n	800a60a <_printf_i+0xba>
 800a612:	f9b3 6000 	ldrsh.w	r6, [r3]
 800a616:	2e00      	cmp	r6, #0
 800a618:	da03      	bge.n	800a622 <_printf_i+0xd2>
 800a61a:	232d      	movs	r3, #45	; 0x2d
 800a61c:	4276      	negs	r6, r6
 800a61e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800a622:	485a      	ldr	r0, [pc, #360]	; (800a78c <_printf_i+0x23c>)
 800a624:	230a      	movs	r3, #10
 800a626:	e012      	b.n	800a64e <_printf_i+0xfe>
 800a628:	682b      	ldr	r3, [r5, #0]
 800a62a:	6820      	ldr	r0, [r4, #0]
 800a62c:	1d19      	adds	r1, r3, #4
 800a62e:	6029      	str	r1, [r5, #0]
 800a630:	0605      	lsls	r5, r0, #24
 800a632:	d501      	bpl.n	800a638 <_printf_i+0xe8>
 800a634:	681e      	ldr	r6, [r3, #0]
 800a636:	e002      	b.n	800a63e <_printf_i+0xee>
 800a638:	0641      	lsls	r1, r0, #25
 800a63a:	d5fb      	bpl.n	800a634 <_printf_i+0xe4>
 800a63c:	881e      	ldrh	r6, [r3, #0]
 800a63e:	4853      	ldr	r0, [pc, #332]	; (800a78c <_printf_i+0x23c>)
 800a640:	2f6f      	cmp	r7, #111	; 0x6f
 800a642:	bf0c      	ite	eq
 800a644:	2308      	moveq	r3, #8
 800a646:	230a      	movne	r3, #10
 800a648:	2100      	movs	r1, #0
 800a64a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800a64e:	6865      	ldr	r5, [r4, #4]
 800a650:	60a5      	str	r5, [r4, #8]
 800a652:	2d00      	cmp	r5, #0
 800a654:	bfa2      	ittt	ge
 800a656:	6821      	ldrge	r1, [r4, #0]
 800a658:	f021 0104 	bicge.w	r1, r1, #4
 800a65c:	6021      	strge	r1, [r4, #0]
 800a65e:	b90e      	cbnz	r6, 800a664 <_printf_i+0x114>
 800a660:	2d00      	cmp	r5, #0
 800a662:	d04b      	beq.n	800a6fc <_printf_i+0x1ac>
 800a664:	4615      	mov	r5, r2
 800a666:	fbb6 f1f3 	udiv	r1, r6, r3
 800a66a:	fb03 6711 	mls	r7, r3, r1, r6
 800a66e:	5dc7      	ldrb	r7, [r0, r7]
 800a670:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800a674:	4637      	mov	r7, r6
 800a676:	42bb      	cmp	r3, r7
 800a678:	460e      	mov	r6, r1
 800a67a:	d9f4      	bls.n	800a666 <_printf_i+0x116>
 800a67c:	2b08      	cmp	r3, #8
 800a67e:	d10b      	bne.n	800a698 <_printf_i+0x148>
 800a680:	6823      	ldr	r3, [r4, #0]
 800a682:	07de      	lsls	r6, r3, #31
 800a684:	d508      	bpl.n	800a698 <_printf_i+0x148>
 800a686:	6923      	ldr	r3, [r4, #16]
 800a688:	6861      	ldr	r1, [r4, #4]
 800a68a:	4299      	cmp	r1, r3
 800a68c:	bfde      	ittt	le
 800a68e:	2330      	movle	r3, #48	; 0x30
 800a690:	f805 3c01 	strble.w	r3, [r5, #-1]
 800a694:	f105 35ff 	addle.w	r5, r5, #4294967295
 800a698:	1b52      	subs	r2, r2, r5
 800a69a:	6122      	str	r2, [r4, #16]
 800a69c:	f8cd a000 	str.w	sl, [sp]
 800a6a0:	464b      	mov	r3, r9
 800a6a2:	aa03      	add	r2, sp, #12
 800a6a4:	4621      	mov	r1, r4
 800a6a6:	4640      	mov	r0, r8
 800a6a8:	f7ff fee4 	bl	800a474 <_printf_common>
 800a6ac:	3001      	adds	r0, #1
 800a6ae:	d14a      	bne.n	800a746 <_printf_i+0x1f6>
 800a6b0:	f04f 30ff 	mov.w	r0, #4294967295
 800a6b4:	b004      	add	sp, #16
 800a6b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a6ba:	6823      	ldr	r3, [r4, #0]
 800a6bc:	f043 0320 	orr.w	r3, r3, #32
 800a6c0:	6023      	str	r3, [r4, #0]
 800a6c2:	4833      	ldr	r0, [pc, #204]	; (800a790 <_printf_i+0x240>)
 800a6c4:	2778      	movs	r7, #120	; 0x78
 800a6c6:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800a6ca:	6823      	ldr	r3, [r4, #0]
 800a6cc:	6829      	ldr	r1, [r5, #0]
 800a6ce:	061f      	lsls	r7, r3, #24
 800a6d0:	f851 6b04 	ldr.w	r6, [r1], #4
 800a6d4:	d402      	bmi.n	800a6dc <_printf_i+0x18c>
 800a6d6:	065f      	lsls	r7, r3, #25
 800a6d8:	bf48      	it	mi
 800a6da:	b2b6      	uxthmi	r6, r6
 800a6dc:	07df      	lsls	r7, r3, #31
 800a6de:	bf48      	it	mi
 800a6e0:	f043 0320 	orrmi.w	r3, r3, #32
 800a6e4:	6029      	str	r1, [r5, #0]
 800a6e6:	bf48      	it	mi
 800a6e8:	6023      	strmi	r3, [r4, #0]
 800a6ea:	b91e      	cbnz	r6, 800a6f4 <_printf_i+0x1a4>
 800a6ec:	6823      	ldr	r3, [r4, #0]
 800a6ee:	f023 0320 	bic.w	r3, r3, #32
 800a6f2:	6023      	str	r3, [r4, #0]
 800a6f4:	2310      	movs	r3, #16
 800a6f6:	e7a7      	b.n	800a648 <_printf_i+0xf8>
 800a6f8:	4824      	ldr	r0, [pc, #144]	; (800a78c <_printf_i+0x23c>)
 800a6fa:	e7e4      	b.n	800a6c6 <_printf_i+0x176>
 800a6fc:	4615      	mov	r5, r2
 800a6fe:	e7bd      	b.n	800a67c <_printf_i+0x12c>
 800a700:	682b      	ldr	r3, [r5, #0]
 800a702:	6826      	ldr	r6, [r4, #0]
 800a704:	6961      	ldr	r1, [r4, #20]
 800a706:	1d18      	adds	r0, r3, #4
 800a708:	6028      	str	r0, [r5, #0]
 800a70a:	0635      	lsls	r5, r6, #24
 800a70c:	681b      	ldr	r3, [r3, #0]
 800a70e:	d501      	bpl.n	800a714 <_printf_i+0x1c4>
 800a710:	6019      	str	r1, [r3, #0]
 800a712:	e002      	b.n	800a71a <_printf_i+0x1ca>
 800a714:	0670      	lsls	r0, r6, #25
 800a716:	d5fb      	bpl.n	800a710 <_printf_i+0x1c0>
 800a718:	8019      	strh	r1, [r3, #0]
 800a71a:	2300      	movs	r3, #0
 800a71c:	6123      	str	r3, [r4, #16]
 800a71e:	4615      	mov	r5, r2
 800a720:	e7bc      	b.n	800a69c <_printf_i+0x14c>
 800a722:	682b      	ldr	r3, [r5, #0]
 800a724:	1d1a      	adds	r2, r3, #4
 800a726:	602a      	str	r2, [r5, #0]
 800a728:	681d      	ldr	r5, [r3, #0]
 800a72a:	6862      	ldr	r2, [r4, #4]
 800a72c:	2100      	movs	r1, #0
 800a72e:	4628      	mov	r0, r5
 800a730:	f7f5 fd6e 	bl	8000210 <memchr>
 800a734:	b108      	cbz	r0, 800a73a <_printf_i+0x1ea>
 800a736:	1b40      	subs	r0, r0, r5
 800a738:	6060      	str	r0, [r4, #4]
 800a73a:	6863      	ldr	r3, [r4, #4]
 800a73c:	6123      	str	r3, [r4, #16]
 800a73e:	2300      	movs	r3, #0
 800a740:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800a744:	e7aa      	b.n	800a69c <_printf_i+0x14c>
 800a746:	6923      	ldr	r3, [r4, #16]
 800a748:	462a      	mov	r2, r5
 800a74a:	4649      	mov	r1, r9
 800a74c:	4640      	mov	r0, r8
 800a74e:	47d0      	blx	sl
 800a750:	3001      	adds	r0, #1
 800a752:	d0ad      	beq.n	800a6b0 <_printf_i+0x160>
 800a754:	6823      	ldr	r3, [r4, #0]
 800a756:	079b      	lsls	r3, r3, #30
 800a758:	d413      	bmi.n	800a782 <_printf_i+0x232>
 800a75a:	68e0      	ldr	r0, [r4, #12]
 800a75c:	9b03      	ldr	r3, [sp, #12]
 800a75e:	4298      	cmp	r0, r3
 800a760:	bfb8      	it	lt
 800a762:	4618      	movlt	r0, r3
 800a764:	e7a6      	b.n	800a6b4 <_printf_i+0x164>
 800a766:	2301      	movs	r3, #1
 800a768:	4632      	mov	r2, r6
 800a76a:	4649      	mov	r1, r9
 800a76c:	4640      	mov	r0, r8
 800a76e:	47d0      	blx	sl
 800a770:	3001      	adds	r0, #1
 800a772:	d09d      	beq.n	800a6b0 <_printf_i+0x160>
 800a774:	3501      	adds	r5, #1
 800a776:	68e3      	ldr	r3, [r4, #12]
 800a778:	9903      	ldr	r1, [sp, #12]
 800a77a:	1a5b      	subs	r3, r3, r1
 800a77c:	42ab      	cmp	r3, r5
 800a77e:	dcf2      	bgt.n	800a766 <_printf_i+0x216>
 800a780:	e7eb      	b.n	800a75a <_printf_i+0x20a>
 800a782:	2500      	movs	r5, #0
 800a784:	f104 0619 	add.w	r6, r4, #25
 800a788:	e7f5      	b.n	800a776 <_printf_i+0x226>
 800a78a:	bf00      	nop
 800a78c:	0800aa4a 	.word	0x0800aa4a
 800a790:	0800aa5b 	.word	0x0800aa5b

0800a794 <memmove>:
 800a794:	4288      	cmp	r0, r1
 800a796:	b510      	push	{r4, lr}
 800a798:	eb01 0402 	add.w	r4, r1, r2
 800a79c:	d902      	bls.n	800a7a4 <memmove+0x10>
 800a79e:	4284      	cmp	r4, r0
 800a7a0:	4623      	mov	r3, r4
 800a7a2:	d807      	bhi.n	800a7b4 <memmove+0x20>
 800a7a4:	1e43      	subs	r3, r0, #1
 800a7a6:	42a1      	cmp	r1, r4
 800a7a8:	d008      	beq.n	800a7bc <memmove+0x28>
 800a7aa:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a7ae:	f803 2f01 	strb.w	r2, [r3, #1]!
 800a7b2:	e7f8      	b.n	800a7a6 <memmove+0x12>
 800a7b4:	4402      	add	r2, r0
 800a7b6:	4601      	mov	r1, r0
 800a7b8:	428a      	cmp	r2, r1
 800a7ba:	d100      	bne.n	800a7be <memmove+0x2a>
 800a7bc:	bd10      	pop	{r4, pc}
 800a7be:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800a7c2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800a7c6:	e7f7      	b.n	800a7b8 <memmove+0x24>

0800a7c8 <_sbrk_r>:
 800a7c8:	b538      	push	{r3, r4, r5, lr}
 800a7ca:	4d06      	ldr	r5, [pc, #24]	; (800a7e4 <_sbrk_r+0x1c>)
 800a7cc:	2300      	movs	r3, #0
 800a7ce:	4604      	mov	r4, r0
 800a7d0:	4608      	mov	r0, r1
 800a7d2:	602b      	str	r3, [r5, #0]
 800a7d4:	f7f8 fb10 	bl	8002df8 <_sbrk>
 800a7d8:	1c43      	adds	r3, r0, #1
 800a7da:	d102      	bne.n	800a7e2 <_sbrk_r+0x1a>
 800a7dc:	682b      	ldr	r3, [r5, #0]
 800a7de:	b103      	cbz	r3, 800a7e2 <_sbrk_r+0x1a>
 800a7e0:	6023      	str	r3, [r4, #0]
 800a7e2:	bd38      	pop	{r3, r4, r5, pc}
 800a7e4:	200004f0 	.word	0x200004f0

0800a7e8 <memcpy>:
 800a7e8:	440a      	add	r2, r1
 800a7ea:	4291      	cmp	r1, r2
 800a7ec:	f100 33ff 	add.w	r3, r0, #4294967295
 800a7f0:	d100      	bne.n	800a7f4 <memcpy+0xc>
 800a7f2:	4770      	bx	lr
 800a7f4:	b510      	push	{r4, lr}
 800a7f6:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a7fa:	f803 4f01 	strb.w	r4, [r3, #1]!
 800a7fe:	4291      	cmp	r1, r2
 800a800:	d1f9      	bne.n	800a7f6 <memcpy+0xe>
 800a802:	bd10      	pop	{r4, pc}

0800a804 <_realloc_r>:
 800a804:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a808:	4680      	mov	r8, r0
 800a80a:	4614      	mov	r4, r2
 800a80c:	460e      	mov	r6, r1
 800a80e:	b921      	cbnz	r1, 800a81a <_realloc_r+0x16>
 800a810:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a814:	4611      	mov	r1, r2
 800a816:	f7ff bc49 	b.w	800a0ac <_malloc_r>
 800a81a:	b92a      	cbnz	r2, 800a828 <_realloc_r+0x24>
 800a81c:	f7ff fbda 	bl	8009fd4 <_free_r>
 800a820:	4625      	mov	r5, r4
 800a822:	4628      	mov	r0, r5
 800a824:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a828:	f000 f81b 	bl	800a862 <_malloc_usable_size_r>
 800a82c:	4284      	cmp	r4, r0
 800a82e:	4607      	mov	r7, r0
 800a830:	d802      	bhi.n	800a838 <_realloc_r+0x34>
 800a832:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800a836:	d812      	bhi.n	800a85e <_realloc_r+0x5a>
 800a838:	4621      	mov	r1, r4
 800a83a:	4640      	mov	r0, r8
 800a83c:	f7ff fc36 	bl	800a0ac <_malloc_r>
 800a840:	4605      	mov	r5, r0
 800a842:	2800      	cmp	r0, #0
 800a844:	d0ed      	beq.n	800a822 <_realloc_r+0x1e>
 800a846:	42bc      	cmp	r4, r7
 800a848:	4622      	mov	r2, r4
 800a84a:	4631      	mov	r1, r6
 800a84c:	bf28      	it	cs
 800a84e:	463a      	movcs	r2, r7
 800a850:	f7ff ffca 	bl	800a7e8 <memcpy>
 800a854:	4631      	mov	r1, r6
 800a856:	4640      	mov	r0, r8
 800a858:	f7ff fbbc 	bl	8009fd4 <_free_r>
 800a85c:	e7e1      	b.n	800a822 <_realloc_r+0x1e>
 800a85e:	4635      	mov	r5, r6
 800a860:	e7df      	b.n	800a822 <_realloc_r+0x1e>

0800a862 <_malloc_usable_size_r>:
 800a862:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800a866:	1f18      	subs	r0, r3, #4
 800a868:	2b00      	cmp	r3, #0
 800a86a:	bfbc      	itt	lt
 800a86c:	580b      	ldrlt	r3, [r1, r0]
 800a86e:	18c0      	addlt	r0, r0, r3
 800a870:	4770      	bx	lr
	...

0800a874 <_init>:
 800a874:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a876:	bf00      	nop
 800a878:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800a87a:	bc08      	pop	{r3}
 800a87c:	469e      	mov	lr, r3
 800a87e:	4770      	bx	lr

0800a880 <_fini>:
 800a880:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a882:	bf00      	nop
 800a884:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800a886:	bc08      	pop	{r3}
 800a888:	469e      	mov	lr, r3
 800a88a:	4770      	bx	lr
